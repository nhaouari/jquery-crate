[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "lib/controller/editor.js",
    "content": "\r\nvar Marker = require('../view/marker.js')\r\n\r\nwindow.Marker = Marker\r\n\r\n/**\r\n   * EditorController this the link between the core functions and the interface.\r\n   */\r\n\r\nclass EditorController {\r\n  \r\n\r\n  /**\r\n   * [constructor description]\r\n   * @param  {[doc]} model  this is the object that contains all proprieties of a document.    \r\n   * @param  {[string]} sessionID [description]\r\n   */\r\n  constructor(model, sessionID) {\r\n\r\n    \r\n    /**\r\n     * this is the object that contains all proprieties of a document.\r\n     * @type {[doc]}\r\n     */\r\n    this.model = model\r\n\r\n   /**\r\n    * markers contains all marks of the users: carets, avatars...\r\n    * @type {Marker[]}\r\n    */\r\n    this.markers ={}\r\n    /**\r\n     * startimer A timer used for sending pings\r\n     * @type {Timer}\r\n     */\r\n    this.startTimer= {}\r\n    /**\r\n     *  ViewEditor the used editor, here it is Quill editor \r\n     *  @see  https://quilljs.com/\r\n     * @type {Quill}\r\n     */\r\n    this.viewEditor= {};\r\n\r\n\r\n    this.loadDocument()\r\n\r\n    let commentOpt = quill.options.modules.comment\r\n\r\n    commentOpt.commentAddOn = this.markers[id].animal\r\n    commentOpt.commentAuthorId = this.model.uid\r\n    commentOpt.color = this.markers[id].colorRGB\r\n\r\n\r\n    this.startPing(2000)\r\n\r\n    jQuery(\"#saveicon\").click(function() {\r\n      this.saveDocument()\r\n    })\r\n    jQuery(\"#copyButton\").click(function() {\r\n      this.copyLink()\r\n    })\r\n    jQuery('#title').focusout(function() {\r\n      this.changeTitle()\r\n    })\r\n\r\n\r\n    // EDITOR listeners \r\n    this.viewEditor.on('selection-change', (range, oldRange, source) => {\r\n      if (range) {\r\n        this.model.core.caretMoved(range)\r\n      }\r\n    })\r\n\r\n    this.viewEditor.on('text-change', (delta, oldDelta, source) => {\r\n      this.textChange(delta, oldDelta, source)\r\n\r\n    })\r\n\r\n\r\n    // Core listeners \r\n    model.core.on('remoteInsert', (element, indexp) => {\r\n      this.remoteInsert(element, indexp)\r\n    })\r\n\r\n    model.core.on('remoteRemove', (index) => {\r\n      this.remoteRemove(index)\r\n    })\r\n\r\n    model.core.on('remoteCaretMoved', (range, origin) => {\r\n      this.remoteCaretMoved(range, origin)\r\n    })\r\n\r\n    model.core.on('remoteCaretMoved', (range, origin) => {\r\n      this.remoteCaretMoved(range, origin)\r\n    })\r\n\r\n    //At the reception of Title changed operation \r\n    model.core.on('changeTitle', (title) => {\r\n      jQuery('#title').text(title)\r\n    })\r\n\r\n    model.core.on('ping', (origin, pseudo) => {\r\n      this.atPing(origin, pseudo)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * loadDocument load the document if it exist in the local storage\r\n   * @return {[type]} [description]\r\n   */\r\n  loadDocument() {\r\n    this.viewEditor = quill\r\n    Marker.cursors = this.viewEditor.getModule('cursors')\r\n    jQuery(\"#editor\").attr('id', 'crate-' + id)\r\n\r\n    // Initilise the the editor content \r\n    //this.editor.setText('')\r\n    if (store.get(\"CRATE2-\" + sessionID)) {\r\n      var doc = store.get(\"CRATE2-\" + sessionID)\r\n      viewEditor.setContents(doc.delta, \"user\")\r\n      jQuery(\"#title\").text(doc.title)\r\n    }\r\n\r\n\r\n    // make title editable\r\n    jQuery('#title').click(function() {\r\n      jQuery('#title').attr('contenteditable', 'true')\r\n    })\r\n\r\n\r\n    if (store.get(\"CRATE2-\" + this.model.signalingOptions.session)) {\r\n      this.markers = store.get(\"CRATE2-\" + this.model.signalingOptions.session).markers\r\n\r\n      // convert the json objects to Marker object with functions \r\n      for (var property in this.markers) {\r\n        if (this.markers.hasOwnProperty(property)) {\r\n          this.markers[property] = Object.assign(new Marker(property), this.markers[property])\r\n          this.markers[property].cursor = false\r\n        }\r\n      }\r\n\r\n    } else {\r\n      this.markers = {}\r\n    }\r\n\r\n\r\n    this.model.markers = this.markers\r\n\r\n    //if (!this.markers[id]) { \r\n    //     console.log(\"Add mythis\")\r\n    //this.markers.push(id)\r\n    id = this.model.uid\r\n    this.markers[id] = new Marker(id, 5 * 1000, {\r\n      index: 0,\r\n      length: 0\r\n    }, this.viewEditor.getModule('cursors'), false, true)\r\n\r\n    if (store.get('myId')) {\r\n      this.markers[id].setPseudo(store.get('myId').pseudo)\r\n    } else {\r\n      store.set('myId', {\r\n        id: id,\r\n        pseudo: this.markers[id].pseudoName\r\n      })\r\n    }\r\n    this.UpdateComments()\r\n  }\r\n\r\n\r\n  /**\r\n   * saveDocument save the document in local storage\r\n   * @return {[type]} [description]\r\n   */\r\n  saveDocument() {\r\n    var timeNow = new Date().getTime()\r\n    var title = jQuery(\"#title\").text()\r\n    var document = {\r\n      date: timeNow,\r\n      title: title,\r\n      delta: this.viewEditor.editor.editor.delta,\r\n      sequence: this.model.sequence,\r\n      causality: this.model.causality,\r\n      name: this.model.name,\r\n      webRTCOptions: this.model.webRTCOptions,\r\n      markers: this.markers,\r\n      signalingOptions: this.model.signalingOptions\r\n    }\r\n    store.set(\"CRATE2-\" + this.model.signalingOptions.session, document)\r\n    alert(\"Document is saved successfully\")\r\n  }\r\n\r\n\r\n  /**\r\n   * copyLink copy the link of the document\r\n   * @return {[type]} [description]\r\n   */\r\n  copyLink() {\r\n    jQuery(\"#sessionUrl\").select()\r\n    document.execCommand(\"Copy\")\r\n  }\r\n\r\n\r\n  /**\r\n   * textChange description\r\n   * @param  {[type]} delta    [description]\r\n   * @param  {[type]} oldDelta [description]\r\n   * @param  {[type]} source   [description]\r\n   * @listens editor content changes\r\n   * @return {[type]}          [description]\r\n   */\r\n  textChange(delta, oldDelta, source) {\r\n\r\n    this.cleanQuill()\r\n\r\n    this.applyChanges(delta, 0)\r\n  }\r\n\r\n\r\n  /**\r\n   * applyChanges Send delta object with attributes character by character starting from  the position \"iniRetain\"  ]\r\n   * @param  {[type]} delta     [description]\r\n   * @param  {[type]} iniRetain [description]\r\n   * @return {[type]}           [description]\r\n   */\r\n  applyChanges(delta, iniRetain) {\r\n\r\n    let changes = JSON.parse(JSON.stringify(delta, null, 2))\r\n\r\n    let retain = iniRetain\r\n\r\n    let text = \"\"\r\n\r\n    changes.ops.forEach((op) => {\r\n      var operation = Object.keys(op)\r\n      var oper = \"\"\r\n      var att = \"\"\r\n      var value = \"\"\r\n\r\n      // extract attributes from the operation in the case of there existance\r\n      for (var i = operation.length - 1; i >= 0; i--) {\r\n        var v = op[operation[i]]\r\n        if (operation[i] === \"attributes\") {\r\n          att = v\r\n        } else {\r\n          oper = operation[i]\r\n          value = v\r\n\r\n        }\r\n      }\r\n\r\n      // Change the style = remove the word and insert again with attribues,  \r\n\r\n      // In the case of changing the style, delta will contain \"retain\" (the start postion) with attributes \r\n\r\n      var isItInsertWithAtt = false // to know if we have to update comments or not, if its delete because of changing style, no update comments is needed\r\n\r\n      retain = this.sendIt(text, att, 0, value, oper, retain, isItInsertWithAtt)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * sendIt Send the changes character by character \r\n   * @param  {[type]}  text              [description]\r\n   * @param  {[type]}  att               [description]\r\n   * @param  {[type]}  start             [description]\r\n   * @param  {[type]}  value             [description]\r\n   * @param  {[type]}  oper              [description]\r\n   * @param  {[type]}  retain            [description]\r\n   * @param  {Boolean} isItInsertWithAtt [description]\r\n   * @return {[type]}                    [description]\r\n   */\r\n  sendIt(text, att, start, value, oper, retain, isItInsertWithAtt) {\r\n    switch (oper) {\r\n      case \"retain\":\r\n        if (att != \"\") {\r\n          let isItInsertWithAtt = true\r\n\r\n          // the value in this case is the end of format \r\n\r\n          // insert the changed text with the new attributes\r\n\r\n          // 1 delete the changed text  from retain to value\r\n          this.sendIt(\"\", \"\", retain, value, \"delete\", retain, isItInsertWithAtt)\r\n\r\n          // 2 insert with attributes\r\n          var Deltat = this.viewEditor.editor.delta.slice(retain, retain + value)\r\n\r\n          this.applyChanges(Deltat, retain)\r\n\r\n        } else {\r\n          retain += value\r\n\r\n        }\r\n\r\n        // If there is attributes than delete and then insert   \r\n        break\r\n\r\n      case \"insert\":\r\n        text = value\r\n        // Insert character by character or by object for the other formats\r\n\r\n        // this is a formula\r\n        if (value.formula != undefined) {\r\n\r\n          att = this.viewEditor.getFormat(retain, 1)\r\n          this.model.core.insert({\r\n            type: 'formula',\r\n            text: value,\r\n            att: att\r\n          }, retain)\r\n        } else\r\n\r\n        {\r\n\r\n          // this is a video\r\n          if (value.video != undefined) {\r\n\r\n            att = this.viewEditor.getFormat(retain, 1)\r\n            this.model.core.insert({\r\n              type: 'video',\r\n              text: value,\r\n              att: att\r\n            }, retain)\r\n\r\n\r\n          } else {\r\n            // It is an image\r\n            if (value.image != undefined) {\r\n\r\n              att = this.viewEditor.getFormat(retain, 1)\r\n\r\n              this.model.core.insert({\r\n                type: 'image',\r\n                text: value,\r\n                att: att\r\n              }, retain)\r\n\r\n            } else { // text\r\n\r\n              for (var i = retain; i < (retain + text.length); ++i) {\r\n                att = this.viewEditor.getFormat(i, 1)\r\n                this.model.core.insert({\r\n                  type: 'char',\r\n                  text: text[i - retain],\r\n                  att: att\r\n                }, i)\r\n              }\r\n              retain = retain + text.length\r\n            }\r\n          }\r\n        }\r\n        break\r\n\r\n      case \"delete\":\r\n        var length = value\r\n\r\n        //to ensure that the editor contains just \\n without any attributes \r\n        if (!isItInsertWithAtt) {\r\n          this.UpdateComments()\r\n        }\r\n        if (start == 0) {\r\n          start = retain\r\n        }\r\n        // Delete caracter by caracter\r\n\r\n        for (var i = start; i < (start + length); ++i) {\r\n          this.model.core.remove(start)\r\n\r\n        }\r\n        break\r\n    }\r\n    return retain\r\n  }\r\n\r\n  /**\r\n   * remoteInsert At the reception of insert operation\r\n   * @param  {[type]} element [description]\r\n   * @param  {[type]} indexp  [description]\r\n   * @return {[type]}         [description]\r\n   */\r\n  remoteInsert(element, indexp) {\r\n    var index = indexp - 1\r\n    if (index !== -1) {\r\n      switch (element.type) {\r\n        case \"formula\":\r\n          this.viewEditor.insertEmbed(index, 'formula', element.text.formula, 'silent')\r\n\r\n          break\r\n        case \"image\":\r\n          this.viewEditor.insertEmbed(index, 'image', element.text.image, 'silent')\r\n\r\n          break\r\n        case \"video\":\r\n          this.viewEditor.insertEmbed(index, 'video', element.text.video, 'silent')\r\n\r\n          break\r\n        case \"char\":\r\n          this.viewEditor.insertText(index, element.text, element.att, 'silent')\r\n\r\n          if (element.text != \"\\n\") {\r\n            this.viewEditor.removeFormat(index, 1, 'silent')\r\n          }\r\n          break\r\n      }\r\n      if (element.att) {\r\n        if (element.text != \"\\n\") {\r\n          this.viewEditor.formatLine(index, element.att, 'silent')\r\n          this.viewEditor.formatText(index, 1, element.att, 'silent')\r\n        }\r\n\r\n        if (element.att.commentAuthor) {\r\n          this.UpdateComments()\r\n        }\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n    this.cleanQuill()\r\n\r\n  }\r\n\r\n  /**\r\n   * remoteRemove At the reception of remove operation\r\n   * @param  {[type]} index [description]\r\n   * @return {[type]}       [description]\r\n   */\r\n  remoteRemove(index) {\r\n    let removedIndex = index - 1\r\n    if (removedIndex !== -1) {\r\n      this.viewEditor.deleteText(removedIndex, 1, 'silent')\r\n      this.UpdateComments()\r\n    }\r\n    this.cleanQuill()\r\n  }\r\n\r\n\r\n  /**\r\n   * remoteCaretMoved At the reception of CARET position\r\n   * @param  {[type]} range  [description]\r\n   * @param  {[type]} origin [description]\r\n   * @return {[type]}        [description]\r\n   */\r\n  remoteCaretMoved(range, origin) {\r\n\r\n    if (!origin) return\r\n\r\n    if (this.markers[origin]) {\r\n      this.markers[origin].update(range, true) // to keep avatar\r\n\r\n    } else { // to crevat the avatar\r\n      //this.markers.push(origin)\r\n      this.markers[origin] = new Marker(origin, 5 * 1000, range, editor.getModule('cursors'), false)\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * cleanQuill description\r\n   * @return {[type]} [description]\r\n   */\r\n  cleanQuill() {\r\n\r\n    /*\r\n           delta = quill.editor.delta\r\n           console.log('before clean')\r\n           console.dir(delta)\r\n           \r\n           lastOperation=delta.ops.length-1\r\n           if (delta.ops[lastOperation].insert=='\\n' && lastOperation != 0) {\r\n\r\n            attributes= delta.ops[lastOperation].attributes\r\n            delete delta.ops[lastOperation]  \r\n\r\n            //delta.ops.splice(length-1,1)\r\n\r\n           if(lastOperation-1 != 0 && delta.ops[lastOperation-1]) {\r\n              delta.ops[lastOperation-1].attributes=attributes\r\n            }\r\n\r\n            }\r\n\r\n           /*if (delta.ops[0].insert=='\\n' &&  quill.getLength() <=2) {\r\n            delta.ops[0].attributes={}\r\n            }\r\n\r\n           console.log('after clean')\r\n           console.dir(delta)\r\n             \r\n          //quill.setContents(delta,'silent')*/\r\n  }\r\n\r\n\r\n  /**\r\n   * changeTitle For any change in title, broadcast the new title\r\n   * @return {[type]} [description]\r\n   */\r\n  changeTitle() {\r\n    jQuery('#title').attr('contenteditable', 'false')\r\n    if (jQuery('#title').text() == \"\") {\r\n      jQuery('#title').text('Untitled document')\r\n    }\r\n    model.name = jQuery('#title').text()\r\n    //TODO: Optimize change only if the text is changed from last state \r\n    model.core.sendChangeTitle(jQuery('#title').text())\r\n  }\r\n\r\n\r\n  /**\r\n   * startPing send periodically ping\r\n   * @param  {[type]} interval [description]\r\n   * @return {[type]}          [description]\r\n   * @todo TODO: Make interval as global parameter\r\n   */\r\n  startPing(interval) {\r\n    this.startTimer = setInterval(() => {\r\n      this.model.core.sendPing()\r\n    }, interval)\r\n  }\r\n\r\n  /**\r\n   * stopPing stopPing\r\n   * @todo  implement this function\r\n   * @return {[type]} [description]\r\n   */\r\n  stopPing() {\r\n\r\n  }\r\n\r\n  /**\r\n   * atPing at the reception of ping\r\n   * @param  {[type]} origin [description]\r\n   * @param  {[type]} pseudo [description]\r\n   * @return {[type]}        [description]\r\n   */\r\n  atPing(origin, pseudo) {\r\n    if (this.markers[origin]) {\r\n      this.markers[origin].update(null, false) // to keep avatar\r\n      this.markers[origin].setPseudo(pseudo)\r\n\r\n    } else { // to create the avatar\r\n      //this.markers.push(origin)\r\n      this.markers[origin] = new Marker(origin, 5 * 1000, {\r\n        index: 0,\r\n        length: 0\r\n      }, this.viewEditor.getModule('cursors'), false, false)\r\n      this.markers[origin].setPseudo(pseudo)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * UpdateComments This function to extract the comments form the editor and show them in #comments\r\n   */\r\n  UpdateComments() {\r\n    // clear comments \r\n    jQuery(\"#comments\").empty()\r\n    // for each insert check att if it contains the author then insert comment \r\n    quill.editor.delta.ops.forEach(function(op) {\r\n      if (op.insert) {\r\n        if (op.attributes) {\r\n          if (op.attributes.commentAuthor) {\r\n            var id = op.attributes.commentAuthor\r\n            //\r\n\r\n\r\n            if (this.markers[id]) {\r\n              m = this.markers[id]\r\n            } else {\r\n              m = new Marker(id)\r\n            }\r\n            animal = m.animal\r\n            pseudoName = m.pseudoName\r\n            colorRGB = m.colorRGB\r\n\r\n            addCommentToList(op.attributes.comment, id, animal, pseudoName, colorRGB, op.attributes.commentTimestamp)\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nmodule.exports = EditorController",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/controller/editor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "EditorController",
    "memberof": "lib/controller/editor.js",
    "static": true,
    "longname": "lib/controller/editor.js~EditorController",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/controller/editor.js",
    "importStyle": "EditorController",
    "description": "EditorController this the link between the core functions and the interface.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#constructor",
    "access": "public",
    "description": "[constructor description]",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "[doc]"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "this is the object that contains all proprieties of a document."
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "sessionID",
        "description": "[description]"
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "model",
    "memberof": "lib/controller/editor.js~EditorController",
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#model",
    "access": "public",
    "description": "this is the object that contains all proprieties of a document.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "[doc]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "markers",
    "memberof": "lib/controller/editor.js~EditorController",
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#markers",
    "access": "public",
    "description": "markers contains all marks of the users: carets, avatars...",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Marker[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "startTimer",
    "memberof": "lib/controller/editor.js~EditorController",
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#startTimer",
    "access": "public",
    "description": "startimer A timer used for sending pings",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Timer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "viewEditor",
    "memberof": "lib/controller/editor.js~EditorController",
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#viewEditor",
    "access": "public",
    "description": " ViewEditor the used editor, here it is Quill editor ",
    "see": [
      " https://quilljs.com/"
    ],
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "Quill"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "loadDocument",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#loadDocument",
    "access": "public",
    "description": "loadDocument load the document if it exist in the local storage",
    "lineNumber": 111,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "params": []
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "saveDocument",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#saveDocument",
    "access": "public",
    "description": "saveDocument save the document in local storage",
    "lineNumber": 174,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "params": []
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "copyLink",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#copyLink",
    "access": "public",
    "description": "copyLink copy the link of the document",
    "lineNumber": 197,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "params": []
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "textChange",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#textChange",
    "access": "public",
    "description": "textChange description",
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "oldDelta",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "listens": [
      {
        "types": [
          "*"
        ],
        "description": "editor content changes"
      }
    ]
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "applyChanges",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#applyChanges",
    "access": "public",
    "description": "applyChanges Send delta object with attributes character by character starting from  the position \"iniRetain\"  ]",
    "lineNumber": 225,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "iniRetain",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "sendIt",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#sendIt",
    "access": "public",
    "description": "sendIt Send the changes character by character ",
    "lineNumber": 272,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "att",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "oper",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "retain",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isItInsertWithAtt",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "remoteInsert",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#remoteInsert",
    "access": "public",
    "description": "remoteInsert At the reception of insert operation",
    "lineNumber": 381,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "indexp",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "remoteRemove",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#remoteRemove",
    "access": "public",
    "description": "remoteRemove At the reception of remove operation",
    "lineNumber": 429,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "remoteCaretMoved",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#remoteCaretMoved",
    "access": "public",
    "description": "remoteCaretMoved At the reception of CARET position",
    "lineNumber": 445,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "range",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "cleanQuill",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#cleanQuill",
    "access": "public",
    "description": "cleanQuill description",
    "lineNumber": 463,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "params": []
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "changeTitle",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#changeTitle",
    "access": "public",
    "description": "changeTitle For any change in title, broadcast the new title",
    "lineNumber": 499,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "params": []
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "startPing",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#startPing",
    "access": "public",
    "description": "startPing send periodically ping",
    "lineNumber": 516,
    "todo": [
      "TODO: Make interval as global parameter"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "stopPing",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#stopPing",
    "access": "public",
    "description": "stopPing stopPing",
    "lineNumber": 527,
    "todo": [
      " implement this function"
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "params": []
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "atPing",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#atPing",
    "access": "public",
    "description": "atPing at the reception of ping",
    "lineNumber": 537,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "pseudo",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "UpdateComments",
    "memberof": "lib/controller/editor.js~EditorController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/controller/editor.js~EditorController#UpdateComments",
    "access": "public",
    "description": "UpdateComments This function to extract the comments form the editor and show them in #comments",
    "lineNumber": 555,
    "params": [],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "lib/controller/statesheader.js",
    "content": "require('jquery-qrcode');\r\n\r\nfunction StatesHeader(model, statesView, linkView, shareView){\r\n    var self = this;\r\n    this.model = model;\r\n    this.statesView = statesView;\r\n\r\n    this.startSharingText = '<i class=\"fa fa-link fa-2x ficon2\"></i>';\r\n    this.startSharingTooltip = 'start sharing';\r\n    this.stopSharingText = '<i class=\"fa fa-unlink fa-2x ficon2\"></i>';\r\n    this.stopSharingTooltip = 'stop sharing';\r\n    \r\n\r\n    model.rps.on(\"statechange\", function(state){\r\n        switch (state){\r\n        case 'connected': statesView.setNetworkState('connected'); break;\r\n        case 'partially connected': statesView.setNetworkState('partiallyConnected'); break;\r\n        case 'disconnected': statesView.setNetworkState('disconnected'); break;\r\n        };\r\n    });\r\n   \r\n    shareView.click( function(){\r\n        var socket, action, client;\r\n        if (model.signaling.startedSocket){\r\n            model.signaling.stopSharing();\r\n            return ; // ugly as hell\r\n        };\r\n        // #0 create the proper call to the server\r\n        socket = model.signaling.startSharing();\r\n        statesView.setSignalingState(\"waitSignaling\");\r\n        \r\n        socket.on(\"connect\", function(){\r\n            shareView.removeAttr(\"disabled\");\r\n            statesView.setSignalingState(\"waitJoiners\");\r\n            shareView.html(self.stopSharingText);\r\n            shareView.attr('title', self.stopSharingTooltip)\r\n                .tooltip('fixTitle');\r\n        });\r\n        socket.on(\"disconnect\", function(){\r\n            shareView.html(self.startSharingText);\r\n            shareView.attr('title', self.startSharingTooltip)\r\n                .tooltip('fixTitle');\r\n            jQuery(\"#linkContainer\").hide();\r\n        });\r\n        shareView.attr(\"disabled\",\"disabled\");\r\n        // #1 modify the view\r\n        // #A clean the address from args\r\n        if (model.signaling.startedSocket){\r\n            // #B add the new argument\r\n            var address = (window.location.href).split('?')[0];\r\n            action = linkView.printLink(address +\"?\"+\r\n                                        model.signalingOptions.session);\r\n        };        \r\n    });\r\n\r\n\r\n    linkView.qrcode.click(function(){\r\n        var address = (window.location.href).split('?')[0];\r\n        address = address + \"?\" + model.signalingOptions.session;\r\n        linkView.qrcodeCanvas.html(\"\");\r\n        linkView.qrcodeCanvas.qrcode({\r\n            size:400,\r\n            text:address\r\n        });\r\n    });    \r\n};\r\n\r\nStatesHeader.prototype.startJoining = function(signalingOptions){\r\n    var socket = this.model.signaling.startJoining(signalingOptions);\r\n    this.statesView.setSignalingState('waitSignaling');\r\n    \r\n    var self = this;\r\n    socket.on('connect',\r\n              function(){ self.statesView.setSignalingState('waitSharer'); });\r\n};\r\n\r\nmodule.exports = StatesHeader;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/controller/statesheader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "startJoining",
    "memberof": "lib/controller/statesheader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/controller/statesheader.js~startJoining",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/controller/statesheader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "signalingOptions",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "StatesHeader",
    "memberof": "lib/controller/statesheader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/controller/statesheader.js~StatesHeader",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/controller/statesheader.js",
    "importStyle": "StatesHeader",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "statesView",
        "types": [
          "*"
        ]
      },
      {
        "name": "linkView",
        "types": [
          "*"
        ]
      },
      {
        "name": "shareView",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "content": "\r\nvar Spray = require(\"spray-wrtc\");\r\nvar CausalBroadcast = require(\"causal-broadcast-definition\");\r\nvar VVwE = require(\"version-vector-with-exceptions\");\r\n\r\nvar opts = {deltatime: 1000*60*1,\r\n            webrtc: {trickle:true}};\r\n\r\nvar rps1 = new Spray(opts);\r\nvar rps2 = new Spray(opts);\r\nvar rps3 = new Spray(opts);\r\nvar vvwe1 = new VVwE(1);\r\nvar vvwe2 = new VVwE(2);\r\nvar vvwe3 = new VVwE(3);\r\nvar broadcast1 = new CausalBroadcast(rps1,vvwe1);\r\nvar broadcast2 = new CausalBroadcast(rps2,vvwe2);\r\nvar broadcast3 = new CausalBroadcast(rps3,vvwe3);\r\n\r\n// #A establish connection between the peers\r\nvar callbacks = function(src, dest){\r\n    return {\r\n        onInitiate: function(offer){\r\n            dest.connection(callbacks(dest, src), offer);\r\n        },\r\n        onAccept: function(offer){\r\n            dest.connection(offer);\r\n        },\r\n        onReady: function(){\r\n            console.log(\"Connection established\");\r\n        }\r\n    };\r\n};\r\n\r\nbroadcast1.send(\"Hi from b1\", {_e:1, _c:2})\r\n// #1 s1 joins s2 and creates a 2-peers networks\r\nrps1.connection(callbacks(rps1, rps2));\r\n// #2 after a bit, s3 joins the network through s1\r\nsetTimeout(function(){\r\n    rps3.connection(callbacks(rps3, rps1));\r\n}, 5000);\r\n\r\n// #B receive event log the message\r\nfunction rcv(peer){\r\n    return function(message){ console.log('@'+peer+' :' + message); };\r\n};\r\n\r\nbroadcast1.on('receive', rcv('b1'));\r\nbroadcast2.on('receive', rcv('b2'));\r\nbroadcast3.on('receive', rcv('b3'));\r\n\r\n// #C send a message from peer 1 to all other connected peers\r\nsetTimeout(function(){\r\n    broadcast1.send('Hi from b1', {_e:1, _c:1})\r\n}, 10000);\r\n\r\n// #D anti entropy\r\nbroadcast1.on('antiEntropy', function(id, rcvCausality, lclCausality){\r\n    console.log('@b1 : received anti-entropy request from @'+id);\r\n//    console.log('Received vector' + rcvCausality);\r\n//    console.log('Local vector' + lclCausality);\r\n});\r\n\r\n                             \r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "opts",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~opts",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"deltatime\": *, \"webrtc\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "rps1",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~rps1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "rps2",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~rps2",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "rps3",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~rps3",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "vvwe1",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~vvwe1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "vvwe2",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~vvwe2",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "vvwe3",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~vvwe3",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "broadcast1",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~broadcast1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "broadcast2",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~broadcast2",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "broadcast3",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~broadcast3",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "callbacks",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~callbacks",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      },
      {
        "name": "dest",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"onInitiate\": *, \"onAccept\": *, \"onReady\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "rcv",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/example/main.js~rcv",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "peer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "file",
    "name": "lib/crate-core/lib/CausalBroadcastDefinition/lib/guid.js",
    "content": "/*\r\n * \\url https://github.com/justayak/yutils/blob/master/yutils.js\r\n * \\author justayak\r\n */\r\n\r\n/*!\r\n * \\brief get a globally unique (with high probability) identifier\r\n * \\return a string being the identifier\r\n */\r\nvar shortid = require('shortid'); \r\nfunction GUID(){\r\n  /*  var d = new Date().getTime();\r\n    var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;*/\r\n\r\n    return shortid.generate();\r\n};\r\n\r\nmodule.exports = GUID;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/guid.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "GUID",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/guid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/guid.js~GUID",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/guid.js",
    "importStyle": "GUID",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "content": "const S = require('spray-wrtc');\r\nconst U = require('unicast-definition');\r\n\r\n// #1 create 3 peers\r\nconst s1 = new S({config:{trickle:true}});\r\nconst s2 = new S({config:{trickle:true}});\r\nconst s3 = new S({config:{trickle:true}});\r\n// #2 associate a unicast protocol to each peer\r\nconst u1 = new U(s1, {retry:1, pid:'1'});\r\nconst u2 = new U(s2, {retry:1, pid:'1'});\r\nconst u3 = new U(s3, {retry:1, pid:'1'});\r\n\r\nu1.on('meow',(i, am, a, cat) => console.log('@s1: %s %s %s %s', i, am, a, cat));\r\nu2.on('meow',(i, am, a, cat) => console.log('@s2: %s %s %s %s', i, am, a, cat));\r\nu3.on('meow',(i, am, a, cat) => console.log('@s3: %s %s %s %s', i, am, a, cat));\r\n\r\n\r\nconst u4 = new U(s1, {retry:1, pid:'2'});\r\nconst u5 = new U(s2, {retry:1, pid:'2'});\r\nconst u6 = new U(s3, {retry:1, pid:'2'});\r\n\r\n\r\nu4.on(':3',(i, is, cat) => console.log('@s1: miaw'));\r\nu5.on(':3',(i, is, cat) => console.log('@s2: meow'));\r\nu6.on(':3',(i, is, cat) => console.log('@s3: miou'));\r\n\r\n// #4 simulate signaling server\r\nconst callback = (from, to) => {\r\n    return (offer) => {\r\n        to.connect( (answer) => { from.connect(answer); }, offer);\r\n    };\r\n};\r\n\r\n// #4 s1 contacts s2, 2-peers network\r\ns1.join(callback(s1, s2)).then(console.log('s1 <=> s2.'));\r\n// #5 s3 contacts s2, 3-peers network\r\nsetTimeout( () => s3.join(callback(s3, s2))\r\n            .then(console.log('s1 <=> s2; s1 -> s3; s3 -> s2')),\r\n            4000);\r\n// #6 s2 should log 2 different messages.\r\nsetTimeout( () => u3.emit('meow',\r\n                            s3.getPeers(1)[0], 'i', 'am', 'a', 'cat')\r\n            .then(u3.emit(':3',\r\n                            s3.getPeers(1)[0], 'parameters', 'dont', 'matter'))\r\n            .then(u6.emit(':3',\r\n                            s3.getPeers(1)[0], 'parameters', 'dont', 'matter')),\r\n            6000);\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "s1",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~s1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "s2",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~s2",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "s3",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~s3",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "u1",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~u1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "u2",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~u2",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "u3",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~u3",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "u4",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~u4",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "u5",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~u5",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "u6",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~u6",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "callback",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js~callback",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/examples/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/interfaces/ipsp.js",
    "content": "'use strict';\r\n\r\n/**\r\n * Interface that peer-sampling protocol must implement for this module to work.\r\n */\r\nclass IPSP {\r\n\r\n    /**\r\n     * Send a message to a peer.\r\n     * @param {string} peerId The identifier of the peer to send the message to.\r\n     * @param {object} message The message to send.\r\n     * @param {number} [retry = 0] Retry to send the message once per second\r\n     * during retry milliseconds\r\n     * @return {Promise} Resolved if the message has been sent, rejected\r\n     * otherwise.\r\n     */\r\n    send (peerId, message, retry = 0) {};\r\n\r\n    /**\r\n     * Receive a message from a peer.\r\n     * @param {string} peerId The identifier of the peer that sent the message.\r\n     * @param {object} message The message received.\r\n     */\r\n    _receive(peerId, message) {};\r\n};\r\n\r\nmodule.exports = IPSP;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/interfaces/ipsp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "class",
    "name": "IPSP",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/interfaces/ipsp.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/interfaces/ipsp.js~IPSP",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/interfaces/ipsp.js",
    "importStyle": "IPSP",
    "description": "Interface that peer-sampling protocol must implement for this module to work.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "send",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/interfaces/ipsp.js~IPSP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/interfaces/ipsp.js~IPSP#send",
    "access": "public",
    "description": "Send a message to a peer.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "peerId",
        "description": "The identifier of the peer to send the message to."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The message to send."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0",
        "defaultRaw": 0,
        "name": "retry",
        "description": "Retry to send the message once per second\nduring retry milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolved if the message has been sent, rejected\notherwise."
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "_receive",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/interfaces/ipsp.js~IPSP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/interfaces/ipsp.js~IPSP#_receive",
    "access": "private",
    "description": "Receive a message from a peer.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "peerId",
        "description": "The identifier of the peer that sent the message."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The message received."
      }
    ],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js",
    "content": "'use strict';\r\n\r\n/**\r\n * Message that triggers an event remotely for the protocol.\r\n */\r\nclass MUnicast {\r\n    /**\r\n     * @param {string} protocolId The identifier of the unicast protocol.\r\n     * @param {string} eventName The name of the event to trigger.\r\n     * @param {object[]} [args] The arguments of the event.\r\n     */\r\n    constructor(protocolId, eventName, args){\r\n        this.pid = protocolId;\r\n        this.event = eventName;\r\n        this.args = args;\r\n        this.type = 'MUnicast';\r\n    };\r\n};\r\n\r\nmodule.exports = MUnicast;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "class",
    "name": "MUnicast",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js",
    "static": true,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js",
    "importStyle": "MUnicast",
    "description": "Message that triggers an event remotely for the protocol.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 109,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "protocolId",
        "description": "The identifier of the unicast protocol."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventName",
        "description": "The name of the event to trigger."
      },
      {
        "nullable": null,
        "types": [
          "object[]"
        ],
        "spread": false,
        "optional": true,
        "name": "args",
        "description": "The arguments of the event."
      }
    ]
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "pid",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast",
    "static": false,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast#pid",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "event",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast",
    "static": false,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast#event",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "args",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast",
    "static": false,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast#args",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "type",
    "memberof": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast",
    "static": false,
    "longname": "lib/crate-core/lib/CausalBroadcastDefinition/lib/unicast-definition/lib/messages/municast.js~MUnicast#type",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "lib/crate-core/lib/guid.js",
    "content": "/*\r\n * \\url https://github.com/justayak/yutils/blob/master/yutils.js\r\n * \\author justayak\r\n */\r\n\r\n/*!\r\n * \\brief get a globally unique (with high probability) identifier\r\n * \\return a string being the identifier\r\n */\r\n\r\nvar shortid = require('shortid'); \r\n\r\nfunction GUID(){\r\n  /*  var d = new Date().getTime();\r\n    var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;*/\r\n    \r\n    return shortid.generate();\r\n};\r\n\r\nmodule.exports = GUID;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/guid.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "GUID",
    "memberof": "lib/crate-core/lib/guid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/guid.js~GUID",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/guid.js",
    "importStyle": "GUID",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "lib/crate-core/lib/LSEQTree/lib/base.js",
    "content": "var BI = require('BigInt');\r\n\r\n/*!\r\n * \\class Base\r\n * \\brief provides basic function to bit manipulation\r\n * \\param b the number of bits at level 0 of the dense space\r\n */\r\nfunction Base(b){    \r\n    var DEFAULT_BASE = 3;\r\n    this._b = b || DEFAULT_BASE;\r\n};\r\n\r\n/*!\r\n * \\brief Process the number of bits usage at a certain level of dense space\r\n * \\param level the level in dense space, i.e., the number of concatenation\r\n */\r\nBase.prototype.getBitBase = function(level){\r\n    return this._b + level;\r\n};\r\n\r\n/*!\r\n * \\brief Process the total number of bits usage to get to a certain level\r\n * \\param level the level in dense space\r\n */\r\nBase.prototype.getSumBit = function(level){\r\n    var n = this.getBitBase(level),\r\n        m = this._b-1;\r\n    return (n * (n + 1)) / 2 - (m * (m + 1) / 2);\r\n};\r\n\r\n/*!\r\n  \\brief process the interval between two LSEQNode\r\n  \\param p the previous LSEQNode\r\n  \\param q the next LSEQNode\r\n  \\param level the depth of the tree to process\r\n  \\return an integer which is the interval between the two node at the depth\r\n*/\r\nBase.prototype.getInterval = function(p, q, level){\r\n    var sum = 0, i = 0,\r\n        pIsGreater = false, commonRoot = true,\r\n        prevValue = 0, nextValue = 0;\r\n    \r\n    while (i<=level){\r\n        prevValue = 0; if (p !== null){ prevValue = p.t.p; }\r\n        nextValue = 0; if (q !== null){ nextValue = q.t.p; }\r\n        if (commonRoot && prevValue !== nextValue){\r\n            commonRoot = false;\r\n            pIsGreater = prevValue > nextValue;\r\n        }\r\n        if (pIsGreater){ nextValue = Math.pow(2,this.getBitBase(i))-1; }\r\n        if (commonRoot || pIsGreater || i!==level){\r\n            sum += nextValue - prevValue; \r\n        } else {\r\n            sum += nextValue - prevValue - 1;\r\n        }\r\n        if (i!==level){\r\n            sum *= Math.pow(2,this.getBitBase(i+1));\r\n        };\r\n        if (p!==null && p.children.length!==0){p=p.children[0];} else{p=null;};\r\n        if (q!==null && q.children.length!==0){q=q.children[0];} else{q=null;};\r\n        ++i;\r\n    }\r\n    return sum;\r\n};\r\n\r\nBase.instance = null;\r\n\r\nmodule.exports = function(args){\r\n    if (args){\r\n        Base.instance = new Base(args);\r\n    } else {\r\n        if (Base.instance === null){\r\n            Base.instance = new Base();\r\n        };\r\n    };\r\n    return Base.instance;\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/LSEQTree/lib/base.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "Base",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/base.js~Base",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "getBitBase",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/base.js~getBitBase",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "level",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "getSumBit",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/base.js~getSumBit",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "level",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "getInterval",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/base.js~getInterval",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/base.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "p",
        "types": [
          "*"
        ]
      },
      {
        "name": "q",
        "types": [
          "*"
        ]
      },
      {
        "name": "level",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "base",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/base.js~base",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/base.js",
    "importStyle": "base",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "content": "var Triple = require('./triple.js');\r\nrequire('./util.js');\r\n\r\n/*!\r\n * \\brief a node of the LSEQ tree\r\n * \\param tripleList the list of triple composing the path to the element\r\n * \\param element the element to insert in the structure\r\n */\r\nfunction LSEQNode(tripleList, element){\r\n    this.t = tripleList.shift();\r\n    if (tripleList.length === 0){\r\n        this.e = element;\r\n        this.subCounter = 0; // count the number of children and subchildren\r\n        this.children = [];\r\n    } else {\r\n        this.e = null;\r\n        this.subCounter = 1;\r\n        this.children = [];\r\n        this.children.push(new LSEQNode(tripleList, element));\r\n    };\r\n};\r\n\r\n/*!\r\n * \\brief add a path element to the current node\r\n * \\param node the node to add as a children of this node\r\n * \\return -1 if the element already exists\r\n */\r\nLSEQNode.prototype.add = function(node){\r\n    var index = this.children.binaryIndexOf(node);\r\n    \r\n    // #1 if the path do no exist, create it\r\n    if (index < 0 || this.children.length === 0  ||\r\n        (index === 0 && this.children.length > 0 && \r\n         this.children[0].compare(node)!==0)){\r\n        this.children.splice(-index, 0, node);\r\n        this.subCounter+=1;\r\n    } else {\r\n        // #2 otherwise, continue to explore the subtrees\r\n        if (node.children.length === 0){\r\n            // #2a check if the element already exists\r\n            if (this.children[index].e !== null){\r\n                return -1;\r\n            } else {\r\n                this.children[index].e = node.e;\r\n                this.subCounter+=1;\r\n            };\r\n        } else {\r\n            // #3 if didnot exist, increment the counter\r\n            if (this.children[index].add(node.children[0])!==-1){\r\n                this.subCounter+=1;\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\n/*! \r\n * \\brief remove the node of the tree and all node within path being useless\r\n * \\param node the node containing the path to remove\r\n * \\return -1 if the node does not exist\r\n */\r\nLSEQNode.prototype.del = function(node){\r\n    var indexes = this.getIndexes(node),\r\n        currentTree = this, i = 0, isSplitted = false;\r\n\r\n    if (indexes === -1) { return -1; }; // it does not exists\r\n    this.subCounter -= 1;\r\n    while (i < indexes.length && !(isSplitted)){\r\n        if (!(currentTree.children[indexes[i]].e !== null &&\r\n              i===(indexes.length - 1))){\r\n            currentTree.children[indexes[i]].subCounter -= 1;     \r\n        };\r\n        if (currentTree.children[indexes[i]].subCounter <= 0\r\n            && (currentTree.children[indexes[i]].e === null ||\r\n                (currentTree.children[indexes[i]].e !== null &&\r\n                 i===(indexes.length - 1)))){\r\n            currentTree.children.splice(indexes[i],1);\r\n            isSplitted = true;\r\n        };\r\n        currentTree = currentTree.children[indexes[i]];\r\n        ++i;\r\n    };\r\n    if (!isSplitted){ currentTree.e = null;};\r\n};\r\n\r\n/*!\r\n * \\brief comparison function used to order the list of children at each node\r\n * \\param o the other node to compare with\r\n */\r\nLSEQNode.prototype.compare = function(o){\r\n    return this.t.compare(o.t);\r\n};\r\n\r\n/*!\r\n * \\brief the ordered tree can be linearized into a sequence. This function get\r\n * the index of the path represented by the list of triples\r\n * \\param node the node containing the path\r\n * \\return the index of the path in the node\r\n */\r\nLSEQNode.prototype.indexOf = function(node){\r\n    var indexes = this.getIndexes(node),\r\n        sum = 0, currentTree = this,\r\n        j = 0;\r\n    if (indexes === -1){return -1;}; // node does not exist\r\n    if (this.e !== null){ sum +=1; };\r\n    \r\n    for (var i = 0; i<indexes.length; ++i){\r\n        if (indexes[i] < (currentTree.children.length/2)){\r\n            // #A start from the beginning\r\n            for (var j = 0; j<indexes[i]; ++j){\r\n                if (currentTree.children[j].e !== null){ sum+=1; };\r\n                sum += currentTree.children[j].subCounter;\r\n            };\r\n        } else {\r\n            // #B start from the end\r\n            sum += currentTree.subCounter;\r\n            for (var j = currentTree.children.length-1; j>=indexes[i];--j){\r\n                if (currentTree.children[j].e !== null){ sum-=1; };\r\n                sum -= currentTree.children[j].subCounter;  \r\n            };\r\n            j += 1;\r\n        };\r\n        if (currentTree.children[j].e !== null){ sum+=1; };\r\n        currentTree = currentTree.children[j];\r\n    };\r\n    return sum-1; // -1 because algorithm counted the element itself\r\n};\r\n\r\n/*!\r\n * \\brief get the list of indexes of the arrays representing the children in\r\n * the tree\r\n * \\param node the node containing the path\r\n * \\return a list of integer\r\n */\r\nLSEQNode.prototype.getIndexes = function(node){\r\n    function _getIndexes(indexes, currentTree, currentNode){\r\n        var index = currentTree.children.binaryIndexOf(currentNode);\r\n        if (index < 0 ||\r\n            (index===0 && currentTree.children.length===0)){ return -1; }\r\n        indexes.push(index);\r\n        if (currentNode.children.length===0 ||\r\n            currentTree.children.length===0){\r\n            return indexes;\r\n        };\r\n        return _getIndexes(indexes,\r\n                           currentTree.children[index],\r\n                           currentNode.children[0]);\r\n        \r\n    };\r\n    return _getIndexes([], this, node);\r\n};\r\n\r\n/*!\r\n * \\brief the ordered tree can be linearized. This function gets the node at\r\n * the index in the projected sequence.\r\n * \\param index the index in the sequence\r\n * \\returns the node at the index\r\n */\r\nLSEQNode.prototype.get = function(index){\r\n    function _get(leftSum, buildingNode, queue, currentNode){\r\n        var startBeginning = true, useFunction, i = 0,\r\n            p, temp;\r\n        // #0 the node is found, return the incrementally built node and praise\r\n        // #the sun !\r\n        if (leftSum === index && currentNode.e !== null){\r\n            // 1a copy the value of the element in the path\r\n            queue.e = currentNode.e;\r\n            return buildingNode;\r\n        };\r\n        if (currentNode.e !== null){ leftSum += 1; };\r\n\r\n        // #1 search: do I start from the beginning or the end\r\n        startBeginning = ((index-leftSum)<(currentNode.subCounter/2));\r\n        if (startBeginning){\r\n            useFunction = function(a,b){return a+b;};\r\n        } else {\r\n            leftSum += currentNode.subCounter;\r\n            useFunction = function(a,b){return a-b;};\r\n        }\r\n\r\n        // #2a counting the element from left to right\r\n        if (!startBeginning) { i = currentNode.children.length-1; };\r\n        while ((startBeginning && leftSum <= index) ||\r\n               (!startBeginning && leftSum > index)){\r\n            if (currentNode.children[i].e!==null){\r\n                leftSum = useFunction(leftSum, 1);\r\n            };\r\n            leftSum = useFunction(leftSum,currentNode.children[i].subCounter);\r\n            i = useFunction(i, 1);\r\n        };\r\n\r\n        // #2b decreasing the incrementation\r\n        i = useFunction(i,-1);\r\n        if (startBeginning){\r\n            if (currentNode.children[i].e!==null){\r\n                leftSum = useFunction(leftSum, -1);\r\n            };\r\n            leftSum = useFunction(leftSum,-currentNode.children[i].subCounter);\r\n        };\r\n        \r\n        // #3 build path\r\n        p = []; \r\n        if (currentNode.children[i].t) {\r\n        p.push(currentNode.children[i].t);\r\n        } else {\r\n            console.log(\"LSEQNode: currentNode.children[i].t dose not exist \");\r\n        }\r\n\r\n\r\n        if (buildingNode === null){\r\n            buildingNode = new LSEQNode(p,null);\r\n            queue = buildingNode;\r\n        } else {\r\n            temp = new LSEQNode(p,null);\r\n            queue.add(temp);\r\n            queue = temp;\r\n        };\r\n        return _get(leftSum, buildingNode, queue,\r\n                    currentNode.children[i]);\r\n    };\r\n    return _get(0, null, null, this);\r\n};\r\n\r\n/*!\r\n * \\brief cast the JSON object to a LSEQNode\r\n * \\param object the JSON object\r\n * \\return a self reference\r\n */\r\nLSEQNode.prototype.fromJSON = function(object){\r\n    this.t = new Triple(object.t.p, object.t.s, object.t.c);\r\n    if (object.children.length === 0){\r\n        this.e = object.e;\r\n        this.subCounter = 0;\r\n        this.children = [];\r\n    } else {\r\n        this.e = null;\r\n        this.subCounter = 1;\r\n        this.children = [];\r\n        this.children.push(\r\n            (new LSEQNode([], null).fromJSON(object.children[0])));\r\n    };\r\n    return this;\r\n};\r\n\r\nmodule.exports = LSEQNode;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "add",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js~add",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "del",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js~del",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "compare",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js~compare",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "indexOf",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js~indexOf",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "getIndexes",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js~getIndexes",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "params": [
      {
        "name": "node",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "get",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js~get",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "fromJSON",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js~fromJSON",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "LSEQNode",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/lseqnode.js~LSEQNode",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/lseqnode.js",
    "importStyle": "LSEQNode",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "tripleList",
        "types": [
          "*"
        ]
      },
      {
        "name": "element",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "lib/crate-core/lib/LSEQTree/lib/triple.js",
    "content": "\r\n/*!\r\n * \\brief triple that contains a <path site counter>\r\n * \\param path the part of the path in the tree\r\n * \\param site the unique site identifier that created the triple\r\n * \\param counter the counter of the site when it created the triple\r\n */\r\nfunction Triple(path, site, counter){\r\n    this.p = path;\r\n    this.s = site;\r\n    this.c = counter;\r\n};\r\n\r\n/*!\r\n * \\brief compare two triples prioritizing the path, then site, then counter\r\n * \\param o the other triple to compare\r\n * \\return -1 if this is lower than o, 1 if this is greater than o, 0 otherwise\r\n */\r\nTriple.prototype.compare = function(o){\r\n    if (this.s === Number.MAX_VALUE && this.c === Number.MAX_VALUE){\r\n        return 1;\r\n    };\r\n    if (o.s === Number.MAX_VALUE && o.s === Number.MAX_VALUE){\r\n        return -1;\r\n    };\r\n    \r\n    if (this.p < o.p) { return -1;};\r\n    if (this.p > o.p) { return 1 ;};\r\n    if (this.s < o.s) { return -1;};\r\n    if (this.s > o.s) { return 1 ;};\r\n    if (this.c < o.c) { return -1;};\r\n    if (this.c > o.c) { return 1 ;};\r\n    return 0;\r\n};\r\n\r\nmodule.exports = Triple;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/LSEQTree/lib/triple.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "compare",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/triple.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/triple.js~compare",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/triple.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "Triple",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/triple.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/triple.js~Triple",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/triple.js",
    "importStyle": "Triple",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "site",
        "types": [
          "*"
        ]
      },
      {
        "name": "counter",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "lib/crate-core/lib/LSEQTree/lib/util.js",
    "content": "\r\nfunction binaryIndexOf(){\r\n\r\n/**\r\n * \\from: [https://gist.github.com/Wolfy87/5734530]\r\n * Performs a binary search on the host array. This method can either be\r\n * injected into Array.prototype or called with a specified scope like this:\r\n * binaryIndexOf.call(someArray, searchElement);\r\n *\r\n *\r\n * @param {*} searchElement The item to search for within the array.\r\n * @return {Number} The index of the element which defaults to -1 when not\r\n * found.\r\n */\r\nArray.prototype.binaryIndexOf = function(searchElement) {\r\n    var minIndex = 0;\r\n    var maxIndex = this.length - 1;\r\n    var currentIndex;\r\n    var currentElement;\r\n\r\n    while (minIndex <= maxIndex) {\r\n        currentIndex = Math.floor((minIndex + maxIndex) / 2);\r\n        currentElement = this[currentIndex];\r\n        if (currentElement.compare(searchElement) < 0) {\r\n            minIndex = currentIndex + 1;\r\n        }\r\n        else if (currentElement.compare(searchElement) > 0) {\r\n            maxIndex = currentIndex - 1;\r\n        }\r\n        else {\r\n            return currentIndex;\r\n        }\r\n    };\r\n    return ~maxIndex;\r\n};\r\n\r\n}\r\n\r\nmodule.exports = binaryIndexOf();",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/LSEQTree/lib/util.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "binaryIndexOf",
    "memberof": "lib/crate-core/lib/LSEQTree/lib/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/lib/util.js~binaryIndexOf",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/lib/util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "lib/crate-core/lib/LSEQTree/test/testbase.js",
    "content": "var expect = require('expect.js');\r\nvar Mocha  = require('mocha');\r\nvar BI = require('BigInt');\r\n\r\nvar Base = require('../lib/base.js');\r\nvar ID = require('../lib/identifier.js');\r\nvar LSEQNode = require('../lib/lseqnode.js');\r\nvar Triple = require('../lib/triple.js');\r\n\r\ndescribe('base.js', function() {\r\n    \r\n    describe('base', function(){\r\n        it('trivial test of setup', function(){\r\n            var base = new Base(1337);\r\n            expect(base._b).to.be.eql(1337);\r\n        });\r\n    });\r\n\r\n    describe('singleton', function(){\r\n        it('get an instance of the function that does not change', function(){\r\n            var base = new Base(42);\r\n            expect(base._b).to.be.eql(42);\r\n            var base2 = new Base();\r\n            expect(base._b).to.be.eql(42);\r\n        });\r\n    });\r\n    \r\n    describe('getBitBase', function(){\r\n        it('trivially return the bit size of certain level', function(){\r\n            var base = new Base(42);\r\n            expect(base.getBitBase(5)).to.be.eql(47);\r\n        });\r\n    });\r\n\r\n    describe('getSumBit', function(){\r\n        it('should return number of bits from lvl-0 to lvl-X', function(){\r\n            var base = new Base(5);\r\n            expect(base.getSumBit(0)).to.be.eql(base._b); // 5\r\n            expect(base.getSumBit(1)).to.be.eql(base._b*2+1) // 11\r\n            expect(base.getSumBit(2)).to.be.eql(base._b*3+3) // 18\r\n        });\r\n    });\r\n\r\n    describe('getInterval', function(){\r\n        it('should return an empty interval at lvl 0', function(){\r\n            var base = new Base(3);\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            tripleList.push(new Triple(1,0,0));\r\n            var id1= new LSEQNode(tripleList, \"\");\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            tripleList.push(new Triple(15,0,0));\r\n            var id2= new LSEQNode(tripleList, \"\");\r\n            expect(base.getInterval(id1,id2,0)).to.be.eql(0);\r\n        });\r\n\r\n        it('should return an interval at level 1 of 13', function(){\r\n            var base = new Base(3);\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            tripleList.push(new Triple(1,0,0));\r\n            var id1= new LSEQNode(tripleList, \"\");\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            tripleList.push(new Triple(15,0,0));\r\n            var id2= new LSEQNode(tripleList, \"\");\r\n            expect(base.getInterval(id1,id2,1)).to.be.eql(13);\r\n        });\r\n\r\n        it('should return an interval at level 1 of 14', function(){\r\n            var base = new Base(3);\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            var id1= new LSEQNode(tripleList, \"\");\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            tripleList.push(new Triple(15,0,0));\r\n            var id2= new LSEQNode(tripleList, \"\");\r\n            expect(base.getInterval(id1,id2,1)).to.be.eql(14);\r\n        });\r\n\r\n        it('should return an interval at level 1 of 11', function(){\r\n            var base = new Base(3);\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            tripleList.push(new Triple(4,0,0));\r\n            var id1= new LSEQNode(tripleList, \"\");\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            tripleList.push(new Triple(3,0,0));\r\n            var id2= new LSEQNode(tripleList, \"\");\r\n            expect(base.getInterval(id1,id2,1)).to.be.eql(11);\r\n        });\r\n\r\n        it('process interval between close paths with LSEQNode @0', function(){\r\n            var base = new Base(3);\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            var id1= new LSEQNode(tripleList, \"\");\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(2,0,0));\r\n            var id2= new LSEQNode(tripleList, \"\");\r\n            expect(base.getInterval(id1,id2,0)).to.be.eql(0);\r\n        });\r\n\r\n        it('process interval between close paths with LSEQNode @1', function(){\r\n            var base = new Base(3);\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(1,0,0));\r\n            var id1= new LSEQNode(tripleList, \"\");\r\n            var tripleList = [];\r\n            tripleList.push(new Triple(2,0,0));\r\n            var id2= new LSEQNode(tripleList, \"\");\r\n            expect(base.getInterval(id1,id2,1)).to.be.eql(15);\r\n        });\r\n\r\n    });\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/LSEQTree/test/testbase.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "lib/crate-core/lib/LSEQTree/test/testidentifier.js",
    "content": "var expect = require('expect.js');\r\nvar BI = require('BigInt');\r\nvar Mocha  = require('mocha');\r\n\r\nvar Base = new (require('../lib/base.js'))(3);\r\nvar ID = require('../lib/identifier.js');\r\nvar Triple = require('../lib/triple.js');\r\nvar LSEQNode = require('../lib/lseqnode.js');\r\n\r\n// using a departure base value of 3 bits\r\ndescribe('positions.js', function() {\r\n    \r\n    describe('positions', function(){\r\n\tit('is initialized correctly', function(){\r\n\t    var i1 = new ID(BI.int2bigInt(0,1),[0],[0]);\r\n\t    expect(BI.isZero(i1._d)).to.be.ok();\r\n\t    expect(i1._s).to.have.length(1);\r\n\t    expect(i1._c).to.have.length(1);\r\n\t});\r\n    });\r\n    \r\n    describe('compare', function(){\r\n\tit('compare digit first of lvl 0', function(){\r\n\t    var i1 = new ID(BI.int2bigInt(3,2),[0],[0]); // d:[3]\r\n\t    var i2 = new ID(BI.int2bigInt(5,3),[0],[0]); // d:[5]\r\n\t    expect(i1.compare(i2)).to.be.below(0);\r\n\t    expect(i2.compare(i1)).to.be.above(0);\r\n\t});\r\n\r\n\tit('compare digit first of lvl 1', function(){\r\n\t    var i1 = new ID(BI.int2bigInt(19,Base.getSumBit(1)),\r\n\t\t\t    [0,1],[0,1]); // d:[1,3]\r\n\t    var i2 = new ID(BI.int2bigInt(37,Base.getSumBit(1)),\r\n\t\t\t    [0,1],[0,1]); // d:[2,5]\r\n\t    expect(i1.compare(i2)).to.be.below(0);\r\n\t    expect(i2.compare(i1)).to.be.above(0);\r\n\t});\r\n\r\n\tit('compare digit first of lvl 1 but first eql', function(){\r\n\t    var i1 = new ID(BI.int2bigInt(19,Base.getSumBit(1)),\r\n\t\t\t    [0,1],[0,1]); // d:[1,3]\r\n\t    var i2 = new ID(BI.int2bigInt(21,Base.getSumBit(1)),\r\n\t\t\t    [0,1],[0,1]); // d:[1,5]\r\n\t    expect(i1.compare(i2)).to.be.below(0);\r\n\t    expect(i2.compare(i1)).to.be.above(0);\r\n\t});\r\n\r\n\tit('compare lvl 1 with source different', function(){\r\n\t    var i1 = new ID(BI.int2bigInt(19,Base.getSumBit(1)),\r\n\t\t\t    [0,3],[0,2]); // d:[1.3]\r\n\t    var i2 = new ID(BI.int2bigInt(21,Base.getSumBit(1)),\r\n\t\t\t    [3,3],[0,2]); // d:[1.5]\r\n\t    expect(i1.compare(i2)).to.be.below(0);\r\n\t    expect(i2.compare(i1)).to.be.above(0);\r\n\t});\r\n\r\n\tit('compare lvl 1 with clock different', function(){\r\n\t    var i1 = new ID(BI.int2bigInt(19,Base.getSumBit(1)),\r\n\t\t\t    [3,3],[0,1]); // d:[1.3]\r\n\t    var i2 = new ID(BI.int2bigInt(21,Base.getSumBit(1)),\r\n\t\t\t    [3,3],[0,2]); // d:[1.5]\r\n\t    expect(i1.compare(i2)).to.be.below(0);\r\n\t    expect(i2.compare(i1)).to.be.above(0);\r\n\t});\r\n\r\n\tit('compare lvl 0 with lvl 1; same d,s,c; size matters', function(){\r\n\t    var i1 = new ID(BI.int2bigInt(1,Base.getSumBit(0)),\r\n\t\t\t    [3],[0]); // d:[1]\r\n\t    var i2 = new ID(BI.int2bigInt(21,Base.getSumBit(1)),\r\n\t\t\t    [3,3],[0,2]); // d:[1.5]\r\n\t    expect(i1.compare(i2)).to.be.below(0);\r\n\t    expect(i2.compare(i1)).to.be.above(0);\r\n\t});\r\n\r\n\tit('compare lvl 1 equal identifiers', function(){\r\n\t\tvar i1 = new ID(BI.int2bigInt(21,Base.getSumBit(1)),\r\n\t\t\t\t[3,3],[0,2]); // d:[1.5]\r\n\t\tvar i2 = new ID(BI.int2bigInt(21,Base.getSumBit(1)),\r\n\t\t\t\t[3,3],[0,2]); // d:[1.5]\r\n\t\texpect(i1.compare(i2)).to.be.eql(0);\r\n\t\texpect(i2.compare(i1)).to.be.eql(0);\r\n\t    });\r\n\t\r\n\t});\r\n    \r\n    describe('toNode', function() {\r\n\t    it('convert a simple id to a path', function(){\r\n\t\t    var i1 = new ID(BI.int2bigInt(21,Base.getSumBit(1)),\r\n\t\t\t\t    [3,3],[0,2]); // d:[1.5]\r\n\t\t    var resultNode = i1.toNode();\r\n\t\t    expect(resultNode.t.p).to.be.eql(1);\r\n\t\t    expect(resultNode.children[0].t.p).to.be.eql(5);\r\n\t\t    expect(resultNode.t.s).to.be.eql(3);\r\n\t\t    expect(resultNode.children[0].t.s).to.be.eql(3);\r\n\t\t    expect(resultNode.t.c).to.be.eql(0);\r\n\t\t    expect(resultNode.children[0].t.c).to.be.eql(2);\r\n\t\t});\r\n\t});\r\n    \r\n    describe('fromNode', function(){\r\n\t    it('convert a simple node to an identifier', function(){\r\n\t\t    var Base = require('../lib/base.js')(3);\r\n\t\t    var path = [];\r\n\t\t    path.push(new Triple(1,3,0));\r\n\t\t    path.push(new Triple(5,3,2));\r\n\t\t    var node = new LSEQNode(path,null);\r\n\t\t    var id = new ID(null,[],[]);\r\n\t\t    id.fromNode(node);\r\n\t\t    var onefive = BI.int2bigInt(21,Base.getSumBit(1));\r\n\t\t    expect(id._d).to.be.eql(onefive);\r\n\t\t    expect(id._s[0]).to.be.eql(3);\r\n\t\t    expect(id._s[1]).to.be.eql(3);\r\n\t\t    expect(id._c[0]).to.be.eql(0);\r\n\t\t    expect(id._c[1]).to.be.eql(2);\r\n\t\t});\r\n\t});\r\n    \r\n    });\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/LSEQTree/test/testidentifier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "Base",
    "memberof": "lib/crate-core/lib/LSEQTree/test/testidentifier.js",
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/test/testidentifier.js~Base",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/test/testidentifier.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "lib/crate-core/lib/LSEQTree/test/testlseqnode.js",
    "content": "var expect = require('expect.js');\r\nvar Mocha = require('mocha');\r\n\r\nvar LSEQNode = require('../lib/lseqnode.js');\r\nvar Triple = require('../lib/triple.js');\r\n\r\ndescribe('lseqnode.js', function() {\r\n\t\r\n\tdescribe('constructor', function(){\r\n\t\tit('returns a node of length 1', function(){\r\n\t\t\tvar tripleList = [];\r\n\t\t\ttripleList.push(new Triple(1,2,3));\r\n\t\t\tvar node = new LSEQNode(tripleList, \"a\");\r\n\t\t\texpect(node.subCounter).to.be.eql(0);\r\n\t\t\texpect(node.e).to.be.eql(\"a\");\r\n\t\t\texpect(node.children.length).to.be.eql(0);\r\n\t\t    });\r\n\t\tit('returns a node of length 3', function(){\r\n\t\t\tvar tripleList = [];\r\n\t\t\ttripleList.push(new Triple(1,2,3));\r\n\t\t\ttripleList.push(new Triple(4,5,6));\r\n\t\t\ttripleList.push(new Triple(7,8,9));\r\n\t\t\tvar node = new LSEQNode(tripleList, \"a\");\r\n\t\t\texpect(node.subCounter).to.be.eql(1);\r\n\t\t\texpect(node.children[0].subCounter).to.be.eql(1);\r\n\t\t\texpect(node.children[0].children[0].subCounter\r\n\t\t\t       ).to.be.eql(0);\r\n\t\t\texpect(node.children[0].children[0].e).to.be.eql(\"a\");\r\n\t\t\texpect(node.children.length).to.be.eql(1);\r\n\t\t    });\r\n\t    });\r\n\r\n\tdescribe(\"add\", function(){\r\n\t\tit('construct a tree of two elements (1 subpath)', function(){\r\n\t\t\tvar tripleList = [];\r\n\t\t\ttripleList.push(new Triple(1,2,3));\r\n\t\t\tvar root = new LSEQNode(tripleList, \"a\");\r\n\t\t\tvar tripleList = [];\r\n\t\t\ttripleList.push(new Triple(4,5,6));\r\n\t\t\ttripleList.push(new Triple(7,8,9));\r\n\t\t\tvar other = new LSEQNode(tripleList, \"b\");\r\n\t\t\troot.add(other);\r\n\t\t\texpect(root.subCounter).to.be.eql(1);\r\n\t\t    });\r\n\t\t\r\n\t\tit('construct a tree of two elements (2 subpath)', function(){\r\n\t\t\tvar tripleList = [];\r\n\t\t\ttripleList.push(new Triple(1,2,3));\r\n\t\t\tvar root = new LSEQNode(tripleList, \"a\");\r\n\t\t\tvar tripleList = [];\r\n\t\t\ttripleList.push(new Triple(4,5,6));\r\n\t\t\ttripleList.push(new Triple(7,8,9));\r\n\t\t\tvar b = new LSEQNode(tripleList, \"b\");\r\n\t\t\troot.add(b);\r\n\t\t\tvar tripleList = [];\r\n\t\t\ttripleList.push(new Triple(4,5,6));\r\n\t\t\ttripleList.push(new Triple(10,11,12));\r\n\t\t\tvar c = new LSEQNode(tripleList, \"c\");\r\n\t\t\troot.add(c);\r\n\t\t\texpect(root.subCounter).to.be.eql(2);\r\n\t\t\texpect(root.children.length).to.be.eql(1);\r\n\t\t\texpect(root.children[0].children.length).to.be.eql(2);\r\n\t\t    });\r\n\t\tit(\"construct a tree, verify if index are at right positions\",\r\n\t\t   function(){\r\n\t\t       var root = new LSEQNode([],\"a\");\r\n\t\t       var tripleList = [];\r\n\t\t       tripleList.push(new Triple(1,1,1));\r\n\t\t       var b = new LSEQNode(tripleList, \"b\");\r\n\t\t       root.add(b);\r\n\t\t       var tripleList = [];\r\n\t\t       tripleList.push(new Triple(2,2,2));\r\n\t\t       tripleList.push(new Triple(3,3,3));\r\n\t\t       var c = new LSEQNode(tripleList, \"c\");\r\n\t\t       root.add(c);\r\n\t\t       var tripleList = [];\r\n\t\t       tripleList.push(new Triple(2,2,2));\r\n\t\t       tripleList.push(new Triple(4,4,4));\r\n\t\t       var d = new LSEQNode(tripleList, \"d\");\r\n\t\t       root.add(d);\r\n\t\t       expect(root.subCounter).to.be.eql(3);\r\n\t\t       expect(root.indexOf(b)).to.be.eql(1);\r\n\t\t       expect(root.indexOf(c)).to.be.eql(2);\r\n\t\t       expect(root.indexOf(d)).to.be.eql(3);\r\n\t\t   });\r\n\t\tit ('construct a tree and insert an element within existing branch',\r\n\t\t    function(){\r\n\t\t\tvar root = new LSEQNode([],\"a\");\r\n\t\t\tvar tripleList = [];\r\n\t\t\ttripleList.push(new Triple(1,1,1));\r\n\t\t\ttripleList.push(new Triple(3,3,3));\r\n\t\t\tvar c = new LSEQNode(tripleList, \"c\");\r\n\t\t\troot.add(c);\r\n\t\t\tvar tripleList = [];\r\n\t\t\ttripleList.push(new Triple(1,1,1));\r\n\t\t\tvar b = new LSEQNode(tripleList, \"b\");\r\n\t\t\troot.add(b);\r\n\t\t\texpect(root.subCounter).to.be.eql(2);\r\n\t\t       \texpect(root.indexOf(c)).to.be.eql(2);\r\n\t\t\texpect(root.indexOf(b)).to.be.eql(1);\r\n\t\t    });\r\n\t    });\r\n\tdescribe('get', function(){\r\n\t\tit('get the values at the given index in a simple tree',\r\n\t\t   function(){\r\n\t\t       var root = new LSEQNode([],\"a\");\r\n\t\t       var listTriple = [];\r\n\t\t       listTriple.push(new Triple(1,1,1));\r\n\t\t       var b = new LSEQNode(listTriple, \"b\");\r\n\t\t       root.add(b);\r\n\t\t       var listTriple = [];\r\n\t\t       listTriple.push(new Triple(2,2,2));\r\n\t\t       var c = new LSEQNode(listTriple, \"c\");\r\n\t\t       root.add(c);\r\n\t\t       expect(root.subCounter).to.be.eql(2);\r\n\t\t       expect(root.get(1)).to.be.eql(b);\r\n\t\t       expect(root.get(2)).to.be.eql(c);\r\n\t\t   });\r\n \t\tit('get the values at the given index with tree of depth 2',\r\n \t\t   function(){\r\n \t\t       var root = new LSEQNode([],\"a\");\r\n \t\t       var listTriple = [];\r\n \t\t       listTriple.push(new Triple(1,1,1));\r\n \t\t       var b = new LSEQNode(listTriple,\"b\");\r\n \t\t       root.add(b);\r\n \t\t       var listTriple = [];\r\n \t\t       listTriple.push(new Triple(2,2,2));\r\n \t\t       listTriple.push(new Triple(3,3,3));\r\n \t\t       var d = new LSEQNode(listTriple,\"d\");\r\n\t\t       root.add(d);\r\n \t\t       var listTriple = [];\r\n \t\t       listTriple.push(new Triple(2,2,2));\r\n \t\t       var c = new LSEQNode(listTriple,\"c\");\r\n \t\t       root.add(c);\r\n \t\t       var listTriple = [];\r\n\t\t       listTriple.push(new Triple(2,2,2));\r\n \t\t       listTriple.push(new Triple(3,3,3));\r\n\t\t       var d = new LSEQNode(listTriple,\"d\");\r\n \t\t       expect(root.get(1)).to.be.eql(b);\r\n\t\t       expect(root.get(2)).to.be.eql(c);\r\n\t\t       expect(root.get(3)).to.be.eql(d);\r\n\t\t   });\r\n\t    });\r\n\t\r\n\tdescribe('del',function(){\r\n\t\tit('should delete a node of the simple tree', function(){\r\n\t\t\tvar root = new LSEQNode([],\"a\");\r\n\t\t\tvar listTriple = [];\r\n\t\t\tlistTriple.push(new Triple(1,1,1));\r\n\t\t\tvar b = new LSEQNode(listTriple, \"b\");\r\n\t\t\troot.add(b);\r\n\t\t\tvar listTriple = [];\r\n\t\t\tlistTriple.push(new Triple(2,2,2));\r\n\t\t\tvar c = new LSEQNode(listTriple, \"c\");\r\n\t\t\troot.add(c);\r\n\t\t\texpect(root.indexOf(c)).to.be.eql(2);\r\n\t\t\troot.del(b);\r\n\t\t\texpect(root.indexOf(c)).to.be.eql(1);\r\n\t\t    });\r\n\r\n\t\tit('should delete all intermediary nodes in a useless path',\r\n\t\t   function(){\r\n\t\t       var root = new LSEQNode([],\"a\");\r\n\t\t       var listTriple = [];\r\n\t\t       listTriple.push(new Triple(1,1,1));\r\n\t\t       listTriple.push(new Triple(2,2,2));\r\n\t\t       listTriple.push(new Triple(3,3,3));\r\n\t\t       var b = new LSEQNode(listTriple, \"b\");\r\n\t\t       root.add(b);\r\n\t\t       var listTriple = [];\r\n\t\t       listTriple.push(new Triple(1,1,1));\r\n\t\t       var c = new LSEQNode(listTriple, \"c\");\r\n\t\t       root.add(c);\r\n\t\t       var listTriple = [];\r\n\t\t       listTriple.push(new Triple(1,1,1));\r\n\t\t       listTriple.push(new Triple(2,2,2));\r\n\t\t       listTriple.push(new Triple(3,3,3));\r\n\t\t       var b = new LSEQNode(listTriple, \"b\");\r\n\t\t       expect(root.indexOf(c)).to.be.eql(1);\r\n\t\t       expect(root.indexOf(b)).to.be.eql(2);\r\n\t\t       root.del(b);\r\n\t\t       expect(root.indexOf(c)).to.be.eql(1);\r\n\t\t       expect(root.children[0].e).to.be.eql(\"c\");\r\n\t\t       expect(root.children[0].children.length).to.be.eql(0);\r\n\t\t   });\r\n\t\t\r\n\t\tit('more complexe tree, remove the subtree but not all nodes',\r\n\t\t   function(){\r\n\t\t       var root = new LSEQNode([],\"a\");\r\n                       var listTriple = [];\r\n                       listTriple.push(new Triple(1,1,1));\r\n                       listTriple.push(new Triple(2,2,2));\r\n                       listTriple.push(new Triple(3,3,3));\r\n                       var b = new LSEQNode(listTriple, \"b\");\r\n                       root.add(b);\r\n                       var listTriple = [];\r\n                       listTriple.push(new Triple(1,1,1));\r\n                       var c = new LSEQNode(listTriple, \"c\");\r\n                       root.add(c);\r\n                       var listTriple = [];\r\n                       listTriple.push(new Triple(1,1,1));\r\n                       listTriple.push(new Triple(2,2,2));\r\n\t\t       listTriple.push(new Triple(4,4,4));\r\n                       listTriple.push(new Triple(5,5,5));\r\n\t\t       var d = new LSEQNode(listTriple, \"d\");\r\n\t\t       root.add(d);\t\t       \r\n\t\t       // remove the elements\r\n                       var listTriple = [];\r\n                       listTriple.push(new Triple(1,1,1));\r\n                       listTriple.push(new Triple(2,2,2));\r\n                       listTriple.push(new Triple(3,3,3));\r\n                       var b = new LSEQNode(listTriple, \"b\");\r\n                       expect(root.indexOf(c)).to.be.eql(1);\r\n                       expect(root.indexOf(b)).to.be.eql(2);\r\n                       expect(root.indexOf(d)).to.be.eql(3);\r\n                       root.del(b);\r\n                       expect(root.indexOf(c)).to.be.eql(1);\r\n                       expect(root.indexOf(d)).to.be.eql(2);\r\n                       var listTriple = [];\r\n                       listTriple.push(new Triple(1,1,1));\r\n                       var c = new LSEQNode(listTriple, \"c\");\r\n\t\t       root.del(c);\r\n\t\t       expect(root.indexOf(d)).to.be.eql(1);\r\n\t\t   });\r\n\t    });\r\n\tdescribe('getIndexes', function(){\r\n\t\tit('get the list of succesive indexes of a path in a tree',\r\n\t\t   function(){\r\n\t\t       var root = new LSEQNode([],null);\r\n\t\t       var tripleList = [];\r\n\t\t       tripleList.push(new Triple(1,1,1));\r\n\t\t       var a = new LSEQNode(tripleList, \"a\");\r\n\t\t       root.add(a);\r\n\t\t       var tripleList = [];\r\n\t\t       tripleList.push(new Triple(2,2,2));\r\n\t\t       tripleList.push(new Triple(3,3,3));\r\n\t\t       var b = new LSEQNode(tripleList, \"b\");\r\n\t\t       root.add(b);\r\n\t\t       var tripleList = [];\r\n\t\t       tripleList.push(new Triple(2,2,2));\r\n\t\t       tripleList.push(new Triple(4,4,4));\r\n\t\t       var c = new LSEQNode(tripleList, \"c\");\r\n\t\t       root.add(c);\r\n\t\t       expect(root.subCounter).to.be.eql(3);\r\n\t\t       expect(root.indexOf(a)).to.be.eql(0);\r\n\t\t       expect(root.indexOf(b)).to.be.eql(1);\r\n\t\t       expect(root.indexOf(c)).to.be.eql(2);\r\n\t\t       expect(root.getIndexes(a)).to.be.eql([0]);\r\n\t\t       expect(root.getIndexes(b)).to.be.eql([1,0]);\r\n\t\t       expect(root.getIndexes(c)).to.be.eql([1,1]);\r\n\t\t   });\r\n\t    });\r\n    });",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/LSEQTree/test/testlseqnode.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "file",
    "name": "lib/crate-core/lib/LSEQTree/test/testlseqtree.js",
    "content": "var expect = require('expect.js');\r\nvar Mocha = require('mocha');\r\n\r\nvar LSEQ = require('../lib/lseqtree.js');\r\n\r\nvar N = 100000;\r\n\r\ndescribe('lseqtree.js', function(){\r\n    \r\n    describe('constructor', function(){\r\n        it('create an LSEQ array', function(){\r\n            var lseq = new LSEQ(42);\r\n            expect(lseq._s).to.be.eql(42);\r\n            expect(lseq._c).to.be.eql(0);\r\n            expect(lseq.length).to.be.eql(0);\r\n        });\r\n    });\r\n    \r\n    describe('insert', function(){\r\n        it('insert an element in the structure', function(){\r\n            var lseq = new LSEQ(42);\r\n            var ei = lseq.insert('a',0);\r\n            expect(lseq.length).to.be.eql(1);\r\n            expect(lseq._c).to.be.eql(1);\r\n            expect(lseq._s).to.be.eql(42);\r\n            expect(lseq.get(1).e).to.be.eql('a');\r\n        });\r\n        it('insert '+ N +' elements at the beginning of the structure',\r\n           function(){\r\n               this.timeout(2*N);\r\n               var lseq = new LSEQ(42);\r\n               for (i= 0; i < N; ++i){\r\n                   var a = lseq.insert('a',0);\r\n               };\r\n               expect(lseq.length).to.be.eql(N);\r\n           });\r\n        it('insert '+ N + ' elements at the end of the structure',\r\n           function(){\r\n               this.timeout(2*N);\r\n               var lseq = new LSEQ(42);\r\n               for (i= 0; i < N; ++i){\r\n                   var a = lseq.insert('a',lseq.length);\r\n               };\r\n               expect(lseq.length).to.be.eql(N);\r\n           }); \r\n        it('insert '+ N +' elements at rand position in the structure',\r\n           function(){\r\n               this.timeout(2*N);\r\n               var lseq = new LSEQ(42);\r\n               for (i= 0; i < N; ++i){\r\n                   var rand = Math.floor(Math.random()*lseq.length);\r\n                   lseq.insert('a',rand);\r\n               };\r\n               expect(lseq.length).to.be.eql(N);\r\n           });\r\n    });\r\n    \r\n    describe('remove', function(){\r\n        it('insert and remove an element in the structure', function(){\r\n            var lseq = new LSEQ(42);\r\n            var ei = lseq.insert('a',0);\r\n            expect(lseq.length).to.be.eql(1);\r\n            expect(lseq._c).to.be.eql(1);\r\n            expect(lseq._s).to.be.eql(42);\r\n            expect(lseq.get(1).e).to.be.eql('a');\r\n            lseq.remove(0);\r\n            expect(lseq.get(1).e).to.be.eql(\"\");\r\n            expect(lseq.length).to.be.eql(0);\r\n        });\r\n        it('insert and remove 1000 elements', function(){\r\n            this.timeout(20000);\r\n            var lseq = new LSEQ(42);\r\n            for(var i=0; i<1000; ++i){\r\n                var rand =  Math.floor(Math.random()*lseq.length);\r\n                var ei = lseq.insert('a', rand);\r\n            };\r\n            expect(lseq.length).to.be.eql(1000);\r\n            for (var i=0; i<1000; ++i){\r\n                lseq.remove(Math.floor(Math.random()*lseq.length));\r\n            };    \r\n            expect(lseq.length).to.be.eql(0);\r\n        });\r\n    });\r\n    describe('applyInsert', function(){\r\n        it('try to insert an already existing elements but cant',\r\n           function(){\r\n               var lseq = new LSEQ(42);\r\n               var ei = lseq.insert('a',0);\r\n               var lseq2 = new LSEQ(1337);\r\n               var exist = lseq.applyInsert(ei._e,ei._i);\r\n               expect(exist).to.be.eql(-1);\r\n               var position = lseq2.applyInsert(ei._e,ei._i);\r\n               expect(position).to.be.eql(1);\r\n           });\r\n    });\r\n    describe('applyRemove', function(){\r\n        it('try to delete a non existing element', function(){\r\n            var lseq = new LSEQ(42);\r\n            var ei = lseq.insert('a',0);\r\n            var position = lseq.applyRemove(ei._i);\r\n            expect(position).to.be.eql(1);\r\n            var exist = lseq.applyRemove(ei._i);\r\n            expect(exist).to.be.eql(-1);\r\n        });\r\n    });\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/LSEQTree/test/testlseqtree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "variable",
    "name": "N",
    "memberof": "lib/crate-core/lib/LSEQTree/test/testlseqtree.js",
    "static": true,
    "longname": "lib/crate-core/lib/LSEQTree/test/testlseqtree.js~N",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/LSEQTree/test/testlseqtree.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/example/main.js",
    "content": "var S = require('spray-wrtc');\r\n\r\nvar opts = {deltatime: 1000*60*1,\r\n            webrtc: {trickle:true}};\r\n\r\n// # create 3 peers \r\nvar s1 = new S(opts);\r\nvar s2 = new S(opts);\r\nvar s3 = new S(opts);\r\n\r\nvar callbacks = function(src, dest){\r\n    return {\r\n        onInitiate: function(offer){\r\n            dest.connection(callbacks(dest, src), offer);\r\n        },\r\n        onAccept: function(offer){\r\n            dest.connection(offer);\r\n        },\r\n        onReady: function(){\r\n            console.log(\"Connection established\");\r\n        }\r\n    };\r\n};\r\n\r\n// #1 s1 joins s2 and creates a 2-peers networks\r\nvar id1 = s1.connection(callbacks(s1, s2));\r\n// #2 after a bit, s3 joins the network through s1\r\nsetTimeout(function(){\r\n    var id2 = s3.connection(callbacks(s3, s1));\r\n}, 5000);\r\n\r\n// #3 connection state changes\r\nfunction changes(peer){\r\n    return function(state){\r\n        console.log('@'+peer + ' connection state '+ state);\r\n    };\r\n};\r\n\r\ns1.on('statechange', changes('s1'));\r\ns2.on('statechange', changes('s2'));\r\ns3.on('statechange', changes('s3'));\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/example/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "opts",
    "memberof": "lib/crate-core/lib/spray-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/example/main.js~opts",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"deltatime\": *, \"webrtc\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "s1",
    "memberof": "lib/crate-core/lib/spray-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/example/main.js~s1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "s2",
    "memberof": "lib/crate-core/lib/spray-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/example/main.js~s2",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "variable",
    "name": "s3",
    "memberof": "lib/crate-core/lib/spray-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/example/main.js~s3",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "callbacks",
    "memberof": "lib/crate-core/lib/spray-wrtc/example/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/example/main.js~callbacks",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      },
      {
        "name": "dest",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"onInitiate\": *, \"onAccept\": *, \"onReady\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "id1",
    "memberof": "lib/crate-core/lib/spray-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/example/main.js~id1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "function",
    "name": "changes",
    "memberof": "lib/crate-core/lib/spray-wrtc/example/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/example/main.js~changes",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "peer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/extended-sorted-array.js",
    "content": "'use strict';\r\n\r\nconst SortedArray = require('sorted-cmp-array');\r\n\r\nSortedArray.prototype.get = function (entry) {\r\n\tconst index = this.indexOf(entry);\r\n\treturn ((index >= 0)&&this.arr[index]) || null;\r\n};\r\n\r\n\r\nSortedArray.prototype.contains = function (entry) {\r\n\treturn (this.arr.includes(entry));\r\n};\r\n\r\nmodule.exports = SortedArray;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/extended-sorted-array.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "get",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/extended-sorted-array.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/extended-sorted-array.js~get",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/extended-sorted-array.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "entry",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 152,
    "kind": "function",
    "name": "contains",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/extended-sorted-array.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/extended-sorted-array.js~contains",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/extended-sorted-array.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "entry",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/messages.js",
    "content": "'use strict';\r\n/**\r\n * message requesting an exchange of neighborhood\r\n * @param {string} inview the identifier of the inview\r\n * @param {string} outview the identifier of the outview\r\n * @param {string} protocol the protocol that creates the message\r\n * @param {object} view View of the client\r\n * @return {object} Return an object with all parameters and some other details\r\n */\r\n/*const MExchange = (inview, outview, protocol) => {\r\n\treturn {\r\n\t\tprotocol: protocol || 'spray-wrtc',\r\n\t\ttype: 'MExchange',\r\n\t\tinview: inview,\r\n    outview: outview\r\n\t};\r\n };\r\n*/\r\nfunction MExchange (inview, outview, protocol) {\r\nreturn {\r\n\t\tprotocol: protocol || 'spray-wrtc',\r\n\t\ttype: 'MExchange',\r\n\t\tinview: inview,\r\n    outview: outview\r\n\t};\r\n};\r\n\r\n\r\nmodule.exports = MExchange;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/messages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "MExchange",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/messages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/messages.js~MExchange",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/messages.js",
    "importStyle": "MExchange",
    "description": "message requesting an exchange of neighborhood",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "inview",
        "description": "the identifier of the inview"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "outview",
        "description": "the identifier of the outview"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "protocol",
        "description": "the protocol that creates the message"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "view",
        "description": "View of the client"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Return an object with all parameters and some other details"
    }
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/build/n2n-overlay-wrtc.bundle.js",
    "content": "",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/build/n2n-overlay-wrtc.bundle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "content": "var NO = require('n2n-overlay-wrtc');\r\n\r\nvar opts = {\r\n  webrtc: {\r\n    trickle:true\r\n  },\r\n  verbose:true\r\n};\r\n\r\n// # create 3 peers\r\nvar n1 = new NO(opts);\r\nvar n2 = new NO(opts);\r\nvar n3 = new NO(opts);\r\n\r\nvar twoconnections = 2 * 2;\r\n\r\nvar callbacks = function(src, dest){\r\n    return {\r\n        onInitiate: function(offer){\r\n            dest.connection(callbacks(dest, src), offer);\r\n        },\r\n        onAccept: function(offer){\r\n            dest.connection(offer);\r\n        },\r\n        onReady: function(){\r\n            --twoconnections;\r\n            console.log(\"Connection established\");\r\n            if (twoconnections <=0){bridge();};\r\n        }\r\n    };\r\n};\r\n\r\n// #1 establishing a connection from n1 to n2\r\nvar id1 = n1.connection(callbacks(n1, n2));\r\n// #2 establishing a connection from n1 to n3\r\nvar id2 = n1.connection(callbacks(n1, n3));\r\n// > console: should see 4 \"connection established\" messages\r\n\r\n// #3 n1 chooses to connect n2 to n3 (neighbor2neighbor connection)\r\nfunction bridge(){\r\n     entry1 = n1.outview.living.ms.arr[0]; // ugly\r\n     entry2 = n1.outview.living.ms.arr[1]; // probably better way\r\n     console.log(entry1.id+ ' -> ' +entry2.id);\r\n     n1.connect(entry1.id, entry2.id);\r\n\r\n//     // #4 add a direct connection from n2 to n1 (direct connection)\r\n     n2.connect(null, n1.outview.ID);\r\n     n2.connect(null, n1.outview.ID); // x2 but no additionnal connection\r\n//     // #5 add an arc from n1 to n2 at the initiative of n2\r\n     n2.connect(n1.outview.ID);\r\n};\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "opts",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js~opts",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"webrtc\": *, \"verbose\": boolean}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "n1",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js~n1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "n2",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js~n2",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "n3",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js~n3",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "variable",
    "name": "twoconnections",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js~twoconnections",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "callbacks",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js~callbacks",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      },
      {
        "name": "dest",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"onInitiate\": *, \"onAccept\": *, \"onReady\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "variable",
    "name": "id1",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js~id1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "id2",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js~id2",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "bridge",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js~bridge",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "content": "'use strict';\r\n\r\n/**\r\n * @access private\r\n */\r\nconst MConnectTo = (protocol, from, to) => {\r\n    return {\r\n      protocol,\r\n      type: 'MConnectTo',\r\n      from,\r\n      to\r\n    };\r\n};\r\n\r\n/**\r\n * @access private\r\n */\r\nconst MForwardTo = (from, to, message, protocol) => {\r\n    return {\r\n      protocol,\r\n      type: 'MForwardTo',\r\n      from,\r\n      to,\r\n      message\r\n    };\r\n};\r\n\r\n/**\r\n * @access private\r\n */\r\nconst MForwarded = (from, to, message, protocol) => {\r\n    return {\r\n      protocol: protocol,\r\n      type: 'MForwarded',\r\n      from: from,\r\n      to: to,\r\n      message: message\r\n    };\r\n};\r\n\r\n/**\r\n * @access private\r\n */\r\nconst MDirect = (from, message, protocol) => {\r\n    return {\r\n      protocol,\r\n      type: 'MDirect',\r\n      from,\r\n      message\r\n    };\r\n};\r\n\r\nmodule.exports = { MConnectTo, MForwardTo, MForwarded, MDirect };\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "MConnectTo",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js~MConnectTo",
    "access": "private",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "importStyle": "{MConnectTo}",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "name": "protocol",
        "types": [
          "*"
        ]
      },
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"protocol\": *, \"type\": string, \"from\": *, \"to\": *}"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "MForwardTo",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js~MForwardTo",
    "access": "private",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "importStyle": "{MForwardTo}",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "types": [
          "*"
        ]
      },
      {
        "name": "protocol",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"protocol\": *, \"type\": string, \"from\": *, \"to\": *, \"message\": *}"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "MForwarded",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js~MForwarded",
    "access": "private",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "importStyle": "{MForwarded}",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "types": [
          "*"
        ]
      },
      {
        "name": "protocol",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"protocol\": *, \"type\": string, \"from\": *, \"to\": *, \"message\": *}"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "MDirect",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js~MDirect",
    "access": "private",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/messages.js",
    "importStyle": "{MDirect}",
    "description": "",
    "lineNumber": 44,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "types": [
          "*"
        ]
      },
      {
        "name": "protocol",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"protocol\": *, \"type\": string, \"from\": *, \"message\": *}"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "content": "var Neighborhood = require('neighborhood-wrtc');\r\nvar WRTC;\r\nvar opts = {\r\n  webrtc: {\r\n    iceServers: [],\r\n    trickle: true\r\n  }\r\n};\r\n\r\n// create 3 neighborhood tables without options\r\nvar n1 = new Neighborhood(opts);\r\nvar n2 = new Neighborhood(opts);\r\nvar n3 = new Neighborhood(opts);\r\nvar n4 = new Neighborhood(opts);\r\n\r\nvar callbacks = function(src, dest){\r\n    return {\r\n        onInitiate: function(offer){\r\n            dest.connection(callbacks(dest, src), offer);\r\n        },\r\n        onAccept: function(offer){\r\n            dest.connection(offer);\r\n        },\r\n        onReady: function(){\r\n            console.log(\"Connection established.\");\r\n        }\r\n    };\r\n};\r\n\r\n// #1 establishing a connection from n1 to n2, twice but one socket is kept\r\nn1.connection(callbacks(n1, n2));\r\nn1.connection(callbacks(n1, n2));\r\n// #2 establishing a connection from n1 to n3\r\nn1.connection(callbacks(n1, n3));\r\n// > console: should see 6 \"connection established\" messages\r\n// > console: and two others after a bit\r\nsetTimeout(function(){\r\n    n1.connection(callbacks(n1,n3));\r\n}, 10000);\r\n\r\n// #3 a connection can fail to establish\r\nvar failCallbacks = function(src, dest){\r\n    return {\r\n        onInitiate: function(offer){\r\n            dest.connection(failCallbacks(dest, src), offer);\r\n        },\r\n        onAccept: function(offer){\r\n//            dest.connection(offer);\r\n        },\r\n        onReady: function(){\r\n            console.log('message that never appears');\r\n        }\r\n    }\r\n};\r\n\r\nn1.connection(failCallbacks(n1, n4));\r\n\r\n// #4 two minutes -- the timeout -- before a fail appears\r\nn1.on('fail', function(){\r\n    console.log('@n1, Fail.');\r\n});\r\n\r\nn4.on('fail', function(){\r\n    console.log('@n4, Fail.');\r\n});\r\n\r\n// #5 remove an arc using n1.disconnect(id)\r\nfunction disco(peer){\r\n    return function(id){\r\n        console.log('@'+ peer +' the arc '+ id +' has been removed.');\r\n    };\r\n};\r\n\r\nn1.on('disconnect', disco('n1'));\r\nn2.on('disconnect', disco('n2'));\r\nn3.on('disconnect', disco('n3'));\r\nn4.on('disconnect', disco('n4'));\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 172,
    "kind": "variable",
    "name": "opts",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js~opts",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"webrtc\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "variable",
    "name": "n1",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js~n1",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "name": "n2",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js~n2",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "name": "n3",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js~n3",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "name": "n4",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js~n4",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "callbacks",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js~callbacks",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      },
      {
        "name": "dest",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"onInitiate\": *, \"onAccept\": *, \"onReady\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "failCallbacks",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js~failCallbacks",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      },
      {
        "name": "dest",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"onInitiate\": *, \"onAccept\": *, \"onReady\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "disco",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js~disco",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/example/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "peer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/extended-sorted-array.js",
    "content": "var SortedArray = require('sorted-cmp-array');\r\n\r\nSortedArray.prototype.get = function(entry){\r\n    var index = this.indexOf(entry);\r\n    return ((index >= 0)&&this.arr[index]) || null;\r\n};\r\n\r\n\r\nSortedArray.prototype.contains = function(entry){\r\n    return (this.indexOf(entry) >= 0);\r\n};\r\n\r\nmodule.exports = SortedArray;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/extended-sorted-array.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "get",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/extended-sorted-array.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/extended-sorted-array.js~get",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/extended-sorted-array.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "entry",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "contains",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/extended-sorted-array.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/extended-sorted-array.js~contains",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/extended-sorted-array.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "entry",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "content": "var SortedArray = require('./extended-sorted-array');\r\n\r\nfunction MultiSet(Comparator){\r\n    this.ms = new SortedArray(Comparator||defaultComparator);\r\n};\r\n\r\nMultiSet.prototype.insert = function(entryOrId){\r\n    var object = this.ms.get(entryOrId);\r\n    if (object){\r\n        // #1 if the object already exists, increment its occurrence\r\n        object.occ += 1;\r\n    } else {\r\n        // #2 initalize the occurrence to 1 and insert it otherwise\r\n        entryOrId.occ = 1;\r\n        this.ms.insert(entryOrId);\r\n    };\r\n    return object;\r\n};\r\n\r\nMultiSet.prototype.remove = function(entryOrId){\r\n    var object = this.ms.get(entryOrId);\r\n    if (object){\r\n        object.occ -= 1;\r\n        (object.occ <= 0) && this.ms.remove(entryOrId);\r\n    };\r\n    return object;\r\n};\r\n\r\nMultiSet.prototype.removeAll = function(entryOrId){\r\n    var object = this.ms.get(entryOrId);\r\n    if (object){\r\n//        object.occ = 0;\r\n        this.ms.remove(entryOrId);\r\n    };\r\n    return object;\r\n};\r\n\r\nMultiSet.prototype.contains = function(entryOrId){\r\n    return this.ms.contains(entryOrId);\r\n};\r\n\r\nMultiSet.prototype.get = function(entryOrId){\r\n    return this.ms.get(entryOrId);\r\n};\r\n\r\nfunction defaultComparator(a, b){\r\n    var first = a.id || a;\r\n    var second = b.id || b;\r\n    if (first < second){return -1};\r\n    if (first > second){return  1};\r\n    return 0;\r\n};\r\n\r\n\r\nmodule.exports = MultiSet;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "insert",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js~insert",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "entryOrId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "remove",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js~remove",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "entryOrId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "removeAll",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js~removeAll",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "entryOrId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "contains",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js~contains",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "entryOrId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 188,
    "kind": "function",
    "name": "get",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js~get",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "entryOrId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "defaultComparator",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js~defaultComparator",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "MultiSet",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js~MultiSet",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/multiset.js",
    "importStyle": "MultiSet",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "Comparator",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 191,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js",
    "content": "'use strict';\r\n\r\nconst EventEmitter = require('events');\r\nconst _ = require('lodash');\r\nconst uuid = require('uuid/v4');\r\nconst SortedArray = require('./extended-sorted-array.js');\r\nconst MultiSet = require('./multiset.js');\r\nconst SimplePeer = require('simple-peer');\r\n\r\n/**\r\n * Easy-to-use interface on SimplePeer (npm: simple-peer)\r\n * @param {object} options the options available to the connections, e.g. timeout before\r\n * @param {string} options.protocol Protocol to use\r\n * @param {object} options.webrtc Webrtc options\r\n * @param {number} options.timeout Time to wait for socket destruction or failed message (time in milliseconds)\r\n * @param {function} options.encoding Method to customize message sent, default: return JSON.stringify(data);\r\n * @param {function} options.decoding Method to decode a received message, default: return JSON.parse(data);\r\n * @param {boolean} options.verbose Print log message: default false\r\n */\r\nclass Neighborhood extends EventEmitter {\r\n\tconstructor (options) {\r\n\t\tsuper();\r\n    // #1 save options\r\n    this.options = {\r\n      protocol: 'default',\r\n      webrtc: {\r\n        iceServers: [],\r\n        trickle: false,\r\n        initiator: false\r\n      },\r\n      config: {},\r\n      trickle: false,\r\n      timeout: 2 * 60 * 1000,\r\n      encoding: (d) => {\r\n        return JSON.stringify(d);\r\n      },\r\n      decoding: (d) => {\r\n        return JSON.parse(d);\r\n      },\r\n      verbose: false\r\n    };\r\n    this.options = _.merge(this.options, options);\r\n    // Override config to match webrtc options\r\n    this.options.config = this.options.webrtc;\r\n\r\n    this.protocol = this.options.protocol + '-neighborhood-wrtc';\r\n\r\n\t\tthis.encoding = this.options.encoding;\r\n\t\tthis.decoding = this.options.decoding;\r\n\t\tthis.ID = uuid();\r\n\r\n\t\tif(options && options.verbose) {\r\n\t\t\tthis.verbose = options.verbose;\r\n\t\t}\r\n\r\n    /*!\r\n     * \\brief compare the id of entries in tables\r\n     */\r\n    this.Comparator = (a, b) => {\r\n        var first = a.id || a;\r\n        var second = b.id || b;\r\n        if (first < second){ return -1; };\r\n        if (first > second){ return  1; };\r\n        return 0;\r\n    };\r\n    // #2 initialize tables\r\n    this.pending = new SortedArray(this.Comparator); // not finalized yet\r\n    this.living = new MultiSet(this.Comparator); // live and usable\r\n    this.dying = new SortedArray(this.Comparator); // being remove\r\n\t}\r\n\r\n  /**\r\n   * @private\r\n   */\r\n\tMResponse (tid, pid, offer, protocol) {\r\n\t\treturn {\r\n\t\t\ttid: tid,\r\n\t\t\tpid: pid,\r\n\t\t\tprotocol: protocol,\r\n\t\t\ttype: 'MResponse',\r\n\t\t\toffer: offer\r\n\t\t};\r\n\t}\r\n  /**\r\n   * @private\r\n   */\r\n\tMRequest (tid, pid, offer, protocol) {\r\n\t\treturn {\r\n\t\t\ttid: tid,\r\n\t\t\tpid: pid,\r\n\t\t\tprotocol: protocol,\r\n\t\t\ttype: 'MRequest',\r\n\t\t\toffer: offer\r\n\t\t};\r\n\t}\r\n\r\n  /**\r\n   * @private\r\n   */\r\n\tlog (...args) {\r\n\t\tif(this.verbose) {\r\n\t\t\tconsole.log('[NEIGHBORHOOD] ', args);\r\n\t\t}\r\n\t}\r\n\r\n  /**\r\n   * Disconnect one of the arc with the identifier in argument. If\r\n   * it was the last arc with such id, the socket is relocated to the dying\r\n   * table. The socket will be destroy after a bit. If there is no argument,\r\n   * disconnect the whole.\r\n   * @param {string|undefined} id Id provided to just disconnect the arc or if undefined disconnect all arcs\r\n   */\r\n  disconnect (id) {\r\n    let result = true;\r\n    if (!id) {\r\n      // #1 disconnect everything\r\n      this.pending.arr.forEach((e) => {\r\n          e.socket && e.socket.destroy();\r\n      });\r\n      while (this.living.ms.arr.length > 0) {\r\n          const e = this.living.ms.arr[0];\r\n          e.socket && e.socket.destroy();\r\n      }\r\n      while (this.dying.arr.length > 0) {\r\n          const e = this.dying.arr[0];\r\n          e.socket && e.socket.destroy();\r\n      }\r\n    } else {\r\n      // #2 remove one arc\r\n      let entry = this.living.remove(id);\r\n      entry && this.emit('disconnect', entry.id);\r\n      if (entry && entry.occ <= 0) {\r\n          entry.timeout = setTimeout(function () {\r\n              entry.socket.destroy();\r\n          }, this.options.timeout);\r\n          this.dying.insert(entry);\r\n      }\r\n      result = entry && true || false;\r\n    }\r\n    return result;\r\n  }\r\n\r\n\t/**\r\n\t * New method to encode the message as we want\r\n\t * @param  {object} message The message to encode\r\n\t * @return {string|binary} Encoded message\r\n\t */\r\n\tencode (message) {\r\n\t\treturn this.encoding(message);\r\n\t}\r\n\r\n\t/**\r\n\t * New method to encode the message as we want\r\n\t * @param  {object} message The message to encode\r\n\t * @return {string|binary} Encoded message\r\n\t */\r\n\tdecode (message) {\r\n\t\treturn this.decoding(message);\r\n\t}\r\n\r\n\t/**\r\n\t * Send a message to the socket in argument\r\n\t * @param {string} id the identifier of the socket\r\n\t * @param {object} message the message to send\r\n\t * @return {boolean} true if the message is sent, false otherwise\r\n\t */\r\n\tsend (id, message) {\r\n\t\t// #1 convert message to string (TODO) check if there is a better way\r\n\t\tlet msg = ((message instanceof String) && message) || this.encode(message);\r\n\t\t// #2 get the socket to use\r\n\t\tlet entry = this.get(id);\r\n\t\tlet socket = entry && entry.socket;\r\n\t\t// #3 send\r\n\t\tlet result = msg && socket && socket.connected && socket._channel && (socket._channel.readyState === 'open');\r\n\t\t// result && socket.send(msg);\r\n\t\ttry {\r\n\t\t\tresult && socket.send(msg);\r\n\t\t\t// DONT SET RESULT TO TRUE !\r\n\t\t} catch (e) {\r\n\t\t\tthis.log('[NEIGHBORHOOD:SEND:ERROR] ', new Error(e));\r\n\t\t\tresult = false;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t* creates a new incomming or outgoing connection depending on arguments\r\n\t* @param {callback} callbacks the callback function when the stun/ice server returns the\r\n\t* offer\r\n\t* @param {object} message empty if it must initiate a connection, or the message received\r\n\t* if it must answer or finalize one\r\n\t* @param {string} protocol the connection is established for a specific protocol\r\n\t* @return {string} the id of the socket\r\n\t*/\r\n\tconnection (callbacks, message, protocol) {\r\n\r\n\t\tlet msg = (callbacks && callbacks.type && callbacks) || message;\r\n\t\tlet result;\r\n\r\n\t\tif (!msg) {\r\n\t\t\tresult = this.initiate(callbacks, protocol);\r\n\t\t} else if (msg.type==='MRequest') {\r\n\r\n\t\t\tif(message && message.pid && this.ID !== message.pid) {\r\n\t\t\t\tresult = this.accept(msg, callbacks);\r\n\t\t\t\tresult = this.alreadyExists(msg, callbacks) || result;\r\n\t\t\t}\r\n\r\n\t\t} else if (msg.type==='MResponse') {\r\n\t\t\tresult = this.finalize(msg);\r\n\t\t\tresult = this.alreadyExists(msg) || result;\r\n\t\t}\r\n\r\n\t\treturn result && result.id;\r\n\t}\r\n\r\n  /**\r\n   * Get the entry corresponding to the id in argument. The entry contains\r\n   * the socket.\r\n   * @param {string} id the identifier of the socket to retrieve\r\n   * @return {object} an entry from tables. It priorizes entries in living, then dying,\r\n   * then pending.\r\n   */\r\n  get(id){\r\n      return this.living.get(id) || this.dying.get(id) || this.pending.get(id);\r\n  }\r\n\r\n\t/**\r\n\t * @private\r\n\t * Common behavior to initiating and accepting sockets\r\n\t * @param {object} entry the entry in the neighborhood table\r\n\t * @return {void}\r\n\t */\r\n\tcommon (entry) {\r\n\t\tconst self = this, socket = entry.socket;\r\n\r\n\t\tsocket.on('data', (message) => {\r\n\t\t\tmessage = self.decode(message);\r\n\t\t\tself.emit('receive', entry.pid, message);\r\n\t\t});\r\n\t\tsocket.on('stream', (stream) => {\r\n\t\t\tself.emit('stream', entry.pid, stream);\r\n\t\t});\r\n\r\n\t\tsocket.on('error', err => {\r\n\t\t\tself.emit('error', new Error(err));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t * initiates a connection with another peer -- the id of which is unknown\r\n\t * @param {callback} callbacks the function to call when signaling info are received and\r\n\t * when the connection is ready to be used\r\n\t * @param {string} protocol The protocol\r\n\t * @return {object} entry\r\n\t */\r\n\tinitiate (callbacks, protocol) {\r\n\t\tconst self = this;\r\n\t\tlet opts = self.options.config;\r\n\t\topts.initiator = true;\r\n\t\tlet socket = new SimplePeer(opts);\r\n\t\tlet entry = {\r\n\t\t\tid: uuid(),\r\n\t\t\tsocket: socket,\r\n\t\t\tprotocol: protocol,\r\n\t\t\tsuccessful: false, // not yet\r\n\t\t\tonOffer: callbacks && callbacks.onInitiate,\r\n\t\t\tonReady: callbacks && callbacks.onReady\r\n\t\t};\r\n\r\n\t\tthis.pending.insert(entry);\r\n\t\tsocket.on('signal', (offer) => {\r\n\t\t\tentry.onOffer && entry.onOffer(self.MRequest(entry.id, self.ID, offer, protocol));\r\n\t\t});\r\n\r\n\t\tentry.timeout = setTimeout(() => {\r\n\t\t\tlet e = self.pending.get(entry.id);\r\n\t\t\tif (e && !e.successful) {\r\n\t\t\t\tself.emit('fail', '[FAIL:INITIATE] an error occured during removing the entry');\r\n\t\t\t}\r\n\t\t\tself.pending.remove(entry) && socket.destroy();\r\n\t\t}, this.options.timeout);\r\n\t\treturn entry;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t * accept the offer of another peer\r\n\t * @param {object} message the received message containing id and offer\r\n\t * @param {callback} callbacks the function call after receiving the offer and\r\n\t * when the connection is ready\r\n\t * @return {object} Entry\r\n\t */\r\n\taccept (message, callbacks) {\r\n\t\t// #1 if already exists, use it\r\n\r\n\r\n\t\tlet prior = this.pending.get(message.tid);\r\n\t\tif (prior) {\r\n\t\t\treturn prior;\r\n\t\t}\r\n\t\t// #2 otherwise, create the socket\r\n\t\tconst self = this;\r\n\t\t// let opts=JSON.parse(JSON.stringify(this.options));// quick but ugly copy\r\n\t\tlet opts = this.options.config;\r\n\t\topts.initiator = false;\r\n\t\tlet socket = new SimplePeer(opts);\r\n\t\tlet entry = {\r\n\t\t\tid: message.tid,\r\n\t\t\tpid: message.pid,\r\n\t\t\tprotocol: message.protocol,\r\n\t\t\tsocket: socket,\r\n\t\t\tsuccessful: false,\r\n\t\t\tonOffer: callbacks && callbacks.onAccept,\r\n\t\t\tonReady: callbacks && callbacks.onReady\r\n\t\t};\r\n\r\n\t\tthis.pending.insert(entry);\r\n\t\tsocket.on('signal', function (offer) {\r\n\t\t\tentry.onOffer && entry.onOffer(self.MResponse(entry.id, self.ID, offer, entry.protocol));\r\n\t\t});\r\n\t\tsocket.on('connect', function () {\r\n\t\t\tself.get(entry.pid) && socket.destroy();\r\n\t\t\tself.pending.remove(entry);\r\n\t\t\tself.living.insert({\r\n\t\t\t\tid: entry.pid,\r\n\t\t\t\tsocket: entry.socket,\r\n\t\t\t\tonReady: entry.onReady,\r\n\t\t\t\tonOffer: entry.onOffer\r\n\t\t\t});\r\n\r\n\r\n\t\t\tentry.onReady && entry.onReady(entry.pid);\r\n\t\t\tself.emit('ready', entry.pid);\r\n\t\t\tentry.protocol && self.emit('ready-'+entry.protocol, entry.pid);\r\n\r\n\t\t\tclearTimeout(entry.timeout);\r\n\t\t\tentry.timeout = null;\r\n\t\t});\r\n\t\tsocket.on('close', function () {\r\n\t\t\tif (self.pending.contains(entry.id)) {\r\n\t\t\t\t// #A pending: entry is kept until automatic destruction\r\n\t\t\t\tentry.socket = null;\r\n\t\t\t} else {\r\n\t\t\t\t// #B living or dying: clear the tables\r\n\t\t\t\tentry.timeout && clearTimeout(entry.timeout);\r\n\t\t\t\tentry.timeout = null;\r\n\t\t\t\tlet live = self.living.removeAll(entry.pid);\r\n\t\t\t\tif (live) {\r\n\t\t\t\t\tfor (let i = 0; i < live.occ; ++i) {\r\n\t\t\t\t\t\tself.emit('disconnect', entry.pid);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tself.dying.remove(entry.pid);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.common(entry);\r\n\r\n\t\tentry.timeout = setTimeout(function () {\r\n\t\t\tlet e = self.pending.get(entry.id);\r\n\t\t\tif (e && !e.successful) {\r\n\t\t\t\tself.emit('fail', '[FAIL:ACCEPT] an error occured during removing the entry');\r\n\t\t\t}\r\n\t\t\tself.pending.remove(entry.id) && socket.destroy();\r\n\t\t}, this.options.timeout);\r\n\t\treturn entry;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t* finalize the behavior of an initiating socket\r\n\t* @param {object} message the received message possibly containing an answer to the\r\n\t* proposed offer\r\n\t* @return {object} Return prior entry\r\n\t*/\r\n\tfinalize (message) {\r\n\t\t// #1 if it does not exists, stop; or if it exists but already setup\r\n\t\t// return it\r\n\t\tlet prior = this.pending.get(message.tid);\r\n\t\tif (!prior || prior.pid) {\r\n\t\t\treturn prior;\r\n\t\t}\r\n\t\t// #2 otherwise set the events correctly\r\n\t\tprior.pid = message.pid;\r\n\r\n\t\tlet entry = {\r\n\t\t\tid: message.pid,\r\n\t\t\tsocket: prior.socket,\r\n\t\t\tprotocol: prior.protocol,\r\n\t\t\tonReady: prior.onReady,\r\n\t\t\tonOffer: prior.onOffer\r\n\t\t};\r\n\r\n\t\tconst self = this;\r\n\t\tlet socket = entry.socket;\r\n\t\tsocket.on('connect', function () {\r\n\r\n\t\t\tself.get(entry.id) && socket.destroy();\r\n\t\t\tself.pending.remove(prior);\r\n\t\t\tself.living.insert(entry);\r\n\t\t\tentry.onReady && entry.onReady(prior.pid);\r\n\t\t\tself.emit('ready', prior.pid);\r\n\t\t\tentry.protocol && self.emit('ready-'+entry.protocol, prior.pid);\r\n\t\t\tclearTimeout(prior.timeout);\r\n\r\n\t\t});\r\n\t\tsocket.on('close', function () {\r\n\t\t\tif (self.pending.contains(message.tid)) {\r\n\t\t\t\tself.pending.get(message.tid).socket = null;\r\n\t\t\t} else {\r\n\t\t\t\tprior.timeout && clearTimeout(prior.timeout);\r\n\t\t\t\tprior.timeout = null;\r\n\t\t\t\tlet live = self.living.removeAll(prior.pid);\r\n\t\t\t\tif (live) {\r\n\t\t\t\t\tfor (let i = 0; i < live.occ; ++i) {\r\n\t\t\t\t\t\tself.emit('disconnect', prior.pid);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tself.dying.remove(prior.pid);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.common(prior);\r\n\r\n\t\treturn prior;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t*  the peer id already exists in the tables\r\n\t*  @param {object} message The message\r\n\t*  @param {callback} callbacks the callbacks\r\n\t*  @return {object} alreaydExist\r\n\t*/\r\n\talreadyExists (message, callbacks) {\r\n\t\tconst self = this;\r\n\t\tlet alreadyExists = this.get(message.pid);\r\n\t\tif  (!alreadyExists) {\r\n\t\t\t// #A does not already exists but pending\r\n\t\t\tlet entry = this.pending.get(message.tid);\r\n\t\t\tentry && entry.socket && message.offer && entry.socket.signal(message.offer);\r\n\t\t} else {\r\n\t\t\t// #B already exists and pending\r\n\t\t\tlet toRemove = this.pending.get(message.tid);\r\n\t\t\tif (toRemove && toRemove.socket) { // exists but socket still w8in\r\n\t\t\t\tif (!alreadyExists.timeout) {\r\n\t\t\t\t\t// #1 already in living socket, add an occurrence\r\n\t\t\t\t\tthis.living.insert(message.pid);\r\n\t\t\t\t\ttoRemove.successful = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// #2 was dying, resurect the socket\r\n\t\t\t\t\tthis.dying.remove(alreadyExists);\r\n\t\t\t\t\tclearTimeout(alreadyExists.timeout);\r\n\t\t\t\t\talreadyExists.timeout = null;\r\n\t\t\t\t\tthis.living.insert(alreadyExists);\r\n\t\t\t\t\ttoRemove.successful = true;\r\n\t\t\t\t}\r\n\t\t\t\ttoRemove.socket.destroy();\r\n\t\t\t\t// #C standard on accept function if it exists in arg\r\n\t\t\t\tmessage.offer && callbacks && callbacks.onAccept && callbacks.onAccept(self.MResponse(message.tid, this.ID,\tnull,\tmessage.protocol));\r\n\r\n\t\t\t\t(callbacks &&\tcallbacks.onReady && callbacks.onReady(alreadyExists.id)) ||\t(toRemove && \ttoRemove.onReady &&\ttoRemove.onReady(alreadyExists.id));\r\n\t\t\t\tthis.emit('ready', alreadyExists.id);\r\n\t\t\t\tmessage.protocol && this.emit('ready-'+message.protocol, alreadyExists.id);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn alreadyExists;\r\n\t}\r\n\r\n}\r\n\r\n\r\nmodule.exports = Neighborhood;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 192,
    "kind": "class",
    "name": "Neighborhood",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js",
    "importStyle": "Neighborhood",
    "description": "Easy-to-use interface on SimplePeer (npm: simple-peer)",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "the options available to the connections, e.g. timeout before"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.protocol",
        "description": "Protocol to use"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.webrtc",
        "description": "Webrtc options"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.timeout",
        "description": "Time to wait for socket destruction or failed message (time in milliseconds)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "options.encoding",
        "description": "Method to customize message sent, default: return JSON.stringify(data);"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "options.decoding",
        "description": "Method to decode a received message, default: return JSON.parse(data);"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.verbose",
        "description": "Print log message: default false"
      }
    ],
    "interface": false,
    "extends": [
      "events~EventEmitter"
    ]
  },
  {
    "__docId__": 193,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "options",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#options",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "{\"protocol\": string, \"webrtc\": *, \"config\": *, \"trickle\": *, \"timeout\": *, \"encoding\": *, \"decoding\": *, \"verbose\": *}"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "protocol",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#protocol",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "encoding",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#encoding",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "decoding",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#decoding",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "ID",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#ID",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "verbose",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#verbose",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "Comparator",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#Comparator",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "pending",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#pending",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "living",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#living",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "dying",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#dying",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "MResponse",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#MResponse",
    "access": "private",
    "description": "",
    "lineNumber": 75,
    "params": [
      {
        "name": "tid",
        "types": [
          "*"
        ]
      },
      {
        "name": "pid",
        "types": [
          "*"
        ]
      },
      {
        "name": "offer",
        "types": [
          "*"
        ]
      },
      {
        "name": "protocol",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"tid\": *, \"pid\": *, \"protocol\": *, \"type\": string, \"offer\": *}"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "MRequest",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#MRequest",
    "access": "private",
    "description": "",
    "lineNumber": 87,
    "params": [
      {
        "name": "tid",
        "types": [
          "*"
        ]
      },
      {
        "name": "pid",
        "types": [
          "*"
        ]
      },
      {
        "name": "offer",
        "types": [
          "*"
        ]
      },
      {
        "name": "protocol",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"tid\": *, \"pid\": *, \"protocol\": *, \"type\": string, \"offer\": *}"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "log",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#log",
    "access": "private",
    "description": "",
    "lineNumber": 100,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "disconnect",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#disconnect",
    "access": "public",
    "description": "Disconnect one of the arc with the identifier in argument. If\nit was the last arc with such id, the socket is relocated to the dying\ntable. The socket will be destroy after a bit. If there is no argument,\ndisconnect the whole.",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Id provided to just disconnect the arc or if undefined disconnect all arcs"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "encode",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#encode",
    "access": "public",
    "description": "New method to encode the message as we want",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The message to encode"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "binary"
      ],
      "spread": false,
      "description": "Encoded message"
    }
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "decode",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#decode",
    "access": "public",
    "description": "New method to encode the message as we want",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The message to encode"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "binary"
      ],
      "spread": false,
      "description": "Encoded message"
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "send",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#send",
    "access": "public",
    "description": "Send a message to the socket in argument",
    "lineNumber": 167,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the identifier of the socket"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "the message to send"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the message is sent, false otherwise"
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "connection",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#connection",
    "access": "public",
    "description": "creates a new incomming or outgoing connection depending on arguments",
    "lineNumber": 195,
    "params": [
      {
        "nullable": null,
        "types": [
          "callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "the callback function when the stun/ice server returns the\noffer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "empty if it must initiate a connection, or the message received\nif it must answer or finalize one"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "protocol",
        "description": "the connection is established for a specific protocol"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the id of the socket"
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "get",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#get",
    "access": "public",
    "description": "Get the entry corresponding to the id in argument. The entry contains\nthe socket.",
    "lineNumber": 224,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the identifier of the socket to retrieve"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "an entry from tables. It priorizes entries in living, then dying,\nthen pending."
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "common",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#common",
    "access": "private",
    "description": "",
    "lineNumber": 234,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "entry",
        "description": "the entry in the neighborhood table"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "initiate",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#initiate",
    "access": "private",
    "description": "",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "the function to call when signaling info are received and\nwhen the connection is ready to be used"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "protocol",
        "description": "The protocol"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "entry"
    }
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "accept",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#accept",
    "access": "private",
    "description": "",
    "lineNumber": 296,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "the received message containing id and offer"
      },
      {
        "nullable": null,
        "types": [
          "callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "the function call after receiving the offer and\nwhen the connection is ready"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Entry"
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "finalize",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#finalize",
    "access": "private",
    "description": "",
    "lineNumber": 380,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "the received message possibly containing an answer to the\nproposed offer"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Return prior entry"
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "alreadyExists",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/n2n-overlay-wrtc/lib/neighborhood-wrtc/lib/neighborhood.js~Neighborhood#alreadyExists",
    "access": "private",
    "description": "",
    "lineNumber": 439,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The message"
      },
      {
        "nullable": null,
        "types": [
          "callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "the callbacks"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "alreaydExist"
    }
  },
  {
    "__docId__": 219,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/partialview.js",
    "content": "'use strict';\r\n\r\nconst SortedArray = require('./extended-sorted-array.js');\r\n\r\n/**\r\n * Structure containing the neighborhood of a peer.\r\n * @class PartialView\r\n */\r\nclass PartialView {\r\n\t/**\r\n\t * Constructor of PartialView\r\n\t * @constructor\r\n\t * @param {object} options Object containing all options\r\n\t * @param {double} options.usedCoef Represents the amount of clients shuffled between [0;1]\r\n\t */\r\n\tconstructor (options) {\r\n\t\t// #1 initialize the partial view as an array sorted by age\r\n\t\t// entries are {age, id, socketId}\r\n\r\n\t\t// Coef : [0;1]\r\n\t\tthis.usedCoef = options.usedCoef;\r\n\r\n\t\tthis.comparator = (a, b) => {\r\n\t\t\tconst first = a.age || a;\r\n\t\t\tconst second = b.age || b;\r\n\t\t\tif (first < second) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (first > second) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t};\r\n\r\n\t\tthis.array = new SortedArray(this.comparator);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the oldest peer in the partialView\r\n\t * @return {object} the oldest peer in the array\r\n\t */\r\n\tgetOldest () {\r\n\t\treturn this.array.arr[0];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Increment the age of the whole partial view\r\n\t * @return {void}\r\n\t */\r\n\tincrement () {\r\n\t\tfor (let i = 0; i < this.array.arr.length; ++i) {\r\n\t\t\tthis.array.arr[i].age += 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get a sample of the partial view\r\n\t * @param {string} neighbor the neighbor which performs the exchange with us\r\n\t * @param {boolean} isInitiator whether or not the caller is the initiator of the\r\n\t * exchange\r\n\t * @return {array} an array containing neighbors from this partial view\r\n\t */\r\n\tgetSample (neighbor, isInitiator) {\r\n\t\tlet sample = [];\r\n\t\t// #1 copy the partial view\r\n\t\tlet clone = new SortedArray(this.comparator);\r\n\t\tfor (let i = 0; i < this.array.arr.length; ++i) {\r\n\t\t\tclone.arr.push(this.array.arr[i]);\r\n\t\t}\r\n\t\t// #2 process the size of the sample\r\n\t\tconst sampleSize = Math.ceil(this.array.arr.length * this.usedCoef);\r\n    if (isInitiator) {\r\n//        console.log('neighbor ', neighbor);\r\n        var found = false;\r\n        var i = 0;\r\n        while(!found && i<clone.arr.length){\r\n            if (clone.arr[i].id===neighbor.id){\r\n                found = true;\r\n            } else {\r\n                ++i;\r\n            };\r\n        };\r\n\t\t\t// #A remove an occurrence of the chosen neighbor\r\n\t    clone.arr.splice(i,1);\r\n\t\t\tsample.push(neighbor);\r\n\t\t}\r\n\r\n\t\t// #3 randomly add neighbors to the sample\r\n\t\twhile (sample.length < sampleSize) {\r\n\t\t\tconst rn = Math.floor(Math.random() * clone.arr.length);\r\n\t\t\tsample.push(clone.arr[rn]);\r\n\t\t\tclone.arr.splice(rn, 1);\r\n\t\t}\r\n\r\n\t\treturn sample;\r\n\t}\r\n\r\n\t/**\r\n\t * Replace the occurrences of the old peer by the fresh one\r\n\t * @param {array} sample the sample to modify\r\n\t * @param {object} old the old reference to replace\r\n\t * @param {object} fresh the new reference to insert\r\n\t * @return {array} an array with the replaced occurences\r\n\t */\r\n\treplace (sample, old, fresh) {\r\n\t\tconst result = [];\r\n\t\tfor (let i = 0; i < sample.length; ++i) {\r\n\t\t\tif (sample[i].id === old.id) {\r\n\t\t\t\tresult.push(fresh);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(sample[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Add the neigbhor to the partial view with an age of 0\r\n\t * @param {object} config the peer to add to the partial view\r\n\t * @return {void}\r\n\t */\r\n\taddNeighbor (config) {\r\n\t\tthis.array.insert(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the index of the peer in the partialview\r\n\t * @param {string} id The id of the peer inside the partialView.\r\n\t * @return {integer} the index of the peer in the array, -1 if not found\r\n\t */\r\n\tgetIndex (id) {\r\n\t\tlet i = this.array.arr.length - 1;\r\n\t\tlet index = -1;\r\n\t\tlet found = false;\r\n\t\twhile (!found && i >= 0) {\r\n\t\t\tif (id === this.array.arr[i].id) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\tindex = i;\r\n\t\t\t}\r\n\t\t\t--i;\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the peer from the partial view\r\n\t * @param {string} id the peer to remove\r\n\t * @param {integer} age The age of the peer\r\n\t * @return {object} the removed entry if it exists, null otherwise\r\n\t */\r\n\tremovePeer (id, age) {\r\n\t\tif (!age) {\r\n\t\t\tconst index = this.getIndex(id);\r\n\t\t\tlet removedEntry = null;\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tremovedEntry = this.array.arr[index];\r\n\t\t\t\tthis.array.arr.splice(index, 1);\r\n\t\t\t}\r\n\t\t\treturn removedEntry;\r\n\t\t} else {\r\n\t\t\treturn this.removePeerAge(id, age);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Remove all occurrences of the peer and return the number of removals\r\n\t * @param {string} id the peer to remove\r\n\t * @return {integer} the number of occurrences of the removed peer\r\n\t */\r\n\tremoveAll (id) {\r\n\t\tlet occ = 0;\r\n\t\tlet i = 0;\r\n\t\twhile (i < this.array.arr.length) {\r\n\t\t\tif (this.array.arr[i].id === id) {\r\n\t\t\t\tthis.array.arr.splice(i, 1);\r\n\t\t\t\tocc += 1;\r\n\t\t\t} else {\r\n\t\t\t\t++i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn occ;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove all the elements contained in the sample in argument\r\n\t * @param {array} sample the elements to remove\r\n\t * @return {void}\r\n\t */\r\n\tremoveSample (sample) {\r\n\t\tfor (let i = 0; i < sample.length; ++i) {\r\n\t\t\tthis.removePeer(sample[i].id, sample[i].age);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get the size of the partial view\r\n\t * @return {integer} the size of the partial view\r\n\t */\r\n\tlength () {\r\n\t\treturn this.array.arr.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if the partial view contains the reference\r\n\t * @param {string} id the peer to check\r\n\t * @return {boolean} true if the peer is in the partial view, false otherwise\r\n\t */\r\n\tcontains (id) {\r\n\t\treturn this.getIndex(id) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t * brief remove all elements from the partial view\r\n\t * @return {void}\r\n\t */\r\n\tclear () {\r\n\t\tthis.array.arr.splice(0, this.array.arr.length);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the array containing views\r\n\t * @return {array} Array with all views\r\n\t */\r\n\tget () {\r\n\t\treturn this.array.arr;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the peer with the associated age from the partial view\r\n\t * @param {string} id the peer to remove\r\n\t * @param {integer} age the age of the peer to remove\r\n\t * @return {object} the removed entry if it exists, null otherwise\r\n\t */\r\n\tremovePeerAge (id, age) {\r\n\t\tlet found = false;\r\n\t\tlet i = 0;\r\n\t\tlet removedEntry = null;\r\n\t\twhile (!found && i < this.array.arr.length) {\r\n\t\t\tif (id === this.array.arr[i].id && age === this.array.arr[i].age) {\r\n\t\t\t\tfound = true;\r\n\t\t\t\tremovedEntry = this.array.arr[i];\r\n\t\t\t\tthis.array.arr.splice(i, 1);\r\n\t\t\t}\r\n\t\t\t++i;\r\n\t\t}\r\n\t\treturn removedEntry;\r\n\t}\r\n}\r\n\r\n\r\nmodule.exports = PartialView;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/partialview.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 220,
    "kind": "class",
    "name": "PartialView",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/partialview.js",
    "importStyle": "PartialView",
    "description": "Structure containing the neighborhood of a peer.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PartialView"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 221,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#constructor",
    "access": "public",
    "description": "Constructor of PartialView",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object containing all options"
      },
      {
        "nullable": null,
        "types": [
          "double"
        ],
        "spread": false,
        "optional": false,
        "name": "options.usedCoef",
        "description": "Represents the amount of clients shuffled between [0;1]"
      }
    ]
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "usedCoef",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#usedCoef",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "comparator",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#comparator",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "array",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#array",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "getOldest",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#getOldest",
    "access": "public",
    "description": "Get the oldest peer in the partialView",
    "lineNumber": 42,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the oldest peer in the array"
    },
    "params": []
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "increment",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#increment",
    "access": "public",
    "description": "Increment the age of the whole partial view",
    "lineNumber": 51,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "getSample",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#getSample",
    "access": "public",
    "description": "Get a sample of the partial view",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "neighbor",
        "description": "the neighbor which performs the exchange with us"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isInitiator",
        "description": "whether or not the caller is the initiator of the\nexchange"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "an array containing neighbors from this partial view"
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "replace",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#replace",
    "access": "public",
    "description": "Replace the occurrences of the old peer by the fresh one",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "sample",
        "description": "the sample to modify"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "old",
        "description": "the old reference to replace"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "fresh",
        "description": "the new reference to insert"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "an array with the replaced occurences"
    }
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "addNeighbor",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#addNeighbor",
    "access": "public",
    "description": "Add the neigbhor to the partial view with an age of 0",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the peer to add to the partial view"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "getIndex",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#getIndex",
    "access": "public",
    "description": "Get the index of the peer in the partialview",
    "lineNumber": 132,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the peer inside the partialView."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": "the index of the peer in the array, -1 if not found"
    }
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "removePeer",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#removePeer",
    "access": "public",
    "description": "Remove the peer from the partial view",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the peer to remove"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "age",
        "description": "The age of the peer"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the removed entry if it exists, null otherwise"
    }
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "removeAll",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#removeAll",
    "access": "public",
    "description": "Remove all occurrences of the peer and return the number of removals",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the peer to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": "the number of occurrences of the removed peer"
    }
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "removeSample",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#removeSample",
    "access": "public",
    "description": "Remove all the elements contained in the sample in argument",
    "lineNumber": 190,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "sample",
        "description": "the elements to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "length",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#length",
    "access": "public",
    "description": "Get the size of the partial view",
    "lineNumber": 200,
    "return": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": "the size of the partial view"
    },
    "params": []
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "contains",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#contains",
    "access": "public",
    "description": "Check if the partial view contains the reference",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the peer to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the peer is in the partial view, false otherwise"
    }
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "clear",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#clear",
    "access": "public",
    "description": "brief remove all elements from the partial view",
    "lineNumber": 217,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "get",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#get",
    "access": "public",
    "description": "Get the array containing views",
    "lineNumber": 225,
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "Array with all views"
    },
    "params": []
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "removePeerAge",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/partialview.js~PartialView#removePeerAge",
    "access": "public",
    "description": "Remove the peer with the associated age from the partial view",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the peer to remove"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "age",
        "description": "the age of the peer to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "the removed entry if it exists, null otherwise"
    }
  },
  {
    "__docId__": 239,
    "kind": "file",
    "name": "lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "content": "'use strict';\r\n\r\nconst  EventEmitter = require('events');\r\nconst  NO = require('./n2n-overlay-wrtc/lib/n2n-overlay.js');\r\nconst  PartialView = require('./partialview.js');\r\nconst  MExchange = require('./messages.js');\r\nconst  _ = require('lodash');\r\n\r\n/**\r\n * Implementation of the random peer sampling Spray\r\n */\r\nclass Spray extends EventEmitter {\r\n\t/**\r\n\t * You can pass other parameters such as webrtc options\r\n\t * @param {object} options Object with all options\r\n\t * @param {string} options.protocol The protocol of the network\r\n\t * @param {integer} options.deltatime Each deltatime, we shuffle !\r\n\t * @param {integer} options.retry Number of retry when we send a message\r\n\t * @param {integer} options.usedCoef Amount of clients shuffled between 0 and 1 (ie, [0;1])\r\n\t * @param {integer} options.profile your profile\r\n\t * @param {integer} options.k k profile saved\r\n\t */\r\n\tconstructor (options = {}) {\r\n\t\tsuper();\r\n\r\n\t\t// merge of options with default options\r\n\t\tthis.opts = _.merge({\r\n\t\t\tprotocol: 'spray-wrtc',\r\n\t\t\tencoding: (message) => {\r\n\t\t\t\treturn JSON.stringify(message);\r\n\t\t\t\t// return new Buffer('message');\r\n\t\t\t},\r\n\t\t\tdecoding: (message) => {\r\n\t\t\t\treturn JSON.parse(message);\r\n\t\t\t},\r\n\t\t\tdeltatime: 1000 * 60 * 2*1000,\r\n\t\t\tretry: 10,\r\n\t\t\tk: 10,\r\n\t\t\tprofile: {},\r\n\t\t\tusedCoef: 0.5,\r\n\t\t\tverbose: false\r\n\t\t}, options);\r\n\r\n\t\tthis.verbose = this.opts.verbose;\r\n\t\t// #A constants\r\n\t\tthis.protocol = this.opts.protocol;\r\n\t\tthis.DELTATIME = this.opts.deltatime; // 2min\r\n\t\tthis.RETRY = this.opts.retry; // retry 10x to send messages\r\n\r\n\t\t// at each suffling the profile is sent to all neighbours\r\n\t\tthis.k = this.opts.k;\r\n\t\tthis.profile = this.opts.profile;\r\n\r\n\t\t// #B protocol variables\r\n\t\tthis.partialView = new PartialView( {\r\n\t\t\tusedCoef: this.opts.usedCoef\r\n\t\t});\r\n\r\n\t\tthis.neighborhoods = new NO(this.opts);\r\n\r\n\t\t// update the profile with some identifiers\r\n\t\tthis.profile.inviewId = this.neighborhoods.i.ID;\r\n\t\tthis.profile.outviewId = this.neighborhoods.o.ID;\r\n\r\n\t\tthis.state = 'disconnect'; // (TODO) update state\r\n\r\n\t\t// #C periodic shuffling\r\n\t\tconst self = this;\r\n\t\tsetInterval(() => {\r\n\t\t\tif(self.partialView.length() > 0) {\r\n\t\t\t\tself.exchange();\r\n\t\t\t}\r\n\t\t}, this.DELTATIME);\r\n\r\n\t\t// #D receive event\r\n\t\tfunction receive (id, message) {\r\n\t\t\t// #0 must contain a message and a protocol, otherwise forward\r\n\t\t\tif (message && message.type === 'MExchange' && message.protocol !== self.protocol) {\r\n\r\n\t\t\t\tif(!message.view) {\r\n\t\t\t\t\tself.onExchange(message);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this.log(message.view.outviewId, message.view);\r\n\t\t\t\t\tself.views.set(message.view.outviewId, message.view);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (!message || message.protocol !== self.protocol) {\r\n\t\t\t\tif (message && message.protocol) {\r\n\t\t\t\t\tself.emit(`${message.protocol}-receive`, id, message);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.emit('receive', id, message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.neighborhoods.on('receive', receive);\r\n\t\tthis.neighborhoods.on('ready', (id, view) => {\r\n\t\t\tconst config = {\r\n\t\t\t\tage: 0,\r\n\t\t\t\tid\r\n\t\t\t};\r\n\t\t\t(view === 'outview') && self.partialView.addNeighbor(config);\r\n\t\t\tself.updateState();\r\n\t\t});\r\n\r\n\t\tthis.neighborhoods.on('failed', (id, view, reason) => {\r\n\t\t\tthis.log('Spray:on:Failed:', id, view, reason);\r\n\t\t\t(view === 'outview') && self.onArcDown();\r\n\t\t});\r\n\r\n\t\tthis.neighborhoods.on('disconnect', () => {\r\n\t\t\tself.updateState();\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tlog (...args) {\r\n\t\tif(this.verbose) {\r\n\t\t\tconsole.log('[SPRAY-WRTC]', args);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Joining as; or contacted by an outsider\r\n\t * @param {callback} callbacks the callbacks function, see module 'n2n-overlay-wrtc'.\r\n\t * @param {object} message ...\r\n\t * @return {void}\r\n\t */\r\n\tconnection (callbacks, message) {\r\n\t\tconst self = this;\r\n\t\tconst onReadyFunction = callbacks && callbacks.onReady;\r\n\t\t// #1 if this peer is the contact, overload the onready function\r\n\t\t// with the spray joining mechanism that will inject log(x) arcs in\r\n\t\t// the network\r\n\t\tif (message) {\r\n\t\t\tcallbacks.onReady = id => {\r\n\t\t\t\tif (self.partialView.length() > 0) {\r\n\t\t\t\t\t// #A signal the arrival of a new peer to its outview\r\n\t\t\t\t\tself.partialView.get().forEach(n => {\r\n\r\n\t\t\t\t\t\tif(n.id !== id) {\r\n\t\t\t\t\t\t\tself.neighborhoods.connect(n, id);\r\n\t\t\t\t\t\t}else {\r\n\t\t\t\t\t\t\tthis.log('n:', n, '| id:', id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// #B adds it to its own outview (for only 2-peers network)\r\n\t\t\t\t\tself.neighborhoods.connect(null, id);\r\n\t\t\t\t}\r\n\t\t\t\t// #C callback the original onReady function\r\n\t\t\t\tonReadyFunction && onReadyFunction(id);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tcallbacks.onReady = id => {\r\n\t\t\t\tonReadyFunction && onReadyFunction(id);\r\n\t\t\t\t// #D emit a join event\r\n\t\t\t\tself.emit('join', id);\r\n\t\t\t};\r\n\t\t}\r\n\t\t// #2 start establishing the first connection\r\n\t\tthis.neighborhoods.connection(callbacks, message);\r\n\t}\r\n\r\n\t/**\r\n\t * Leave the network\r\n\t * @param {integer} timer the timeout before really shutting down. The time can\r\n\t * be spent on healing the network before departure. (In milliseconds)\r\n\t * @return {void}\r\n\t */\r\n\tleave (timer) {\r\n\t\tsetTimeout(function () {\r\n\t\t\tthis.partialView.clear();\r\n\t\t\tthis.neighborhoods.disconnect();\r\n\t\t}, timer);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Get a set of neighbors from both inview and outview. It is worth\r\n\t * noting that each peer controls its outview, but not its inview. Thus, the\r\n\t * outview may be less versatile.\r\n\t * @param {integer} k the number of neighbors requested, if k is not defined, it returns\r\n\t * every known identifiers.\r\n\t * @return {object} { i:[id1,id2...idk], o:[id1,id2...idk] }\r\n\t */\r\n\tgetPeers (k) {\r\n\t\tlet result = {\r\n\t\t\ti: [],\r\n\t\t\to: []\r\n\t\t};\r\n\t\t// #A copy the identifiers of the inview\r\n\t\tconst inview = this.neighborhoods.get('inview');\r\n\t\tfor (let i = 0; i < inview.length; ++i) {\r\n\t\t\tresult.i.push(inview[i].id);\r\n\t\t}\r\n\t\t// #B remove entries if there are too many\r\n\t\twhile (k && (result.i.length > k) && (result.i.length > 0)) {\r\n\t\t\tconst rn = Math.floor(Math.random() * result.i.length);\r\n\t\t\tresult.i.splice(rn, 1);\r\n\t\t}\r\n\t\t// #C copy the identifiers of the outview\r\n\t\tconst outview = this.neighborhoods.get('outview');\r\n\t\tfor (let i = 0; i < outview.length; ++i) {\r\n\t\t\tresult.o.push(outview[i].id);\r\n\t\t}\r\n\t\t// #D remove entries if there are too many\r\n\t\twhile (k && (result.o.length > k) && (result.o.length > 0)) {\r\n\t\t\tconst rn = Math.floor(Math.random() * result.o.length);\r\n\t\t\tresult.o.splice(rn, 1);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Send a message using the id of the arc used to communicate\r\n\t * @param {string} id the identifier of the communication channel\r\n\t * @param {object} message the message to send\r\n\t * @param {integer} retry the number of times the protocol tries to send the message each seconds\r\n\t * @return {boolean} true if the message has been sent at first try, false otherwise\r\n\t */\r\n\tsend (id, message, retry) {\r\n\t\tconst r = retry || this.RETRY;\r\n\t\tconst result = this.neighborhoods.send(id, message);\r\n\t\tconst self = this;\r\n\t\tif (!result && r === 0) {\r\n\t\t\t// #1 if it fails to send the message, the peer is considered down\r\n\t\t\tself.onPeerDown(id);\r\n\t\t} else if (!result && r > 0) {\r\n\t\t\t// #2 give it another try\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tself.send(id, message, r - 1);\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the string representation of the partial view of spray\r\n\t * @return {string} String representation of the partialView\r\n\t */\r\n\ttoString () {\r\n\t\tlet result = `@${this.neighborhoods.inview.ID};${this.neighborhoods.outview.ID}   [ `;\r\n\t\tconst pv = this.partialView.get();\r\n\t\tfor (let i = 0; i < pv.length; ++i) {\r\n\t\t\tresult += `(${pv[i].age} ${pv[i].id}) `;\r\n\t\t}\r\n\t\tresult += ']';\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\t// ====================================\r\n\t//        PRIVATE functions         //\r\n\t// ====================================\r\n\r\n\t/**\r\n\t * Update the local connection state of the peer and emit an event\r\n\t * if the state is different than at the previous call of this function.\r\n\t * The emitted event is 'statechange' with the\r\n\t * arguments 'connect' | 'partial' | 'disconnect'\r\n\t * @return {void}\r\n\t */\r\n\tupdateState () {\r\n\t\t// (TODO) handle it without reaching the neighbor-wrtc module...\r\n\t\tif (this.neighborhoods.o.living.ms.arr.length > 0 &&\r\n\t\t\tthis.neighborhoods.i.living.ms.arr.length > 0 &&\r\n\t\t\tthis.state !== 'connect') {\r\n\t\t\t// #1 connected means (1+ inview, 1+ outview)\r\n\t\t\tthis.state = 'connect';\r\n\t\t\tthis.emit('statechange', 'connect');\r\n\t\t} else if (\r\n\t\t\t(this.neighborhoods.o.living.ms.arr.length === 0 &&\r\n\t\t\t\tthis.neighborhoods.i.living.ms.arr.length > 0) ||\r\n\t\t\t(this.neighborhoods.o.living.ms.arr.length > 0 ||\r\n\t\t\t\tthis.neighborhoods.i.living.ms.arr.length === 0) &&\r\n\t\t\t(this.state !== 'partial')) {\r\n\t\t\t// #2 partially connected means (1+ inview, 0 outview) or (0 i, 1+ o)\r\n\t\t\tthis.state = 'partial';\r\n\t\t\tthis.emit('statechange', 'partial');\r\n\t\t} else if (this.neighborhoods.o.living.ms.arr.length === 0 &&\r\n\t\t\tthis.neighborhoods.i.living.ms.arr.length === 0 &&\r\n\t\t\tthis.state !== 'disconnect') {\r\n\t\t\t// #3 disconnected means (0 inview, 0 outview)\r\n\t\t\tthis.state = 'disconnect';\r\n\t\t\tthis.emit('statechange', 'disconnect');\r\n\t\t}\r\n\t}\r\n\r\n\t/* *****************************************************************************\r\n\t * Spray's protocol implementation\r\n\t ******************************************************************************/\r\n\r\n\t/**\r\n\t * Periodically called function that aims to balance the partial view\r\n\t * and to mix the neighborhoods\r\n\t * @return {void}\r\n\t */\r\n\texchange () {\r\n\t\tconst self = this;\r\n\r\n\t\tlet oldest = null;\r\n\t\tlet sent = false;\r\n\t\tthis.partialView.increment();\r\n\t\t// #1 get the oldest neighbor reachable\r\n\t\twhile (!oldest && !sent && this.partialView.length() > 0) {\r\n\t\t\t// oldest = this.partialView.getOldest();\r\n\t\t\toldest = this.partialView.getOldest();\r\n\t\t\tconst message = new MExchange(null, this.neighborhoods.i.ID, this.neighborhoods.o.ID);\r\n\t\t\tsent = this.send(oldest.id, message, 0);\r\n\t\t}\r\n\t\tif (this.partialView.length() === 0) {\r\n\t\t\tthis.log('Partial view is 0 length');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// #2 get a sample from our partial view\r\n\t\tconst sample = this.partialView.getSample(oldest, true);\r\n\t\t// #3 establish connections oldest -> sample\r\n\t\t// #A remove the chosen arcs\r\n\t\tlet i = 0;\r\n\t\twhile (i < sample.length) {\r\n\t\t\tconst e = sample[i];\r\n\t\t\tconst removed = self.neighborhoods.disconnect(e.id);\r\n\t\t\tif (!removed) { // the partial view is late\r\n\t\t\t\t// #a inform the partial view of the departure of the peer\r\n\t\t\t\tself.onPeerDown(e.id);\r\n\t\t\t\t// #b clear the sample from references to this id\r\n\t\t\t\tlet j = 0;\r\n\t\t\t\twhile (j < sample.length) {\r\n\t\t\t\t\tif (sample[j].id === e.id) {\r\n\t\t\t\t\t\tsample.splice(j, 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t++j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// normal behavior\r\n\t\t\t\tself.partialView.removePeer(e.id, e.age);\r\n\t\t\t\t++i;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// #B from oldest to chosen neighbor\r\n\t\tsample.forEach(e => {\r\n\t\t\tself.neighborhoods.connect(oldest.id, (e.id !== oldest.id) && e.id);\r\n\t\t});\r\n\t\tthis.emit('shuffling', 'exchange');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Event executed when we receive an exchange request\r\n\t * @param {object} msg message containing the identifier of the peer that started the\r\n\t * exchange\r\n\t * @return {void}\r\n\t */\r\n\tonExchange (msg) {\r\n\t\tconst self = this;\r\n\t\t// #1 get a sample of neighbors from our partial view\r\n\t\tthis.partialView.increment();\r\n\t\tconst sample = this.partialView.getSample(msg.inview, false);\r\n\t\t// #A remove the chosen neighbor from our partialview\r\n\t\tlet i = 0;\r\n\t\twhile (i < sample.length) {\r\n\t\t\tconst e = sample[i];\r\n\t\t\tconst removed = self.neighborhoods.disconnect(e.id);\r\n\t\t\tif (!removed) { // the partial view is late\r\n\t\t\t\t// #a inform the partial view of the departure of the peer\r\n\t\t\t\tself.onPeerDown(e.id);\r\n\t\t\t\t// #b clear the sample from references to this id\r\n\t\t\t\tlet j = 0;\r\n\t\t\t\twhile (j < sample.length) {\r\n\t\t\t\t\tif (sample[j].id === e.id) {\r\n\t\t\t\t\t\tsample.splice(j, 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t++j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// normal behavior\r\n\t\t\t\tself.partialView.removePeer(e.id, e.age);\r\n\t\t\t\t++i;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// #B from initiator to chosen neigbhor\r\n\t\tsample.forEach(e => {\r\n\t\t\tself.neighborhoods.connect(msg.outview, (e.id !== msg.inview) && e.id);\r\n\t\t});\r\n\t\tthis.emit('shuffling', 'onExchange');\r\n\t}\r\n\r\n\t/**\r\n\t * The function called when a neighbor is unreachable and supposedly\r\n\t * crashed/departed. It probabilistically keeps an arc up\r\n\t * @param {string} id the identifier of the channel that seems down\r\n\t * @return {void}\r\n\t */\r\n\tonPeerDown (id) {\r\n\t\tthis.log(`@spray: The peer ${JSON.stringify(id)} seems down.`);\r\n\t\t// #A remove all occurrences of the peer in the partial view\r\n\t\tconst occ = this.partialView.removeAll(id);\r\n\t\t// #B probabilistically recreate an arc to a known peer\r\n\t\tif (this.partialView.length() > 0) {\r\n\t\t\tfor (let i = 0; i < occ; ++i) {\r\n\t\t\t\tif (Math.random() > (1 / (this.partialView.length() + occ))) {\r\n\t\t\t\t\tconst rn = Math.floor(Math.random() * this.partialView.length());\r\n\t\t\t\t\tthis.neighborhoods.connect(null, this.partialView.array.arr[rn]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A connection failed to establish properly, systematically duplicates\r\n\t * an element of the partial view.\r\n\t * @return {void}\r\n\t */\r\n\tonArcDown () {\r\n\t\tthis.log('@spray: An arc failed to establish.');\r\n\t\tif (this.partialView.length() > 0) {\r\n\t\t\tconst rn = Math.floor(Math.random() * this.partialView.length());\r\n\t\t\tthis.neighborhoods.connect(null, this.partialView.array.arr[rn]);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\nmodule.exports = Spray;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 240,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 241,
    "kind": "variable",
    "name": "NO",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~NO",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "PartialView",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~PartialView",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "variable",
    "name": "MExchange",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~MExchange",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 244,
    "kind": "variable",
    "name": "_",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~_",
    "access": "private",
    "export": false,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 245,
    "kind": "class",
    "name": "Spray",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "static": true,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/crate-core/lib/spray-wrtc/lib/spray.js",
    "importStyle": "Spray",
    "description": "Implementation of the random peer sampling Spray",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 246,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#constructor",
    "access": "public",
    "description": "You can pass other parameters such as webrtc options",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Object with all options"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.protocol",
        "description": "The protocol of the network"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "options.deltatime",
        "description": "Each deltatime, we shuffle !"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "options.retry",
        "description": "Number of retry when we send a message"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "options.usedCoef",
        "description": "Amount of clients shuffled between 0 and 1 (ie, [0;1])"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "options.profile",
        "description": "your profile"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "options.k",
        "description": "k profile saved"
      }
    ]
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "opts",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#opts",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "member",
    "name": "verbose",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#verbose",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "member",
    "name": "protocol",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#protocol",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "member",
    "name": "DELTATIME",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#DELTATIME",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "RETRY",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#RETRY",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "k",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#k",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "profile",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#profile",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "partialView",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#partialView",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "member",
    "name": "neighborhoods",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#neighborhoods",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "member",
    "name": "state",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#state",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "log",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#log",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "connection",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#connection",
    "access": "public",
    "description": "Joining as; or contacted by an outsider",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "callback"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "the callbacks function, see module 'n2n-overlay-wrtc'."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "..."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "leave",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#leave",
    "access": "public",
    "description": "Leave the network",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "timer",
        "description": "the timeout before really shutting down. The time can\nbe spent on healing the network before departure. (In milliseconds)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 260,
    "kind": "method",
    "name": "getPeers",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#getPeers",
    "access": "public",
    "description": "Get a set of neighbors from both inview and outview. It is worth\nnoting that each peer controls its outview, but not its inview. Thus, the\noutview may be less versatile.",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "k",
        "description": "the number of neighbors requested, if k is not defined, it returns\nevery known identifiers."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "{ i:[id1,id2...idk], o:[id1,id2...idk] }"
    }
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "send",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#send",
    "access": "public",
    "description": "Send a message using the id of the arc used to communicate",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the identifier of the communication channel"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "the message to send"
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "retry",
        "description": "the number of times the protocol tries to send the message each seconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if the message has been sent at first try, false otherwise"
    }
  },
  {
    "__docId__": 262,
    "kind": "method",
    "name": "toString",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#toString",
    "access": "public",
    "description": "Get the string representation of the partial view of spray",
    "lineNumber": 242,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "String representation of the partialView"
    },
    "params": []
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "updateState",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#updateState",
    "access": "public",
    "description": "Update the local connection state of the peer and emit an event\nif the state is different than at the previous call of this function.\nThe emitted event is 'statechange' with the\narguments 'connect' | 'partial' | 'disconnect'",
    "lineNumber": 264,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "exchange",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#exchange",
    "access": "public",
    "description": "Periodically called function that aims to balance the partial view\nand to mix the neighborhoods",
    "lineNumber": 299,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "onExchange",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#onExchange",
    "access": "public",
    "description": "Event executed when we receive an exchange request",
    "lineNumber": 356,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "message containing the identifier of the peer that started the\nexchange"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "onPeerDown",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#onPeerDown",
    "access": "public",
    "description": "The function called when a neighbor is unreachable and supposedly\ncrashed/departed. It probabilistically keeps an arc up",
    "lineNumber": 397,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the identifier of the channel that seems down"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "onArcDown",
    "memberof": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/crate-core/lib/spray-wrtc/lib/spray.js~Spray#onArcDown",
    "access": "public",
    "description": "A connection failed to establish properly, systematically duplicates\nan element of the partial view.",
    "lineNumber": 417,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 271,
    "kind": "file",
    "name": "lib/crate-core/lib/version-vector-with-exceptions/test/testVVwE.js",
    "content": "var expect = require('expect.js');\r\nvar Mocha = require('mocha');\r\n\r\nvar VVwE = require('../lib/vvwe.js');\r\n\r\ndescribe('vvwe.js', function() {\r\n\r\n    describe('vvwe', function(){\r\n        it('init the entries to zero', function(){\r\n            var vvwe = new VVwE(42)\r\n            expect(vvwe.local.e).to.be.eql(42);\r\n            expect(vvwe.local.v).to.be.eql(0);\r\n            expect(vvwe.local.x).to.have.length(0);\r\n        });\r\n    });\r\n    \r\n    describe('increment', function(){\r\n        it('increment the entry', function(){\r\n            var vvwe = new VVwE(42);\r\n            vvwe.increment();\r\n            expect(vvwe.local.v).to.be.eql(1);\r\n        });\r\n        \r\n        it('no exception created', function(){\r\n            var vvwe = new VVwE(42);\r\n            vvwe.increment();\r\n            vvwe.increment();\r\n            expect(vvwe.local.x).to.have.length(0);\r\n        });\r\n    });\r\n\r\n    describe('incrementfrom', function(){\r\n        it('increment the entry from another vv', function(){\r\n            var vvwe = new VVwE(13);\r\n            var rvvwe = new VVwE(42);\r\n            rvvwe.increment();\r\n            vvwe.incrementFrom({_e: rvvwe.local.e, _c:rvvwe.local.v });\r\n            expect(rvvwe.vector.arr[0].v).to.be.eql(1);\r\n            expect(vvwe.vector.arr[1].v).to.be.eql(rvvwe.local.v);\r\n        });\r\n\r\n        it('increment from anywhere does not affect my entry', function(){\r\n            var vvwe = new VVwE(13);\r\n            var rvvwe = new VVwE(42);\r\n            rvvwe.increment();\r\n            vvwe.incrementFrom({_e: rvvwe.local.e, _c:rvvwe.local.v });\r\n            expect(vvwe.local.v).to.be.eql(0);\r\n        });\r\n\r\n        it('a message is lost, exception is made', function(){\r\n            var vvwe = new VVwE(13);\r\n            var rvvwe = new VVwE(42);\r\n            rvvwe.increment();\r\n            rvvwe.increment();\r\n            expect(rvvwe.local.v).to.be.eql(2);\r\n            vvwe.incrementFrom({_e: rvvwe.local.e, _c:rvvwe.local.v });\r\n            expect(vvwe.vector.arr[1].x).to.have.length(1);\r\n            expect(vvwe.vector.arr[1].x.indexOf(1)).to.be.above(-1);\r\n        });\r\n    });\r\n    \r\n    describe('isReady', function(){\r\n        it('check if an operation depending on another is ready', function(){\r\n            var vvwe = new VVwE(42);\r\n            vvwe.increment();\r\n            var target = {_e:vvwe.local.e, _c:vvwe.local.v};\r\n            expect(vvwe.isReady(target)).to.be.ok();\r\n            var target2 = {_e:vvwe.local.e, _c:(vvwe.local.v+1)};\r\n            expect(vvwe.isReady(target2)).to.not.be.ok();\r\n        });\r\n        \r\n        it('check if an operation independant of any other is rdy',function(){\r\n            var vvwe = new VVwE(42);\r\n            var c = null;\r\n            expect(vvwe.isReady(c)).to.be.ok();\r\n        });\r\n\r\n        it('check in the omen vector for target operation', function(){\r\n            var vvwe = new VVwE(42);\r\n            var vvwe2 = new VVwE(13);\r\n            vvwe2.increment();\r\n            vvwe2.increment();\r\n            var c = {_e: vvwe2.local.e, _c: vvwe2.local.v};\r\n            vvwe.incrementFrom(c);\r\n            // another operation arrive depending on operation identifier by c;\r\n            expect(vvwe.isReady(c)).to.be.ok();\r\n        });\r\n    });\r\n    \r\n    describe('isLower', function(){\r\n        it('check if the ev has been seen before or not', function(){\r\n            var vvwe = new VVwE(42);\r\n            var vvwe2 = new VVwE(13);\r\n            vvwe2.increment();\r\n            var c = {_e : vvwe2.local.e , _c:vvwe2.local.v};\r\n            expect(vvwe.isLower(c)).to.not.be.ok();\r\n            vvwe.incrementFrom(c);\r\n            expect(vvwe.isLower(c)).to.be.ok();\r\n        });\r\n\r\n        it('check in the omen if the ev has been seen', function(){\r\n            var vvwe = new VVwE(42);\r\n            var vvwe2 = new VVwE(13);\r\n            vvwe2.increment();\r\n            vvwe2.increment();\r\n            var c = {_e : vvwe2.local.e , _c:vvwe2.local.v};\r\n            expect(vvwe.isLower(c)).to.not.be.ok();\r\n            vvwe.incrementFrom(c);\r\n            expect(vvwe.isLower(c)).to.be.ok();\r\n        });\r\n    });\r\n\r\n    describe('clone', function(){\r\n        it('produce two identical independant copies of the vvwe', function(){\r\n            var vvwe = new VVwE(42);\r\n            var vvwe2 = new VVwE(13);\r\n            vvwe.increment();\r\n            vvwe.incrementFrom(vvwe2.increment());\r\n            var vvwe3 = vvwe.clone();\r\n            vvwe3.increment();\r\n            vvwe3.incrementFrom(vvwe2.increment());\r\n            expect(vvwe3.local.e).to.be.eql(vvwe.local.e);\r\n            expect(vvwe3.local.v).to.be.eql(vvwe.local.v+1);\r\n            expect(vvwe3.vector.arr.length).to.be.eql(vvwe.vector.arr.length);\r\n            expect(vvwe3.vector.arr[0].v).to.be.eql(vvwe.vector.arr[0].v+1);\r\n        });\r\n    });\r\n\r\n    describe('merge', function(){\r\n        it('merge two structures', function(){\r\n            var vvwe = new VVwE(42);\r\n            var vvwe2 = new VVwE(13);\r\n            vvwe2.increment();\r\n            vvwe2.increment();\r\n            vvwe.merge(vvwe2);\r\n            expect(vvwe.vector.arr[0].v).to.be.eql(2);\r\n            vvwe2.increment();\r\n            expect(vvwe.vector.arr[0].v).to.be.eql(2);\r\n        });\r\n\r\n        it('merge two structure taking care of exception of initiator', function(){\r\n            var vvwe = new VVwE(42);\r\n            var vvwe2 = new VVwE(13);\r\n            vvwe2.increment();\r\n            vvwe.incrementFrom(vvwe2.increment());\r\n            expect(vvwe.vector.arr[0].x.length).to.be.eql(1);\r\n            vvwe.merge(vvwe2);\r\n            expect(vvwe.vector.arr[0].x.length).to.be.eql(0);\r\n        });\r\n\r\n        it('keeps the exception of the vvwe in argument', function(){\r\n            var vvwe = new VVwE(42);\r\n            var vvwe2 = new VVwE(13);\r\n            var vvwe3 = new VVwE(37);\r\n            vvwe2.increment();\r\n            vvwe.incrementFrom(vvwe2.increment()); // 42 -> x 1\r\n            vvwe3.incrementFrom(vvwe2.increment()); // 37 -> x 1 2\r\n            vvwe.merge(vvwe3);\r\n            expect(vvwe.vector.arr[0].x.length).to.be.eql(1);\r\n            expect(vvwe3.vector.arr[0].x.length).to.be.eql(2);\r\n            vvwe3.merge(vvwe);\r\n            expect(vvwe3.vector.arr[0].x.length).to.be.eql(1);\r\n            vvwe3.merge(vvwe2);\r\n            expect(vvwe3.vector.arr[0].x.length).to.be.eql(0);\r\n        });\r\n\r\n        it('get new exceptions if the vvwe in arg is more uptodate',function(){\r\n            var vvwe = new VVwE(42);\r\n            var vvwe2 = new VVwE(13);\r\n            var vvwe3 = new VVwE(37);\r\n            vvwe3.incrementFrom(vvwe2.increment());\r\n            vvwe3.incrementFrom(vvwe2.increment());\r\n            vvwe.merge(vvwe2);\r\n            expect(vvwe.vector.arr[0].v).to.be.eql(2);\r\n            vvwe3.incrementFrom(vvwe2.increment());\r\n            vvwe2.increment();\r\n            vvwe2.increment();\r\n            vvwe3.incrementFrom(vvwe2.increment());\r\n            vvwe.merge(vvwe3);\r\n            expect(vvwe.vector.arr[0].v).to.be.eql(6);\r\n            expect(vvwe.vector.arr[0].x.length).to.be.eql(2);\r\n        });\r\n\r\n        it('test a bug example from the CRATE project', function(){\r\n            var vvwe = new VVwE(\"6e3bedf4-45f9-4e05-ba55-7c4f99b28c44\");\r\n            var vvwe2 = new VVwE(\"f065d3ab-b5b5-4376-9bd5-25ee5db22313\");\r\n            for (var i = 0; i < 100; ++i) {\r\n                vvwe.incrementFrom(vvwe2.increment());\r\n            };\r\n            vvwe.merge(vvwe2);\r\n            expect(vvwe.local.v).to.be.eql(0);\r\n        });\r\n        \r\n        it('test another bug example from the CRATE project', function(){\r\n            var vvwe = new VVwE(\"72f8de1f-ade1-4e89-b5f4-1447902db2de\");\r\n            var vvwe2 = new VVwE(\"b0d3e97a-4aee-489a-987f-fb74b9fd929d\");\r\n            for (var i = 0; i < 8; ++i) {\r\n                vvwe.incrementFrom(vvwe2.increment());\r\n            };\r\n            vvwe.merge(vvwe2);\r\n            expect(vvwe.local.v).to.be.eql(0);\r\n        });\r\n\r\n    });\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/crate-core/lib/version-vector-with-exceptions/test/testVVwE.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "lib/signaling.js",
    "content": "var io = require('socket.io-client');\r\n\r\n/*!\r\n * \\brief handle the signaling server\r\n * \\param rps the random peer sampling protocol\r\n * \\param signalingOptions specific options for the signaling server(s). For\r\n * now, it's an object { server, session, duration } where server is\r\n * the address of the server to contact, session is the editing session to join\r\n * or share, duration is the optional duration time during which the socket with\r\n * the signaling server stays open.\r\n */\r\nfunction Signaling(rps, signalingOptions){\r\n    this.rps = rps;\r\n    this.signalingOptions = signalingOptions;\r\n    //signalingOptions.server = \"http://127.0.0.1:5000\";\r\n    this.socketIOConfig = { 'force new connection': true,\r\n                            'reconnection': false };\r\n    this.startedSocket = false;\r\n    this.socket = null;\r\n    this.timeout = null; // event id of the termination\r\n    this.joiners = 0;\r\n\r\n    var self = this;\r\n    \r\n    var callbacks = function(socket, idJoiner){\r\n        return {\r\n            onInitiate: function(message){\r\n                socket &&\r\n                    socket.emit('launch', signalingOptions.session, message);\r\n            },        \r\n            onAccept: function(message){\r\n                socket &&\r\n                    socket.emit('answer', idJoiner, message);\r\n            },\r\n            onReady: function(){\r\n                if (idJoiner){\r\n                    self.joiner += 1;\r\n                } else {\r\n                    self.socket.disconnect();\r\n                };\r\n            }\r\n        };     \r\n    };\r\n\r\n    /*!\r\n     * \\brief create a connection with a socket.io server and initialize the\r\n     * events\r\n     */\r\n    function createSocket() {\r\n        // #A establish the dialog with the socket.io server\r\n        if(!self.startedSocket){\r\n            self.socket = io(self.signalingOptions.server, self.socketIOConfig);\r\n            self.startedSocket = true;\r\n            self.socket.on('connect', function(){\r\n                console.log('Connection to the signaling server established');\r\n            });\r\n            self.socket.on('launchResponse', function(idJoiner, message){\r\n                self.rps.connection(callbacks(self.socket, idJoiner), message)\r\n            });\r\n            self.socket.on('answerResponse', function(message){\r\n                self.rps.connection(callbacks(self.socket), message);\r\n            });\r\n            self.socket.on('disconnect', function(){\r\n                console.log('Disconnection from the signaling server');\r\n                self.startedSocket = false;\r\n                self.joiners = 0;\r\n                clearTimeout(this.timeout);\r\n                self.timeout= null;\r\n            });\r\n        }\r\n        // #B reset timer before closing the connection\r\n        if (self.timeout){clearTimeout(self.timeout);self.timeout=null;};\r\n        // #C initialize a timer before closing the connection\r\n        if (self.signalingOptions.duration){\r\n            self.timeout = setTimeout(function(){\r\n                self.stopSharing();\r\n            }, self.signalingOptions.duration);\r\n        };\r\n    };\r\n\r\n    this.startSharing = function(){\r\n        createSocket();\r\n        self.socket.on('connect', function(){\r\n            self.socket.emit('share', self.signalingOptions.session);\r\n        });\r\n        return self.socket;\r\n    };\r\n    \r\n    this.stopSharing = function(){\r\n        self.socket.disconnect();\r\n        clearTimeout(self.timeout);\r\n        self.timeout = null;\r\n    };\r\n\r\n    this.startJoining = function(signalingOptions){\r\n        createSocket();\r\n        self.socket.on('connect', function(){\r\n         //   self.rps.connection(callbacks(self.socket));\r\n        });\r\n        return self.socket;\r\n    };\r\n};\r\n\r\n\r\nmodule.exports = Signaling;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/signaling.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "function",
    "name": "Signaling",
    "memberof": "lib/signaling.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/signaling.js~Signaling",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/signaling.js",
    "importStyle": "Signaling",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "rps",
        "types": [
          "*"
        ]
      },
      {
        "name": "signalingOptions",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "lib/view/editor.js",
    "content": "function Editor(id, sessionID) {\r\n\tjQuery(\"#editor\").attr('id', 'crate-' + id);\r\n\tthis.editor = quill;\r\n\r\n\t// Initilise the the editor content \r\n\t//this.editor.setText('');\r\n\tif (store.get(\"CRATE2-\" + sessionID)) {\r\n\t\tvar doc = store.get(\"CRATE2-\" + sessionID);\r\n\t\tthis.editor.setContents(doc.delta, \"user\");\r\n\t\tjQuery(\"#title\").text(doc.title);\r\n\t}\r\n\r\n\r\n\t// make title editable\r\n\tjQuery('#title').click(function() {\r\n\t\tjQuery('#title').attr('contenteditable', 'true');\r\n\t});\r\n\r\n\r\n};\r\n\r\n\r\nmodule.exports = Editor;",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/view/editor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "function",
    "name": "Editor",
    "memberof": "lib/view/editor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/editor.js~Editor",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/view/editor.js",
    "importStyle": "Editor",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "sessionID",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 276,
    "kind": "file",
    "name": "lib/view/link.js",
    "content": "\r\nfunction LinkView(container, id){\r\n\r\n    this.linkContainer = jQuery('<div>').appendTo(container)\r\n        .css('position', 'relative')\r\n        .css('top', '0px')\r\n        .css('width', '60%')\r\n        .css('z-index', '0')\r\n        .css('opacity', '0.9')\r\n        .attr('id','linkContainer')\r\n        .hide();\r\n    \r\n    // #0 qr code modal\r\n    var qrCodeModal = jQuery('<div>').appendTo(container)\r\n        .attr('id', 'modalQRCode'+id)\r\n        .attr('tabindex','-1')\r\n        .attr('role','dialog')\r\n        .attr('aria-labelledby','modalQRCodeLabel')\r\n        .attr('aria-hidden', 'true')\r\n        .addClass('modal');\r\n    \r\n    var qrCodeModalDialog = jQuery('<div>').appendTo(qrCodeModal)\r\n        .addClass('modal-dialog');\r\n    var qrCodeModalContent = jQuery('<div>').appendTo(qrCodeModalDialog)\r\n        .addClass('modal-content text-center');\r\n    this.qrcodeCanvas = jQuery('<div>');\r\n    qrCodeModalContent.append(jQuery('<br>'))\r\n        .append(this.qrcodeCanvas)\r\n        .append(jQuery('<br>'));\r\n    \r\n    // #1 overall division\r\n    this.alert = jQuery('<div>').appendTo(this.linkContainer);\r\n    // #2 cross to close the division\r\n    this.dismiss = jQuery('<button>').appendTo(this.alert)\r\n        .attr('type', 'button')\r\n        .addClass('close')\r\n        .html('<span  aria-hidden=\"true\">&times;</span><span class=\"sr-only\"> '+\r\n              'Close </span>');\r\n    var rowContainer = jQuery('<div>').appendTo(this.alert)\r\n        .addClass('container');\r\n    var inputGroup = jQuery('<div>').appendTo(rowContainer)\r\n        .addClass('input-group')\r\n        .attr('style','margin-left: -16px;');\r\n    this.input = jQuery('<input>').appendTo(inputGroup)\r\n        .attr('type', 'text')\r\n        .attr('id', 'sessionUrl')\r\n        .attr('placeholder', 'Nothing to see here, move along.')\r\n        .addClass('form-control');\r\n    \r\n    var inputGroup2 = jQuery('<span>').appendTo(inputGroup)\r\n        .addClass('input-group-btn');\r\n\r\n    this.qrcode = jQuery('<button>').appendTo(inputGroup2)\r\n        .attr('aria-label', 'QR-code')\r\n        .attr('type', 'button')\r\n        .attr('data-target', '#modalQRCode'+id)\r\n        .attr('data-toggle', 'modal')\r\n        .addClass('btn btn-default')\r\n        .html('<i class=\"fa fa-qrcode\"></i> QR-Code');\r\n\r\n    this.action = jQuery('<button  id=\"copyButton\">').appendTo(inputGroup2)\r\n        .attr('aria-label', 'Go!')\r\n        .attr('type', 'button')\r\n        .addClass('btn btn-default')\r\n        .html('Go!')\r\n        .css('z-index', '15');\r\n\r\n    var self = this;\r\n    this.dismiss.unbind(\"click\").click(function(){self.linkContainer.hide();});\r\n};\r\n\r\nLinkView.prototype.printLink = function(link){\r\n    this.linkContainer.show();\r\n    this.action.html('<i class=\"fa fa-clipboard\"></i> Copy');\r\n    this.action.attr(\"aria-label\", \"Copy to clipboard\");\r\n    this.input.attr(\"readonly\",\"readonly\");\r\n    this.input.val(link);\r\n    this.qrcode.show();\r\n};\r\n\r\n\r\nLinkView.prototype.printLaunchLink = function(link){\r\n    this.printLink(link);\r\n    this.input.attr(\"placeholder\",\r\n                    \"A link will appear in this field, give it to your \"+\r\n                    \"friend!\");\r\n    this.action.unbind(\"click\");\r\n    this.qrcode.hide();\r\n    return this.action;\r\n};\r\n\r\nLinkView.prototype.printAnswerLink = function(link){\r\n    this.printLink(link);\r\n    this.input.attr(\"placeholder\",\r\n                    \"A link will appear in this field. Please give it \"+\r\n                    \"back to your friend.\");\r\n    this.action.unbind(\"click\");\r\n    this.qrcode.hide();\r\n    return this.action;\r\n};\r\n\r\nLinkView.prototype.askLink = function(){\r\n    this.linkContainer.show();\r\n    this.alert.removeClass(\"alert-warning\").addClass(\"alert-info\");\r\n    this.action.html('Go!');\r\n    this.action.attr(\"aria-label\", \"Stamp the ticket\");\r\n    this.input.removeAttr(\"readonly\");\r\n    this.input.val(\"\");\r\n    this.action.unbind(\"click\");\r\n    this.qrcode.hide();\r\n};\r\n\r\nLinkView.prototype.askLaunchLink = function(){\r\n    this.askLink();\r\n    this.input.attr(\"placeholder\",\r\n                    \"Please, copy the ticket of your friend here to stamp \"+\r\n                    \"it!\");\r\n    this.qrcode.hide();\r\n    return this.action;\r\n};\r\n\r\nLinkView.prototype.askAnswerLink = function(){\r\n    this.askLink();\r\n    this.input.attr(\"placeholder\", \"Copy the stamped ticket to confirm \"+\r\n                    \"your arrival in the network\");\r\n    this.qrcode.hide();\r\n    return this.action;\r\n};\r\n\r\nLinkView.prototype.hide = function(){\r\n    this.linkContainer.hide();\r\n};\r\n\r\n\r\n\r\nmodule.exports = LinkView;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/view/link.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "function",
    "name": "printLink",
    "memberof": "lib/view/link.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/link.js~printLink",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/link.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "link",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "printLaunchLink",
    "memberof": "lib/view/link.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/link.js~printLaunchLink",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/link.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "link",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "function",
    "name": "printAnswerLink",
    "memberof": "lib/view/link.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/link.js~printAnswerLink",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/link.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "link",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "askLink",
    "memberof": "lib/view/link.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/link.js~askLink",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/link.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "askLaunchLink",
    "memberof": "lib/view/link.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/link.js~askLaunchLink",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/link.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "askAnswerLink",
    "memberof": "lib/view/link.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/link.js~askAnswerLink",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/link.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "hide",
    "memberof": "lib/view/link.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/link.js~hide",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/link.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "LinkView",
    "memberof": "lib/view/link.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/link.js~LinkView",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/view/link.js",
    "importStyle": "LinkView",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "container",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 285,
    "kind": "file",
    "name": "lib/view/marker.js",
    "content": "var animals = require('animals');\r\nvar hash = require('string-hash');\r\n\r\n\r\n\r\n/**\r\n * [Marker Module manages the Carets, avatars, pseudonames for the different users of the document]\r\n * @param {[string]}  origin   [the id of the the user]\r\n * @param {Number}  lifeTime [After this time, if no ping or Caret position is received => remove caret and avatar. if lifetime is -1 we didn't add the avatar]\r\n * @param {[{index: index,length: 0}]}  range    [range stars from index with the specified length]\r\n * @param {[cursor module]}  cursorsp [the used cursor module for quilljs]\r\n * @param {[Boolean]}  cursor   [create the caret or not. If it is from ping, it will be false else true]\r\n * @param {Boolean} isItME   [is it my caret ? true or false to disable the time if it is true]\r\n */\r\nvar Marker = function(origin, lifeTime = -1, range, cursorsp, cursor, isItME = false) {\r\n  this.origin = origin;\r\n  this.lifeTime = lifeTime;\r\n  this.time = new Date().getTime();\r\n  this.color = this.getColor(this.origin);\r\n  this.colorRGB = 'rgb(' + this.color + ')';\r\n  this.colorRGBLight = 'rgba(' + this.color + ', 0.5)';\r\n  this.animal = animals.words[hash(this.origin) % animals.words.length];\r\n  this.pseudoName = 'Anonymous ' +\r\n    this.capitalize(animals.words[hash(this.origin) % animals.words.length]);\r\n  this.avatarAdd = false;\r\n  this.cursor = cursor; // true if editing, false if it is from ping\r\n\r\n  if (lifeTime != -1) { // -1 => created without timer avatar cursor \r\n    if (!isItME) {\r\n      this.timer = setInterval(() => this.checkIfOutdated(), 1000);\r\n    }\r\n    this.addAvatar();\r\n    if (cursor) {\r\n      this.addCursor(range);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * [capitalize upercase the first letter]\r\n * @param  {[string]} s [string]\r\n * @return {[string]}   [String the first letter is in uppercase]\r\n */\r\nMarker.prototype.capitalize = function capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\n\r\n/**\r\n * [getColor for a specific id, get a unique color]\r\n * @param  {[string]} str [the id of the user]\r\n * @return {[(r,g,b))]}     [the correspanding rgb color]\r\n */\r\nMarker.prototype.getColor = function getColor(str) {\r\n  var h1 = hash(str) % 206;\r\n  var h2 = (h1 * 7) % 206;\r\n  var h3 = (h1 * 11) % 206;\r\n  return Math.floor(h1 + 50) + \", \" + Math.floor(h2 + 50) + \", \" + Math.floor(h3 + 50);\r\n};\r\n\r\n/**\r\n * [update the time to keep the avatar and cursor if it exist]\r\n * @param  {[{index: index,length: 0}]} range  [description]\r\n * @param  {[boolean]} cursor [if it is true add update the caret position]\r\n */\r\nMarker.prototype.update = function update(range, cursor) {\r\n  this.time = new Date().getTime();\r\n\r\n  if (!$(\"#\" + this.origin).length) {\r\n    this.addAvatar();\r\n  }\r\n\r\n  jQuery(\"#\" + this.origin).attr('data-toggle', 'tooltip');\r\n  jQuery(\"#\" + this.origin).attr('title', this.pseudoName);\r\n\r\n  if (this.cursor == true && cursor == true) { // in the case of update, make sure that ping updates don't change the range\r\n    Marker.cursors.moveCursor(this.origin, range);\r\n  } else if (cursor == true) {\r\n    this.cursor = cursor;\r\n    this.addCursor(range);\r\n  }\r\n};\r\n\r\n/**\r\n * [checkIfOutdated check if the user is outdated and if it is the case remove its caret and avatar ]\r\n */\r\nMarker.prototype.checkIfOutdated = function checkIfOutdated() {\r\n\r\n  var timeNow = new Date().getTime();\r\n  var dff = (timeNow - this.time);\r\n   // if  cursor  is outdated \r\n  if ((timeNow - this.time) >= this.lifeTime) {\r\n    // Remve cursor and avatar\r\n    if (this.cursor) {\r\n      Marker.cursors.removeCursor(this.origin);\r\n      this.cursor = false;\r\n    }\r\n    this.removeAvatar();\r\n    clearInterval(this.timer); \r\n  } else {\r\n    jQuery(\"#\" + this.origin + \"\").css('opacity', (1 - ((timeNow - this.time) / this.lifeTime)));\r\n\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * [addAvatar addAvatar of the user to the editor with correpanding divID]\r\n * @param {String} divID [the id of the div where the avatars are placed]\r\n */\r\nMarker.prototype.addAvatar = function addAvatar(divID = \"#users\") {\r\n  jQuery(divID).append(this.getAvatar());\r\n  jQuery(\"#\" + this.origin + \"\").attr('data-toggle', 'tooltip');\r\n  jQuery(\"#\" + this.origin + \"\").attr('title', this.pseudoName);\r\n  this.avatarAdd = true;\r\n};\r\n\r\n/**\r\n * [getAvatar return the div that contains this user id]\r\n * @return {[type]} [description]\r\n */\r\nMarker.prototype.getAvatar = function getAvatar() {\r\n  return '<div id=\"' + this.origin + '\"style=\"background-color:' + this.colorRGB + ';\"><img class=\"imageuser\" src=\"./icons/' + this.animal + '.png\" alt=\"' + this.pseudoName + '\"></div>';\r\n};\r\n\r\n/**\r\n * [removeAvatar remove the avatar of the user from the interface]\r\n * @return {[type]} [description]\r\n */\r\nMarker.prototype.removeAvatar = function removeAvatar() {\r\n  jQuery(\"#\" + this.origin + \"\").remove();\r\n  this.avatarAdd = false;\r\n};\r\n\r\n/**\r\n * [setPseudo set pseudo  for the user ]\r\n * @param {[type]} Pseudo [description]\r\n */\r\n\r\nMarker.prototype.setPseudo = function setPseudo(Pseudo) {\r\n  this.pseudoName = Pseudo;\r\n  jQuery(\"#\" + this.origin + \"\").attr('title', this.pseudoName);\r\n};\r\n\r\n/**\r\n * [addCursor add the cursor to the editor]\r\n * @param {[{index: index,length: 0}]} range [description]\r\n */\r\nMarker.prototype.addCursor = function addCursor(range) {\r\n  this.cursor = true;\r\n  Marker.cursors.setCursor(this.origin, range, this.pseudoName, this.colorRGB);\r\n};\r\n\r\n\r\n\r\nmodule.exports = Marker;",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/view/marker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 286,
    "kind": "function",
    "name": "capitalize",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~capitalize",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": null,
    "description": "[capitalize upercase the first letter]",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "[string]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[string]"
      ],
      "spread": false,
      "description": "[String the first letter is in uppercase]"
    },
    "ignore": true
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "getColor",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~getColor",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": null,
    "description": "[getColor for a specific id, get a unique color]",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "[the id of the user]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[(r,g,b))]"
      ],
      "spread": false,
      "description": "[the correspanding rgb color]"
    },
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "function",
    "name": "update",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~update",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": null,
    "description": "[update the time to keep the avatar and cursor if it exist]",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "[{index: index,length: 0}]"
        ],
        "spread": false,
        "optional": false,
        "name": "range",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[boolean]"
        ],
        "spread": false,
        "optional": false,
        "name": "cursor",
        "description": "[if it is true add update the caret position]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "checkIfOutdated",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~checkIfOutdated",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": null,
    "description": "[checkIfOutdated check if the user is outdated and if it is the case remove its caret and avatar ]",
    "lineNumber": 87,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 290,
    "kind": "function",
    "name": "addAvatar",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~addAvatar",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": null,
    "description": "[addAvatar addAvatar of the user to the editor with correpanding divID]",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "divID",
        "description": "[the id of the div where the avatars are placed]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "getAvatar",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~getAvatar",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": null,
    "description": "[getAvatar return the div that contains this user id]",
    "lineNumber": 122,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 292,
    "kind": "function",
    "name": "removeAvatar",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~removeAvatar",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": null,
    "description": "[removeAvatar remove the avatar of the user from the interface]",
    "lineNumber": 130,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "function",
    "name": "setPseudo",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~setPseudo",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": null,
    "description": "[setPseudo set pseudo  for the user ]",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "Pseudo",
        "description": "[description]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 294,
    "kind": "function",
    "name": "addCursor",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~addCursor",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": null,
    "description": "[addCursor add the cursor to the editor]",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "[{index: index,length: 0}]"
        ],
        "spread": false,
        "optional": false,
        "name": "range",
        "description": "[description]"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 295,
    "kind": "function",
    "name": "Marker",
    "memberof": "lib/view/marker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/marker.js~Marker",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/view/marker.js",
    "importStyle": "Marker",
    "description": "[Marker Module manages the Carets, avatars, pseudonames for the different users of the document]",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "[the id of the the user]"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "lifeTime",
        "description": "[After this time, if no ping or Caret position is received => remove caret and avatar. if lifetime is -1 we didn't add the avatar]"
      },
      {
        "nullable": null,
        "types": [
          "[{index: index,length: 0}]"
        ],
        "spread": false,
        "optional": false,
        "name": "range",
        "description": "[range stars from index with the specified length]"
      },
      {
        "nullable": null,
        "types": [
          "[cursor module]"
        ],
        "spread": false,
        "optional": false,
        "name": "cursorsp",
        "description": "[the used cursor module for quilljs]"
      },
      {
        "nullable": null,
        "types": [
          "[Boolean]"
        ],
        "spread": false,
        "optional": false,
        "name": "cursor",
        "description": "[create the caret or not. If it is from ping, it will be false else true]"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isItME",
        "description": "[is it my caret ? true or false to disable the time if it is true]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 296,
    "kind": "file",
    "name": "lib/view/statesheader.js",
    "content": "\r\nfunction StatesHeader(model, container){\r\n    this.model = model;\r\n    \r\n    this.red = \"#cd2626\";\r\n    this.yellow = \"#eead0e\";\r\n    this.green = \"#228b22\";\r\n    this.blue = \"#00BFFF\";\r\n    \r\n    this.signalingState = jQuery('<i>').appendTo(\"#connectionState\")\r\n        .addClass('fa fa-circle-o-notch fa-2x')\r\n        .attr('data-trigger', 'hover').attr('data-toggle', 'popover')\r\n        .attr('title', 'Signaling server status')\r\n        .attr('data-html', 'true').attr('data-content', '')\r\n        .attr('data-placement', 'bottom')\r\n        .popover()\r\n        .hide();\r\n\r\n    this.networkState = jQuery('#state');\r\n};\r\n\r\nStatesHeader.prototype.setNetworkState = function(state){\r\n    switch (state){\r\n    case \"connected\":\r\n        var connectedString =\r\n            \"<span class='alert-success'>Congratulations!</span> \"+\r\n            \"You are connected to people, and people are \"+\r\n            \"connected to you. <span class='alert-info'>You can start editing \"+\r\n            \"together</span>.\";\r\n        this.networkState.css(\"color\", this.green);\r\n        this.networkState.attr(\"data-content\", connectedString);\r\n        break;\r\n    case \"partiallyConnected\":\r\n        var partiallyConnectedString =\r\n            \"<span class='alert-warning'>Partially \"+\r\n            \"connected</span>: either you are connected to people, or people \"+\r\n            \"are connected to you. \"+\r\n            \"This is not great, but you <span class='alert-info'> still can \"+\r\n            \"edit.</span>\";\r\n        this.networkState.css(\"color\", this.green);\r\n        this.networkState.attr(\"data-content\", partiallyConnectedString);\r\n        break;\r\n    case \"disconnected\":\r\n        var disconnectedString =\r\n            \"<span class='alert-danger'>Disconnected</span>:\"+\r\n            \" you are currently editing <span class='alert-info'>on\"+\r\n            \" your own</span>.\";\r\n        this.networkState.css(\"color\", this.red);\r\n        this.networkState.attr(\"data-content\", disconnectedString);\r\n        break;\r\n    };\r\n};\r\n\r\nStatesHeader.prototype.setSignalingState = function(state){\r\n    var self = this;\r\n    function blink(){\r\n        self.signalingState.show();\r\n        setTimeout( function(){\r\n            if (self.model.signaling.startedSocket){\r\n                blink();\r\n            } else {\r\n                self.setSignalingState(\"done\");\r\n            };\r\n        }, 1000);\r\n    };\r\n    \r\n    switch (state){\r\n    case \"waitSignaling\":\r\n        this.signalingState.show();\r\n        this.signalingState.removeClass(\"fa-spin\");\r\n        this.signalingState.css(\"color\", this.yellow);\r\n        var waitSignalingString = \"<span class='alert-warning'>Connecting\"+\r\n            \"</span>: establishing a connection with the signaling server. \"+\r\n            \"The latter allows people to join the editing session by using \"+\r\n            \"the provided link. \"+\r\n            \"<i>If this state persists, consider reloading the page.</i>\";\r\n        this.signalingState.attr(\"data-content\", waitSignalingString);\r\n        blink();\r\n        break;\r\n    case \"waitSharer\":\r\n        this.signalingState.show();\r\n        this.signalingState.addClass(\"fa-spin\");\r\n        this.signalingState.css(\"color\", this.blue);\r\n        var waitSharerString = \"The connection to the signaling server has \"+\r\n            \"been successfully established! <span class='alert-info'>Waiting \"+\r\n            \"for the sharer now</span>.\";\r\n        this.signalingState.attr(\"data-content\", waitSharerString);\r\n        blink();\r\n        break;\r\n    case \"waitJoiners\":\r\n        this.signalingState.css(\"color\", this.blue);\r\n        this.signalingState.addClass(\"fa-spin\");\r\n        var waitJoinersString = \"The connection to the signaling server has \"+\r\n            \"been <span class='alert-success'>successfully</span> \"+\r\n            \"established! \"+\r\n            \"The server allows people to join the editing session by using \"+\r\n            \"the provided link. \"+\r\n            \"<span class='alert-info'>Waiting for the collaborators</span>.\"\r\n        this.signalingState.attr(\"data-content\", waitJoinersString);\r\n        blink();\r\n        break;\r\n    case \"done\":\r\n        this.signalingState.show();\r\n        this.signalingState.removeClass(\"fa-spin\");\r\n        var doneString = \"The connection to the signaling server has been \"+\r\n            \"<span class='alert-info'>terminated</span>.\";\r\n        this.signalingState.attr(\"data-content\", doneString);\r\n        this.signalingState.css(\"color\", this.green);\r\n        this.signalingState.fadeOut(6000, \"linear\");\r\n        break;\r\n    };\r\n};\r\n\r\nmodule.exports = StatesHeader;\r\n",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/view/statesheader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "setNetworkState",
    "memberof": "lib/view/statesheader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/statesheader.js~setNetworkState",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/statesheader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "setSignalingState",
    "memberof": "lib/view/statesheader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/statesheader.js~setSignalingState",
    "access": "public",
    "export": false,
    "importPath": "jquery-crate/lib/view/statesheader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "StatesHeader",
    "memberof": "lib/view/statesheader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/view/statesheader.js~StatesHeader",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/view/statesheader.js",
    "importStyle": "StatesHeader",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "container",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 300,
    "kind": "file",
    "name": "lib/view.js",
    "content": "let VEditor = require('./view/editor.js')\r\nlet VLink = require('./view/link.js')\r\nlet VStatesHeader = require('./view/statesheader.js')\r\nlet CStatesHeader = require('./controller/statesheader.js')\r\nlet CEditor = require('./controller/editor.js')\r\n\r\nclass view {\r\n    constructor(options, model) {\r\n        // #2 initialize the view\r\n\r\n        const ce = new CEditor(model, options.signalingOptions.room)\r\n\r\n        const vsh = new VStatesHeader(model, jQuery(\"#state\"))\r\n        \r\n\r\n\r\n        const vl = new VLink(jQuery(\"#sharinglink\"))\r\n\r\n      \r\n        const vsb = jQuery(\"#shareicon\")\r\n  const csh = new CStatesHeader(model, vsh, vl, vsb)\r\n        // #3 initialize the controllers\r\n        // model, statesView, linkView, shareView){\r\n      \r\n\r\n\r\n    }\r\n}\r\n\r\nmodule.exports = view",
    "static": true,
    "longname": "C:/Users/haouari-n/Desktop/CrateV2/jquery-crate/lib/view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 301,
    "kind": "class",
    "name": "view",
    "memberof": "lib/view.js",
    "static": true,
    "longname": "lib/view.js~view",
    "access": "public",
    "export": true,
    "importPath": "jquery-crate/lib/view.js",
    "importStyle": "view",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 302,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/view.js~view",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/view.js~view#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "kind": "index",
    "content": "# jquery-crate\r\n\r\n<i>Keywords: jQuery plugin, distributed, decentralized, collaborative editor </i>\r\n\r\nThe project aims to create a very easy-to-integrate distributed collaborative\r\neditor directly inside your web pages.\r\n\r\n\r\n# Usage\r\n\r\n## Import\r\n```html\r\n<!-- #1 include style dependencies in the header //-->\r\n<link rel='stylesheet' href='path/to/bootstrap.min.css' />\r\n<link rel='stylesheet' href='path/to/font-awesome.min.css' />\r\n```\r\n\r\n```html\r\n<!-- #1 include jquery, bootstrap, zeroclipboard, and the crate plugin //-->\r\n<script src='path/to/jquery.min.js'></script>\r\n<script src='path/to/bootstrap.min.js'></script>\r\n<script src='path/to/ZeroclipBoard.min.js'></script>\r\n\r\n<script src='path/to/jquery-crate.min.js'></script>\r\n```\r\n\r\n## Instantiate\r\n```html\r\n<!-- #2 create the division that will host the distributed editor //-->\r\n<div id='myDistributedEditor'></div>\r\n```\r\n\r\n```javascript\r\n// #3A instantiate a new distributed editor into the targeted division.\r\n// options {\r\n//   signalingOptions: configure the signaling service to join or share the\r\n//     document. {address: http://example.of.signaling.service.address,\r\n//                session: the-session-unique-identifier,\r\n//                connect: true|false }\r\n//   webRTCOptions: configure the STUN/TURN server to establish WebRTC\r\n//     connections.\r\n//   styleOptions: change the default styling options of the editor.\r\n//   name: the name of the document\r\n//   importFromJSON: the json object containing the aformentionned options plus\r\n//     the saved sequence. If any of the other above options are specified, the\r\n//     option in the json object are erased by them.\r\n\r\n$('#myDistributedEditor').cratify( options );\r\n```\r\n\r\n## Access\r\n\r\n```javascript\r\nvar editor = $('myDistributedEditor').cratify(args)[0];\r\n\r\n// #4 access to the header object\r\neditor.header.prepend( newMenuButton1 );\r\neditor.header.append( newMenuButton2 );\r\n\r\n// #5 access to the underlying model of the distributed document\r\nvar uid = editor.model.uid;\r\nvar broadcast = editor.model.broadcast;\r\n// etc.\r\n```\r\n\r\n# Project\r\n\r\nThe project [CRATE](https://github.com/Chat-Wane/CRATE) uses cratify to create\r\nits distributed editors.\r\n\r\n# Contribute\r\n\r\nDevelopers are very welcome to contribute!\r\n\r\nDo not hesitate to request features or to report bugs!\r\n\r\n",
    "longname": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n    \"name\": \"jquery-crate\",\n    \"version\": \"0.0.10\",\n    \"author\": \"Chat-Wane <grumpy.chat.wane@gmail.com>\",\n    \"description\": \"Cratify tool that turns a division into a distributed and decentralized collaborative editor\",\n    \"main\": \"./lib/cratify.js\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/haouarin/jquery-crate.git\"\n    },\n    \"keywords\": [\n        \"Random Peer Sampling\",\n        \"Adaptive\",\n        \"browser-to-browser communication\",\n        \"WebRTC\"\n    ],\n    \"dependencies\": {\n        \"BigInt\": \"^5.4.5\",\n        \"animals\": \"git://github.com/nhaouari/animals.git#master\",\n        \"brace\": \"0.5.x\",\n        \"clone\": \"^1.0.3\",\n        \"debug\": \"^2.6.1\",\n        \"esdoc\": \"^1.0.4\",\n        \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n        \"esdoc-node\": \"^1.0.3\",\n        \"esdoc-standard-plugin\": \"^1.0.0\",\n        \"foglet-core\": \"^4.0.1\",\n        \"jquery-qrcode\": \"git://github.com/lrsjng/jquery-qrcode.git#master\",\n        \"lodash\": \"^4.17.4\",\n        \"lodash.merge\": \"^4.6.1\",\n        \"marked\": \"0.3.x\",\n        \"shortid\": \"*\",\n        \"simple-peer\": \"^8.1.1\",\n        \"socket.io-client\": \"1.3.x\",\n        \"sorted-cmp-array\": \"2.0.x\",\n        \"spray-wrtc\": \"^2.0.4\",\n        \"string-hash\": \"1.1.x\",\n        \"uglify-js\": \"^1.3.5\",\n        \"unicast-definition\": \"^0.1.0\",\n        \"uuid\": \"^3.0.1\"\n    },\n    \"devDependencies\": {\n        \"browserify\": \"6.2.x\",\n        \"brfs\": \"1.4.x\"\n    },\n    \"browser\": {\n        \"jquery-qrcode\": \"./node_modules/jquery-qrcode/dist/jquery-qrcode.js\"\n    },\n    \"browserify\": {\n        \"transform\": [\n            \"brfs\"\n        ]\n    },\n    \"scripts\": {\n        \"debug\": \"browserify lib/session.js --standalone session --debug > build/jquery-crate.bundle.debug.js\",\n        \"build\": \"browserify lib/session.js --standalone session > build/jquery-crate.bundle.js\",\n        \"watch\": \"watchify lib/session.js --standalone session -o build/jquery-crate.bundle.js -d -v\",\n        \"docs\": \"esdoc -c esdoc.json\"\n    },\n    \"license\": \"MIT\"\n}\n",
    "longname": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]