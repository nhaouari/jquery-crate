{
  "stats": {
    "suites": 5,
    "tests": 28,
    "passes": 28,
    "pending": 0,
    "failures": 0,
    "start": "2019-01-02T19:51:11.664Z",
    "end": "2019-01-02T19:52:11.244Z",
    "duration": 59580,
    "testsRegistered": 28,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "69531c27-8364-474f-a6e5-580bbec9cf54",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "e77503c1-4621-4faf-a5c8-c566d937fffe",
        "title": "Testing Requirements ",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\0- Requirement_test.js",
        "file": "\\test\\0- Requirement_test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Check signaling server",
            "fullTitle": "Testing Requirements  Check signaling server",
            "timedOut": false,
            "duration": 16974,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"https://carteserver.herokuapp.com\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "0bcab746-1f58-4178-a9ce-d9bc2caf3c2b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Get ICES",
            "fullTitle": "Testing Requirements  Get ICES",
            "timedOut": false,
            "duration": 685,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"Number of ICEs 4\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "6b459b84-eeb4-4b61-a3b7-7163ec8c9b09",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check TURN STUN Servers",
            "fullTitle": "Testing Requirements  Check TURN STUN Servers",
            "timedOut": false,
            "duration": 5201,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "1e42f4d9-a5fe-444d-a998-a14fab571f0d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "0bcab746-1f58-4178-a9ce-d9bc2caf3c2b",
          "6b459b84-eeb4-4b61-a3b7-7163ec8c9b09",
          "1e42f4d9-a5fe-444d-a998-a14fab571f0d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 22860,
        "root": false,
        "rootEmpty": false,
        "_timeout": 20000
      },
      {
        "uuid": "6e0d175b-ad7c-4eb5-bfb4-33e34ec0f993",
        "title": "Connectivity ",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\1- Connectivity_test.js",
        "file": "\\test\\1- Connectivity_test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Test Join sessions 50 (1 times, timeout==5000)",
            "fullTitle": "Connectivity  Test Join sessions 50 (1 times, timeout==5000)",
            "timedOut": false,
            "duration": 5508,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"Connected Graphs 1/1\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "8db3b8fd-c64a-4c3f-b7bd-0d0c50b8be6d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test Join sessions 100 (1 times, timeout==5000)",
            "fullTitle": "Connectivity  Test Join sessions 100 (1 times, timeout==5000)",
            "timedOut": false,
            "duration": 8525,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"Connected Graphs 1/1\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "004e5872-7efd-474c-a126-f7e8b868b5bd",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8db3b8fd-c64a-4c3f-b7bd-0d0c50b8be6d",
          "004e5872-7efd-474c-a126-f7e8b868b5bd"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 14033,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "3e7da117-5c09-42eb-b81d-9a122cbfb806",
        "title": "Editing Test ",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\2- Editing_test.js",
        "file": "\\test\\2- Editing_test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Testing insertion Nbsessions 10, timeBetweenInsertions 50,stringSize 10",
            "fullTitle": "Editing Test  Testing insertion Nbsessions 10, timeBetweenInsertions 50,stringSize 10",
            "timedOut": false,
            "duration": 3471,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "e1557509-a7a5-46c1-9e8b-298c6451ed18",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing insertion&&remove Nbsessions 10, timeBetweenInsertions 50,stringSize 10",
            "fullTitle": "Editing Test  Testing insertion&&remove Nbsessions 10, timeBetweenInsertions 50,stringSize 10",
            "timedOut": false,
            "duration": 6664,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "9c029b1c-e6a9-4e03-827d-5c341f4c7b8c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "e1557509-a7a5-46c1-9e8b-298c6451ed18",
          "9c029b1c-e6a9-4e03-827d-5c341f4c7b8c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 10135,
        "root": false,
        "rootEmpty": false,
        "_timeout": 20000
      },
      {
        "uuid": "3e44fac1-e9fa-4db7-8130-09248925fc32",
        "title": "DocumentBuilder",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\Unit_tests\\DocumentBuilder_test.js",
        "file": "\\test\\Unit_tests\\DocumentBuilder_test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "DocumentBuilder \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "documentBuilder = new _DocumentBuilder2.default({}, crate);",
            "err": {},
            "isRoot": false,
            "uuid": "b469bda1-1c1b-415d-87bd-4b510e5392b5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "GUID",
            "fullTitle": "DocumentBuilder GUID",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "documentBuilder.GUID();\nassert(documentBuilder.GUID().length > 0, 'GUID is not working');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "2afddfad-8dda-42b1-9fbf-08af4f535af4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getLocalStorageData (Not yet)",
            "fullTitle": "DocumentBuilder getLocalStorageData (Not yet)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert(true, 'Unit test not yet implemented');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "ff6e0406-6c22-4d78-9d9f-186afb02b668",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getNewFoglet (Not yet)",
            "fullTitle": "DocumentBuilder getNewFoglet (Not yet)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert(true, 'Unit test not yet implemented');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "a91e3d31-7c89-4acd-aa8b-38ea85352837",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setDocumentTitle",
            "fullTitle": "DocumentBuilder setDocumentTitle",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var options = {};\ndocumentBuilder.setDocumentTitle(options);\nassert(options.name === 'Untitled document', 'when there it is a new document');\noptions = {\n  importFromJSON: {\n    title: 'test'\n  }\n};\ndocumentBuilder.setDocumentTitle(options);\nassert(options.name === 'test', 'when it is a document saved locally');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "ece43822-ec8b-4dc3-9c16-bee33620caf8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setSignalingOptions",
            "fullTitle": "DocumentBuilder setSignalingOptions",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var options = {};\ndocumentBuilder.setSignalingOptions(options, 'sesssionId');\nassert(options.signalingOptions.session, 'there is session');\nassert(options.signalingOptions.address, 'there is a signaling server');\nassert(options.storageServer.length >= 0, 'there is storageServer');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "a6e0fab6-8aa4-4e17-92bf-f2fee2ece092",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setTemporarySessionID",
            "fullTitle": "DocumentBuilder setTemporarySessionID",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var options = { user: { id: 'id' } };\ndocumentBuilder.setTemporarySessionID(options);\nassert(options.editingSessionID, 'there is editingSessionID');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "30ba5b65-390c-442d-9060-87522fe05e58",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setUser",
            "fullTitle": "DocumentBuilder setUser",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var options = {};\ndocumentBuilder.setUser(options);\nassert(options.user.id.length > 0, 'there is id');\nassert(options.user.pseudo.length > 0, 'there is pseudo');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "ed67904d-f3e0-4afc-bf77-68ff7bbe12bf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "prepareOptions",
            "fullTitle": "DocumentBuilder prepareOptions",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert(true, ' it is just composed of the other methods');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "3aba03ed-08a1-4ede-b7d7-4999e3b1b852",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "buildDocument",
            "fullTitle": "DocumentBuilder buildDocument",
            "timedOut": false,
            "duration": 1001,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "this.timeout(10000);\nvar configuration = {\n  id: 'idtest',\n  pseudo: 'test',\n  signalingServer: 'https://carteserver.herokuapp.com',\n  ICEsURL: 'https://carteserver.herokuapp.com/ice',\n  stunTurn: '23.21.150.121'\n};\nvar defaultConfig = {\n  signalingOptions: {\n    address: configuration.signalingServer\n  },\n  stun: configuration.stunTurn, // default google ones if xirsys not\n  ICEsURL: configuration.ICEsURL,\n  containerID: 'content-default',\n  display: false,\n  PingPeriod: 1000000000,\n  AntiEntropyPeriod: 1000000000,\n  documentActivityTimeout: 60 * 10 * 1000,\n  wrtc: _wrtc2.default\n};\ndocumentBuilder = new _DocumentBuilder2.default(defaultConfig, crate);\ndocumentBuilder.buildDocument('TestDocument', 0).then(function (doc) {\n  assert(doc.hasOwnProperty('_options'));\n  assert(doc.hasOwnProperty('documentIndex'));\n  assert(doc.documentIndex >= 0);\n  assert(doc.hasOwnProperty('crate'));\n  assert(doc.hasOwnProperty('documentId'));\n  assert(doc.documentId === 'TestDocument');\n  doc.on('connected', function () {\n    done();\n  });\n  doc.init();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d6a3d47f-165a-431d-a9ff-2e7a2db4dca0",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2afddfad-8dda-42b1-9fbf-08af4f535af4",
          "ff6e0406-6c22-4d78-9d9f-186afb02b668",
          "a91e3d31-7c89-4acd-aa8b-38ea85352837",
          "ece43822-ec8b-4dc3-9c16-bee33620caf8",
          "a6e0fab6-8aa4-4e17-92bf-f2fee2ece092",
          "30ba5b65-390c-442d-9060-87522fe05e58",
          "ed67904d-f3e0-4afc-bf77-68ff7bbe12bf",
          "3aba03ed-08a1-4ede-b7d7-4999e3b1b852",
          "d6a3d47f-165a-431d-a9ff-2e7a2db4dca0"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1004,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "ad1f880d-80bb-4bec-99f1-45dfd5b341bf",
        "title": "Main class",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\Unit_tests\\main_test.js",
        "file": "\\test\\Unit_tests\\main_test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Main class \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "crate = new _main2.default({}, DocumentBuilderMock);",
            "err": {},
            "isRoot": false,
            "uuid": "5bf84171-26ac-4f45-978a-64cdfff99003",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "createNewDocument && addDocument",
            "fullTitle": "Main class createNewDocument && addDocument",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "c4a2b0a2-3685-4928-a8ca-70076c6e4e39",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getDocument ",
            "fullTitle": "Main class getDocument ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "ae1af283-9676-49f1-aedc-2e3ee2e84b1f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "removeDocument ",
            "fullTitle": "Main class removeDocument ",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "b182d997-bf7f-46ee-9dad-668956a39baf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getNumberOfDocuments ",
            "fullTitle": "Main class getNumberOfDocuments ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "a8cd93d8-48fd-4717-b927-e9667a3c1319",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "focusInToDocument ",
            "fullTitle": "Main class focusInToDocument ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "a4c98ab4-c567-40fe-b18b-a516a972ad56",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "focusOutToDocument ",
            "fullTitle": "Main class focusOutToDocument ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "8acd9de4-e82f-4e08-900d-8d524a725453",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getIndexFromDocumentId ",
            "fullTitle": "Main class getIndexFromDocumentId ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "3fdb163d-547b-406b-a992-54c38125ed03",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getDocumentIdFromIndex ",
            "fullTitle": "Main class getDocumentIdFromIndex ",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "10abf3cd-cf9e-41fb-8555-2a11aa745cd4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setActualDocument ",
            "fullTitle": "Main class setActualDocument ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "7cf5edb4-79b5-4cbf-b112-b6310d0e8e47",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "updateView ",
            "fullTitle": "Main class updateView ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "4918acfe-8c7a-4749-9063-84f6735ae174",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "moveTo ",
            "fullTitle": "Main class moveTo ",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "d9dff953-c5fc-4d22-94bb-4a19affad664",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "exist ",
            "fullTitle": "Main class exist ",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "60b5e450-73d6-4473-92f1-9d7e5f8e4fd3",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c4a2b0a2-3685-4928-a8ca-70076c6e4e39",
          "ae1af283-9676-49f1-aedc-2e3ee2e84b1f",
          "b182d997-bf7f-46ee-9dad-668956a39baf",
          "a8cd93d8-48fd-4717-b927-e9667a3c1319",
          "a4c98ab4-c567-40fe-b18b-a516a972ad56",
          "8acd9de4-e82f-4e08-900d-8d524a725453",
          "3fdb163d-547b-406b-a992-54c38125ed03",
          "10abf3cd-cf9e-41fb-8555-2a11aa745cd4",
          "7cf5edb4-79b5-4cbf-b112-b6310d0e8e47",
          "4918acfe-8c7a-4749-9063-84f6735ae174",
          "d9dff953-c5fc-4d22-94bb-4a19affad664",
          "60b5e450-73d6-4473-92f1-9d7e5f8e4fd3"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 23,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}