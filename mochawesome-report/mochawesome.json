{
  "stats": {
    "suites": 5,
    "tests": 28,
    "passes": 28,
    "pending": 0,
    "failures": 0,
    "start": "2018-12-20T16:12:00.347Z",
    "end": "2018-12-20T16:12:38.787Z",
    "duration": 38440,
    "testsRegistered": 28,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "bd5dc07c-8dee-47c8-bb7d-3f5a137b9006",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "f7f9f587-ae42-4b42-8170-358a6d638c63",
        "title": "Testing Requirements ",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\0- Requirement_test.js",
        "file": "\\test\\0- Requirement_test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Check signaling server",
            "fullTitle": "Testing Requirements  Check signaling server",
            "timedOut": false,
            "duration": 158,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"https://carteserver.herokuapp.com\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "5e4c2a96-b428-4ff9-aabd-8252e8468d83",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Get ICES",
            "fullTitle": "Testing Requirements  Get ICES",
            "timedOut": false,
            "duration": 264,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"Number of ICEs 4\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "cf699f1d-bdad-4660-9979-5243140f374b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Check TURN STUN Servers",
            "fullTitle": "Testing Requirements  Check TURN STUN Servers",
            "timedOut": false,
            "duration": 6502,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "3d1b36f2-7f56-41cb-8fde-e24849ecd2b9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5e4c2a96-b428-4ff9-aabd-8252e8468d83",
          "cf699f1d-bdad-4660-9979-5243140f374b",
          "3d1b36f2-7f56-41cb-8fde-e24849ecd2b9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 6924,
        "root": false,
        "rootEmpty": false,
        "_timeout": 20000
      },
      {
        "uuid": "c1740ff4-d647-4fe1-a590-d1ddfbc8a352",
        "title": "Connectivity ",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\1- Connectivity_test.js",
        "file": "\\test\\1- Connectivity_test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Test Join sessions 50 (1 times, timeout==5000)",
            "fullTitle": "Connectivity  Test Join sessions 50 (1 times, timeout==5000)",
            "timedOut": false,
            "duration": 5496,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"Connected Graphs 1/1\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "3d11b8c4-3082-427c-b1a4-72ad5eea1981",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test Join sessions 100 (1 times, timeout==5000)",
            "fullTitle": "Connectivity  Test Join sessions 100 (1 times, timeout==5000)",
            "timedOut": false,
            "duration": 6508,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "\"Connected Graphs 1/1\"",
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "70fcee6e-a433-436c-9b83-cbc2734cb93b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "3d11b8c4-3082-427c-b1a4-72ad5eea1981",
          "70fcee6e-a433-436c-9b83-cbc2734cb93b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 12004,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "7c158e6c-5c09-4c94-bfd6-4942d2d239d2",
        "title": "Editing Test ",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\2- Editing_test.js",
        "file": "\\test\\2- Editing_test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Testing insertion Nbsessions 10, timeBetweenInsertions 50,stringSize 10",
            "fullTitle": "Editing Test  Testing insertion Nbsessions 10, timeBetweenInsertions 50,stringSize 10",
            "timedOut": false,
            "duration": 2908,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "8d757bef-8baa-4c92-a628-6e8bafbd5163",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Testing insertion&&remove Nbsessions 10, timeBetweenInsertions 50,stringSize 10",
            "fullTitle": "Editing Test  Testing insertion&&remove Nbsessions 10, timeBetweenInsertions 50,stringSize 10",
            "timedOut": false,
            "duration": 4578,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "a3041b1d-1092-4107-a446-1260b354be37",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8d757bef-8baa-4c92-a628-6e8bafbd5163",
          "a3041b1d-1092-4107-a446-1260b354be37"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 7486,
        "root": false,
        "rootEmpty": false,
        "_timeout": 20000
      },
      {
        "uuid": "9336a85d-1ed7-4263-9477-76c7776a624c",
        "title": "DocumentBuilder",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\Unit_tests\\DocumentBuilder_test.js",
        "file": "\\test\\Unit_tests\\DocumentBuilder_test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "DocumentBuilder \"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "documentBuilder = new _DocumentBuilder2.default({}, crate);",
            "err": {},
            "isRoot": false,
            "uuid": "6eeb3259-e78a-45d2-9daf-8a782d862dec",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "GUID",
            "fullTitle": "DocumentBuilder GUID",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "documentBuilder.GUID();\nassert(documentBuilder.GUID().length > 0, 'GUID is not working');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "994daa1c-6860-44f9-91f1-39d5844f8737",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getLocalStorageData (Not yet)",
            "fullTitle": "DocumentBuilder getLocalStorageData (Not yet)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert(true, 'Unit test not yet implemented');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "1b712dad-69b9-4702-a0f0-7bda6938fbf1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getNewFoglet (Not yet)",
            "fullTitle": "DocumentBuilder getNewFoglet (Not yet)",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert(true, 'Unit test not yet implemented');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "7bf46ced-44e2-462c-bade-756dc1e1b6ef",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setDocumentTitle",
            "fullTitle": "DocumentBuilder setDocumentTitle",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var options = {};\ndocumentBuilder.setDocumentTitle(options);\nassert(options.name === 'Untitled document', 'when there it is a new document');\noptions = {\n  importFromJSON: {\n    title: 'test'\n  }\n};\ndocumentBuilder.setDocumentTitle(options);\nassert(options.name === 'test', 'when it is a document saved locally');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "91ed2798-eb79-416d-81d5-93815ca9763c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setSignalingOptions",
            "fullTitle": "DocumentBuilder setSignalingOptions",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var options = {};\ndocumentBuilder.setSignalingOptions(options, 'sesssionId');\nassert(options.signalingOptions.session, 'there is session');\nassert(options.signalingOptions.address, 'there is a signaling server');\nassert(options.storageServer.length >= 0, 'there is storageServer');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "0b06c0fd-f004-455b-8cc5-7212ba65b25d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setTemporarySessionID",
            "fullTitle": "DocumentBuilder setTemporarySessionID",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var options = { user: { id: 'id' } };\ndocumentBuilder.setTemporarySessionID(options);\nassert(options.editingSessionID, 'there is editingSessionID');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "61c551fe-456a-4e4f-b9e8-8197a3ebb4cc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setUser",
            "fullTitle": "DocumentBuilder setUser",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var options = {};\ndocumentBuilder.setUser(options);\nassert(options.user.id.length > 0, 'there is id');\nassert(options.user.pseudo.length > 0, 'there is pseudo');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "fe4c021f-156d-4a1a-9207-5ba0dedb56a8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "prepareOptions",
            "fullTitle": "DocumentBuilder prepareOptions",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "assert(true, ' it is just composed of the other methods');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "eca91a5f-43fb-4164-8c42-f8b0b4499189",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "buildDocument",
            "fullTitle": "DocumentBuilder buildDocument",
            "timedOut": false,
            "duration": 598,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "this.timeout(10000);\nvar configuration = {\n  id: 'idtest',\n  pseudo: 'test',\n  signalingServer: 'https://carteserver.herokuapp.com',\n  ICEsURL: 'https://carteserver.herokuapp.com/ice',\n  stunTurn: '23.21.150.121'\n};\nvar defaultConfig = {\n  signalingOptions: {\n    address: configuration.signalingServer\n  },\n  stun: configuration.stunTurn, // default google ones if xirsys not\n  ICEsURL: configuration.ICEsURL,\n  containerID: 'content-default',\n  display: false,\n  PingPeriod: 1000000000,\n  AntiEntropyPeriod: 1000000000,\n  documentActivityTimeout: 60 * 10 * 1000,\n  wrtc: _wrtc2.default\n};\ndocumentBuilder = new _DocumentBuilder2.default(defaultConfig, crate);\ndocumentBuilder.buildDocument('TestDocument', 0).then(function (doc) {\n  assert(doc.hasOwnProperty('_options'));\n  assert(doc.hasOwnProperty('documentIndex'));\n  assert(doc.documentIndex >= 0);\n  assert(doc.hasOwnProperty('crate'));\n  assert(doc.hasOwnProperty('documentId'));\n  assert(doc.documentId === 'TestDocument');\n  doc.on('connected', function () {\n    done();\n  });\n  doc.init();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "0823a056-ee01-4012-b97f-367d917c187c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "994daa1c-6860-44f9-91f1-39d5844f8737",
          "1b712dad-69b9-4702-a0f0-7bda6938fbf1",
          "7bf46ced-44e2-462c-bade-756dc1e1b6ef",
          "91ed2798-eb79-416d-81d5-93815ca9763c",
          "0b06c0fd-f004-455b-8cc5-7212ba65b25d",
          "61c551fe-456a-4e4f-b9e8-8197a3ebb4cc",
          "fe4c021f-156d-4a1a-9207-5ba0dedb56a8",
          "eca91a5f-43fb-4164-8c42-f8b0b4499189",
          "0823a056-ee01-4012-b97f-367d917c187c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 599,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "75fa920e-674d-4a91-8bf9-43e4c2919902",
        "title": "Main class",
        "fullFile": "C:\\Users\\haouari-n\\Desktop\\CrateV2\\jquery-crate\\test\\Unit_tests\\main_test.js",
        "file": "\\test\\Unit_tests\\main_test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Main class \"before each\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "crate = new _main2.default({}, DocumentBuilderMock);",
            "err": {},
            "isRoot": false,
            "uuid": "6dd598c7-ba9e-4888-96e1-ae80377f973d",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "createNewDocument && addDocument",
            "fullTitle": "Main class createNewDocument && addDocument",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "6e87e9ea-c8c3-4dc4-8280-c552ce45e6d2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getDocument ",
            "fullTitle": "Main class getDocument ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "5a31a552-0ac3-4067-859c-eff2df614f54",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "removeDocument ",
            "fullTitle": "Main class removeDocument ",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "30992e90-edb4-42ce-868d-b3d72dd381e7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getNumberOfDocuments ",
            "fullTitle": "Main class getNumberOfDocuments ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "d6b7cdcf-3d2a-488c-9dde-6ef2af33196b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "focusInToDocument ",
            "fullTitle": "Main class focusInToDocument ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "bacab221-7f35-402f-8b30-dca7177f8f0e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "focusOutToDocument ",
            "fullTitle": "Main class focusOutToDocument ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "5fa32c2f-bf57-4cbe-be72-7ef3e65a3c81",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getIndexFromDocumentId ",
            "fullTitle": "Main class getIndexFromDocumentId ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "c80c6d37-bd6b-4ef0-b5a3-9a8cc108221f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "getDocumentIdFromIndex ",
            "fullTitle": "Main class getDocumentIdFromIndex ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "3a0cbf6a-4eb5-47f4-9e08-cf46f54db086",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "setActualDocument ",
            "fullTitle": "Main class setActualDocument ",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "76f3cb6a-a957-44f8-864e-c8d6e05310bd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "updateView ",
            "fullTitle": "Main class updateView ",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "6f93bd0a-7bea-4349-a306-c5435888a586",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "moveTo ",
            "fullTitle": "Main class moveTo ",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "5ac30228-8d11-4242-9541-33fdc79a18ce",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "exist ",
            "fullTitle": "Main class exist ",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); });",
            "err": {},
            "isRoot": false,
            "uuid": "179f4875-e919-473c-9650-32c074b95f3d",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6e87e9ea-c8c3-4dc4-8280-c552ce45e6d2",
          "5a31a552-0ac3-4067-859c-eff2df614f54",
          "30992e90-edb4-42ce-868d-b3d72dd381e7",
          "d6b7cdcf-3d2a-488c-9dde-6ef2af33196b",
          "bacab221-7f35-402f-8b30-dca7177f8f0e",
          "5fa32c2f-bf57-4cbe-be72-7ef3e65a3c81",
          "c80c6d37-bd6b-4ef0-b5a3-9a8cc108221f",
          "3a0cbf6a-4eb5-47f4-9e08-cf46f54db086",
          "76f3cb6a-a957-44f8-864e-c8d6e05310bd",
          "6f93bd0a-7bea-4349-a306-c5435888a586",
          "5ac30228-8d11-4242-9541-33fdc79a18ce",
          "179f4875-e919-473c-9650-32c074b95f3d"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 23,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}